[{"path":[]},{"path":"epiforecasts.io/forecast.vocs/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"epiforecasts.io/forecast.vocs/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"epiforecasts.io/forecast.vocs/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"epiforecasts.io/forecast.vocs/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"epiforecasts.io/forecast.vocs/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement [INSERT CONTACT METHOD]. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"epiforecasts.io/forecast.vocs/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"epiforecasts.io/forecast.vocs/CODE_OF_CONDUCT.html","id":"1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"epiforecasts.io/forecast.vocs/CODE_OF_CONDUCT.html","id":"2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"epiforecasts.io/forecast.vocs/CODE_OF_CONDUCT.html","id":"3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"epiforecasts.io/forecast.vocs/CODE_OF_CONDUCT.html","id":"4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"epiforecasts.io/forecast.vocs/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.0, available https://www.contributor-covenant.org/version/2/0/ code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https:// www.contributor-covenant.org/translations.","code":""},{"path":"epiforecasts.io/forecast.vocs/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 forecast.vocs authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"epiforecasts.io/forecast.vocs/articles/model-definitions.html","id":"single-strain","dir":"Articles","previous_headings":"","what":"Single strain","title":"Model definitions","text":"model mean (\\(\\lambda_t\\)) reported cases (\\(C_t\\)) order 1 autoregressive (AR(1)) process log scale time unit (\\(t\\)). model initialised assuming initial reported cases representative small amount error (2.5%). \\[\\begin{align}   \\log \\lambda_0 &\\sim \\text{LogNormal}\\left(\\log C_0 , 0.025 \\times \\log C_0 \\right) \\\\   \\log \\lambda_t &= \\log \\lambda_{t-1} + r_t \\end{align}\\] \\(r_t\\) can interpreted growth rate exponential \\(r_t\\) effective reproduction number (\\(R_t\\)) assuming mean generation time equal scaling rate used (see documentation scale_r ?forecast()). \\(r_t\\) modelled differenced AR(1) process, \\[\\begin{align}   r_0 &\\sim \\text{Normal}\\left(0, 0.25 \\right) \\\\   r_t &= r_{t-1} + \\epsilon_t  \\\\   \\epsilon_0 &= \\eta_0 \\\\   \\epsilon_t &= \\beta \\epsilon_{t-1} + \\eta_t \\end{align}\\] , \\[\\begin{align}   \\eta_t &\\sim \\text{Normal}\\left(0, \\sigma \\right) \\\\   \\sigma &\\sim \\text{Normal}\\left(0, 0.1 \\right) \\\\   \\beta &\\sim \\text{Normal}\\left(0, 1 \\right) \\end{align}\\] assume negative binomial observation model overdispersion \\(\\phi_c\\) reported cases (\\(C_t\\)), \\[\\begin{align}   C_{t} &\\sim \\text{NegBinomial}\\left(\\lambda_t, \\phi_c\\right) \\\\   \\frac{1}{\\sqrt{\\phi_c}} &\\sim \\text{Normal}(0, 1)  \\end{align}\\] \\(\\sigma\\), \\(\\frac{1}{\\sqrt{phi_c}}\\) truncated greater 0 \\(\\beta\\) truncated -1 1. Optionally Poisson observation model may instead used (see documentation overdispersion ?forecast()). stan code model available can loaded R using following code,","code":"library(forecast.vocs) readLines(fv_model(strains = 1, compile = FALSE))"},{"path":"epiforecasts.io/forecast.vocs/articles/model-definitions.html","id":"two-strain","dir":"Articles","previous_headings":"","what":"Two strain","title":"Model definitions","text":"model strain dynamics using single strain model starting point addition strain specific AR(1) variation beta binomial (optionally binomial) observation process sequence data. full two strain model described . Parameters related variant concern (VoC) given \\(\\delta\\) superscript parameters related non-VoC cases given \\(o\\) superscript. Mean reported cases defined using AR(1) process log scale strain combined overall mean reported cases. \\[\\begin{align}   \\log \\lambda_0 &\\sim \\text{LogNormal}\\left(\\log C_0 , 0.025 \\times \\log C_0 \\right) \\\\   \\log \\lambda^{\\delta}_0 &\\sim \\text{LogNormal}\\left(\\log C^{\\delta}_0 , 0.025 \\times \\log C^{\\delta}_0 \\right) \\\\   \\log \\lambda^{o}_0 &= \\log \\left(\\lambda_0 - \\lambda^{\\delta}_0 \\right) \\\\   \\log \\lambda^{\\delta}_t &= \\log \\lambda^{\\delta}_{t-1} + r^{\\delta}_t \\\\   \\log \\lambda^{o}_t &= \\log \\lambda^{o}_{t-1} + r^{o}_t \\\\   \\lambda_t &= \\lambda^{\\delta}_t + \\lambda^{o}_t \\end{align}\\] \\(C^{\\delta}_0\\) derived calculating mean proportion cases VoC first time point using overall number reported cases, number sequenced cases, number sequences positive VoC. growth rate VoC non-VoC cases (\\(r^{o, \\delta}_t\\)) modelled combination overall growth rate (\\(r_t\\) defined single strain model), strain specific modifier (\\(s^{o, \\delta}_0\\)), AR(1) error term post introduction (\\(\\epsilon^{o, \\delta}_t\\)). \\[\\begin{align}   r^{o, \\delta}_t &= r_t + s^{o, \\delta} + \\epsilon^{o, \\delta}_t \\\\   \\epsilon^{o, \\delta}_0 &= 0 \\\\   \\epsilon^{o, \\delta}_t &= \\epsilon^{o, \\delta}_{t-1} + \\eta^{o, \\delta} \\end{align}\\] , \\[\\begin{align}   \\eta^{o, \\delta}_t &\\sim \\text{Normal}\\left(0, \\sigma^{o, \\delta} \\right) \\\\   \\sigma^{o, \\delta} &\\sim \\text{Normal}\\left(0, 0.1 \\right) \\\\   s^o &= 0 \\\\   s^{\\beta} &\\sim \\text{Normal}(0, 0.5) \\end{align}\\] assumes uninformed transmissibility difference VoC vs non-VoC cases. strongly encouraged users use domain knowledge inform prior. relationship variants can altered VoC differs transmissibility difference (\\(s^{\\beta}\\)) non-VOC strain variation time shared strains. Optionally strains can also modelled evolve independently time. See documentation variant_relationship ?forecast() details.  Finally, mean proportion samples VoC (\\(p_t\\)) estimated using mean reported cases VoC overall mean reported cases. \\[\\begin{equation}    p_t = \\frac{\\lambda^{\\delta}_t}{\\lambda_t} \\end{equation}\\] assume beta binomial observation model number sequences (\\(N_t\\)) positive (\\(P_t\\)) VoC overdispersion \\(\\phi_s\\). \\[\\begin{align}   P_{t} &\\sim \\mathrm{BetaBinomial}\\left(N_t, p_t \\phi_s, (1 - p_t) \\phi_s\\right) \\\\   \\frac{1}{\\sqrt{\\phi_s}} &\\sim \\mathcal{N}(0, 1)  \\end{align}\\] \\(\\sigma^{o, \\delta}\\), \\(\\frac{1}{\\sqrt{\\phi_s}}\\) truncated greater 0. binomial observation model also available (see documentation overdispersion ?forecast()). stan code model available can loaded R using following code,","code":"library(forecast.vocs) readLines(fv_model(strains = 2, compile = FALSE))"},{"path":"epiforecasts.io/forecast.vocs/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Sam Abbott. Author, maintainer.","code":""},{"path":"epiforecasts.io/forecast.vocs/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Sam Abbott (2021). forecast.vocs: Forecast case sequence notifications using variant concern strain dynamics,  DOI: 10.5281/zenodo.5559016","code":"@Article{,   title = {forecast.vocs: Forecast case and sequence notifications using variant of concern strain dynamics},   author = {Sam Abbott},   journal = {Zenodo},   year = {2021},   doi = {10.5281/zenodo.5559016}, }"},{"path":"epiforecasts.io/forecast.vocs/index.html","id":"forecast-case-and-sequence-notifications-using-variant-of-concern-strain-dynamics","dir":"","previous_headings":"","what":"Forecast Case and Sequence Notifications using Variant of Concern\n    Strain Dynamics","title":"Forecast Case and Sequence Notifications using Variant of Concern\n    Strain Dynamics","text":"Contains models tools produce short-term forecasts case sequence notifications assuming circulation either one two variants. Tools also provided allow evaluation use sequence data short-term forecasts real-world settings user generated scenarios.","code":""},{"path":[]},{"path":"epiforecasts.io/forecast.vocs/index.html","id":"installing-the-package","dir":"","previous_headings":"Installation","what":"Installing the package","title":"Forecast Case and Sequence Notifications using Variant of Concern\n    Strain Dynamics","text":"Install stable development version package : Install unstable development GitHub using following,","code":"install.packages(\"forecast.vocs\", repos = \"https://epiforecasts.r-universe.dev\") remotes::install_github(\"epiforecasts/forecast.vocs\", dependencies = TRUE)"},{"path":"epiforecasts.io/forecast.vocs/index.html","id":"installing-cmdstan","dir":"","previous_headings":"Installation","what":"Installing CmdStan","title":"Forecast Case and Sequence Notifications using Variant of Concern\n    Strain Dynamics","text":"don’t already CmdStan installed , addition installing forecast.vocs, also necessary install CmdStan using CmdStanR’s install_cmdstan() function enable model fitting forecast.vocs. suitable C++ toolchain also required. Instructions provided Getting started CmdStanR vignette. See CmdStanR documentation details support.","code":"cmdstanr::install_cmdstan()"},{"path":"epiforecasts.io/forecast.vocs/index.html","id":"quick-start","dir":"","previous_headings":"","what":"Quick start","title":"Forecast Case and Sequence Notifications using Variant of Concern\n    Strain Dynamics","text":"quick start uses data Germany includes COVID-19 notifications sequences sequences either positive negative Delta variant. shows produce forecasts one two strain model 19th June 2021 latest available data estimated approximately 7% COVID-19 positive Delta variant. Note estimated growth rates reproduction numbers shown rescaled using assumed generation time 5.5 days weakly informative prior centred around Delta 50% transmissible non-Delta cases used.","code":"library(forecast.vocs) options(mc.cores = 4)  obs <- filter_by_availability(   germany_covid19_delta_obs,   date = as.Date(\"2021-06-19\") ) obs #>           date location_name location  cases cases_available seq_total seq_voc #>  1: 2021-03-20       Germany       DE  87328      2021-03-20        NA      NA #>  2: 2021-03-27       Germany       DE 109442      2021-03-27        NA      NA #>  3: 2021-04-03       Germany       DE 117965      2021-04-03        NA      NA #>  4: 2021-04-10       Germany       DE 107223      2021-04-10        NA      NA #>  5: 2021-04-17       Germany       DE 142664      2021-04-17      4072       6 #>  6: 2021-04-24       Germany       DE 145568      2021-04-24      4500      32 #>  7: 2021-05-01       Germany       DE 131887      2021-05-01      3607      55 #>  8: 2021-05-08       Germany       DE 107141      2021-05-08      4491      86 #>  9: 2021-05-15       Germany       DE  77261      2021-05-15      3443      92 #> 10: 2021-05-22       Germany       DE  57310      2021-05-22      3392     114 #> 11: 2021-05-29       Germany       DE  33052      2021-05-29      2258      89 #> 12: 2021-06-05       Germany       DE  22631      2021-06-05      1136      75 #> 13: 2021-06-12       Germany       DE  15553      2021-06-12        NA      NA #> 14: 2021-06-19       Germany       DE   7659      2021-06-19        NA      NA #>       share_voc seq_available #>  1:          NA          <NA> #>  2:          NA          <NA> #>  3:          NA          <NA> #>  4:          NA          <NA> #>  5: 0.001473477    2021-06-16 #>  6: 0.007111111    2021-06-16 #>  7: 0.015248129    2021-06-16 #>  8: 0.019149410    2021-06-16 #>  9: 0.026720883    2021-06-16 #> 10: 0.033608491    2021-06-16 #> 11: 0.039415412    2021-06-16 #> 12: 0.066021127    2021-06-16 #> 13:          NA    2021-07-29 #> 14:          NA    2021-07-29  current_obs <- latest_obs(germany_covid19_delta_obs)"},{"path":"epiforecasts.io/forecast.vocs/index.html","id":"forecast-all-in-one","dir":"","previous_headings":"Quick start","what":"Forecast all-in-one","title":"Forecast Case and Sequence Notifications using Variant of Concern\n    Strain Dynamics","text":"Run forecast one two strain models (optionally just one ) using forecast() function. provides wrapper around package tooling initialise, fit, summarise forecasts. Multiple forecasts can performed efficiently across dates scenarios using forecast_across_dates() forecast_across_scenarios(). Summarised posterior forecast estimates can directly extracted output using included summary() method. Alternatively, complete summarised posterior can extracted using following (also summary() plot() options make exploring results easier). See documentation details. Plot posterior prediction cases single strain model (“Overall”), two strain model (“Combined”), unobserved estimates strain.  Plot posterior prediction fraction cases Delta variant two strain model.  Plot posterior estimate growth rate mean generation time COVID-19 cases (assumed 5.5 days).  Plot posterior estimate effective reproduction number Delta non-Delta cases.  Plot estimated transmission advantage Delta vs non-Delta time. Note model pooled variant scaling used varies time (potentially suitable imports present variant greater immune escape baseline). likely growth advantage constant time consider fixed scaling model. variants likely circulating independent populations consider independent variant model. See documentation model definition vignette details.  Alternatively list plots sensible defaults can produced using following. potentially useful optional integration scoringutils package also provided streamline scoring forecasts using proper scoring rules. See documentation scoringutils package simple example calculate average scores single two strain models single Forecast","code":"forecasts <- forecast(obs,   strains = c(1, 2), voc_scale = c(0.4, 0.2),   voc_label = \"Delta\", scale_r = 5.5 / 7,   adapt_delta = 0.99, max_treedepth = 15,   refresh = 0, show_messages = FALSE, ) #> Running MCMC with 4 parallel chains... #>  #> Chain 4 finished in 20.3 seconds. #> Chain 2 finished in 20.6 seconds. #> Chain 3 finished in 21.0 seconds. #> Chain 1 finished in 31.7 seconds. #>  #> All 4 chains finished successfully. #> Mean chain execution time: 23.4 seconds. #> Total execution time: 31.9 seconds. #> Running MCMC with 4 parallel chains... #>  #> Chain 4 finished in 62.6 seconds. #> Chain 2 finished in 62.7 seconds. #> Chain 1 finished in 67.6 seconds. #> Chain 3 finished in 82.8 seconds. #>  #> All 4 chains finished successfully. #> Mean chain execution time: 68.9 seconds. #> Total execution time: 82.9 seconds. forecasts #>    id forecast_date strains overdispersion variant_relationship  r_init #> 1:  0    2021-06-19       1           TRUE               pooled 0, 0.25 #> 2:  0    2021-06-19       2           TRUE               pooled 0, 0.25 #>    voc_scale error               fit       data  fit_args samples max_rhat #> 1:  0.4, 0.2       <CmdStanMCMC[31]> <list[20]> <list[5]>    4000     1.01 #> 2:  0.4, 0.2       <CmdStanMCMC[31]> <list[20]> <list[5]>    4000     1.01 #>    divergent_transitions per_divergent_transitions max_treedepth #> 1:                     2                     5e-04            11 #> 2:                    28                     7e-03            10 #>    no_at_max_treedepth per_at_max_treedepth time              posterior #> 1:                 841              0.21025 31.9 <fv_posterior[148x20]> #> 2:                2139              0.53475 82.9 <fv_posterior[426x20]> #>                 forecast #> 1: <fv_posterior[12x13]> #> 2: <fv_posterior[60x13]> summary(forecasts, target = \"posterior\", type = \"all\") plot(forecasts, current_obs) plot(forecasts, current_obs, type = \"voc_frac\", voc_label = \"Delta variant\") plot(forecasts, type = \"growth\") plot(forecasts, type = \"rt\") plot(forecasts, type = \"voc_advantage\") plot(forecasts, current_obs, type = \"all\", voc_label = \"Delta variant\") library(scoringutils) #> Note: The definition of the weighted interval score has slightly changed in version 0.1.5. If you want to use the old definition, use the argument `count_median_twice = TRUE` in the function `eval_forecasts()` library(knitr)  pp_forecasts <- summary(forecasts, target = \"forecast\", type = \"cases\") scores <- fv_score_forecast(pp_forecasts, current_obs, summarise_by = \"strains\") kable(scores)"},{"path":"epiforecasts.io/forecast.vocs/index.html","id":"step-by-step-forecast","dir":"","previous_headings":"Quick start","what":"Step by step forecast","title":"Forecast Case and Sequence Notifications using Variant of Concern\n    Strain Dynamics","text":"Rather using --one forecast() function individual package functions can used produce forecast follows. forecasts produced forecast() function summary plots estimates can produced using summary(), plot() methods. example case forecasts can returned using following,","code":"dt <- fv_as_data_list(obs, horizon = 4)  model <- fv_model(strains = 2)  inits <- fv_inits(dt, strains = 2)  fit <- fv_sample(   data = dt, model = model, init = inits,   voc_scale = c(0.4, 0.2),   adapt_delta = 0.99, max_treedepth = 15,   refresh = 0, show_messages = FALSE )  posterior <- fv_tidy_posterior(fit, voc_label = \"Delta\", scale_r = 5.5 / 7) summary(posterior, type = \"cases\", forecast = TRUE)"},{"path":"epiforecasts.io/forecast.vocs/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Forecast Case and Sequence Notifications using Variant of Concern\n    Strain Dynamics","text":"using forecast.vocs work please consider citing using following,","code":"#>  #> To cite forecast.vocs in publications use: #>  #>   Sam Abbott (2021). forecast.vocs: Forecast case and sequence #>   notifications using variant of concern strain dynamics, DOI: #>   10.5281/zenodo.5559016 #>  #> A BibTeX entry for LaTeX users is #>  #>   @Article{, #>     title = {forecast.vocs: Forecast case and sequence notifications using variant of concern strain dynamics}, #>     author = {Sam Abbott}, #>     journal = {Zenodo}, #>     year = {2021}, #>     doi = {10.5281/zenodo.5559016}, #>   }"},{"path":"epiforecasts.io/forecast.vocs/index.html","id":"how-to-make-a-bug-report-or-feature-request","dir":"","previous_headings":"","what":"How to make a bug report or feature request","title":"Forecast Case and Sequence Notifications using Variant of Concern\n    Strain Dynamics","text":"Please briefly describe problem output expect issue. question, please don’t open issue. Instead, ask Q page.","code":""},{"path":"epiforecasts.io/forecast.vocs/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Forecast Case and Sequence Notifications using Variant of Concern\n    Strain Dynamics","text":"welcome contributions new contributors! particularly appreciate help priority problems issues. Please check add issues, /add pull request.","code":""},{"path":"epiforecasts.io/forecast.vocs/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Forecast Case and Sequence Notifications using Variant of Concern\n    Strain Dynamics","text":"Please note forecast.vocs project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"epiforecasts.io/forecast.vocs/reference/add_forecast_dates.html","id":null,"dir":"Reference","previous_headings":"","what":"Add the forecast dates to a plot — add_forecast_dates","title":"Add the forecast dates to a plot — add_forecast_dates","text":"Add forecast dates plot","code":""},{"path":"epiforecasts.io/forecast.vocs/reference/add_forecast_dates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add the forecast dates to a plot — add_forecast_dates","text":"","code":"add_forecast_dates(plot, forecast_dates = NULL)"},{"path":"epiforecasts.io/forecast.vocs/reference/add_forecast_dates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add the forecast dates to a plot — add_forecast_dates","text":"plot ggplot2 object forecast_dates data.frame format produced extract_forecast_dates() (least date variable Data unavailable variable)). Specifies date availability add plots. May contain faceting variables.","code":""},{"path":"epiforecasts.io/forecast.vocs/reference/add_forecast_dates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add the forecast dates to a plot — add_forecast_dates","text":"ggplot2 plot dates data unavailability added.","code":""},{"path":[]},{"path":"epiforecasts.io/forecast.vocs/reference/bp_launch_shinystan.html","id":null,"dir":"Reference","previous_headings":"","what":"Launch shinystan — bp_launch_shinystan","title":"Launch shinystan — bp_launch_shinystan","text":"Launch shinystan interactive tool stan model evaluation","code":""},{"path":"epiforecasts.io/forecast.vocs/reference/bp_launch_shinystan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Launch shinystan — bp_launch_shinystan","text":"","code":"bp_launch_shinystan(fit)"},{"path":"epiforecasts.io/forecast.vocs/reference/bp_launch_shinystan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Launch shinystan — bp_launch_shinystan","text":"fit List output returned fv_sample().","code":""},{"path":[]},{"path":"epiforecasts.io/forecast.vocs/reference/bp_launch_shinystan.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Launch shinystan — bp_launch_shinystan","text":"","code":"if (FALSE) { # interactive() obs <- filter_by_availability(   germany_covid19_delta_obs,   date = as.Date(\"2021-06-12\") )  dt <- fv_as_data_list(obs) inits <- fv_inits(dt) fit <- fv_sample(dt, init = inits, adapt_delta = 0.99, max_treedepth = 15) bp_launch_shinystan(fit) }"},{"path":"epiforecasts.io/forecast.vocs/reference/check_dataframe.html","id":null,"dir":"Reference","previous_headings":"","what":"Check a data.frame — check_dataframe","title":"Check a data.frame — check_dataframe","text":"Check data.frame","code":""},{"path":"epiforecasts.io/forecast.vocs/reference/check_dataframe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check a data.frame — check_dataframe","text":"","code":"check_dataframe(dataframe, req_vars, req_types, rows)"},{"path":"epiforecasts.io/forecast.vocs/reference/check_dataframe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check a data.frame — check_dataframe","text":"dataframe data.frame check. req_vars character vector variables required. req_types character vector types required variable. rows Integer specifying number rows data.frame .","code":""},{"path":[]},{"path":"epiforecasts.io/forecast.vocs/reference/check_observations.html","id":null,"dir":"Reference","previous_headings":"","what":"Check observations are in the correct format — check_observations","title":"Check observations are in the correct format — check_observations","text":"Check observations correct format","code":""},{"path":"epiforecasts.io/forecast.vocs/reference/check_observations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check observations are in the correct format — check_observations","text":"","code":"check_observations(obs)"},{"path":"epiforecasts.io/forecast.vocs/reference/check_observations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check observations are in the correct format — check_observations","text":"obs data.frame following variables: date, cases, seq_voc, seq_total, cases_available, seq_available. seq_available case_available must uniquely define data rows rows can duplicated based data availability. data format allows multiple versions case sequence data given date different reporting dates. important using package evaluation settings real-time data sources liable updated new data becomes available. See germany_covid19_delta_obs example supported data set.","code":""},{"path":[]},{"path":"epiforecasts.io/forecast.vocs/reference/check_observations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check observations are in the correct format — check_observations","text":"","code":"obs <- latest_obs(germany_covid19_delta_obs) check_observations(obs)"},{"path":"epiforecasts.io/forecast.vocs/reference/check_param.html","id":null,"dir":"Reference","previous_headings":"","what":"Check a parameter is the correct type and length — check_param","title":"Check a parameter is the correct type and length — check_param","text":"Check parameter correct type length","code":""},{"path":"epiforecasts.io/forecast.vocs/reference/check_param.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check a parameter is the correct type and length — check_param","text":"","code":"check_param(param, name = \"param\", type = \"numeric\", length)"},{"path":"epiforecasts.io/forecast.vocs/reference/check_param.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check a parameter is the correct type and length — check_param","text":"param parameter check format . name character string naming variable check. type character string identifying allowed parameter type (must type .type function except Date). length Numeric, allowed length variable. Defaults allowed length.","code":""},{"path":[]},{"path":"epiforecasts.io/forecast.vocs/reference/check_quantiles.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Quantiles Required are Present — check_quantiles","title":"Check Quantiles Required are Present — check_quantiles","text":"Check Quantiles Required Present","code":""},{"path":"epiforecasts.io/forecast.vocs/reference/check_quantiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Quantiles Required are Present — check_quantiles","text":"","code":"check_quantiles(posterior, req_probs = c(0.5, 0.95, 0.2, 0.8))"},{"path":"epiforecasts.io/forecast.vocs/reference/check_quantiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Quantiles Required are Present — check_quantiles","text":"posterior dataframe containing quantiles identified using q5 naming scheme. req_probs numeric vector required probabilities.","code":""},{"path":[]},{"path":"epiforecasts.io/forecast.vocs/reference/convert_to_stanfit.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert to stanfit object — convert_to_stanfit","title":"Convert to stanfit object — convert_to_stanfit","text":"Convert stanfit object","code":""},{"path":"epiforecasts.io/forecast.vocs/reference/convert_to_stanfit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert to stanfit object — convert_to_stanfit","text":"","code":"convert_to_stanfit(fit)"},{"path":"epiforecasts.io/forecast.vocs/reference/convert_to_stanfit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert to stanfit object — convert_to_stanfit","text":"fit List output returned fv_sample().","code":""},{"path":"epiforecasts.io/forecast.vocs/reference/convert_to_stanfit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert to stanfit object — convert_to_stanfit","text":"model fit stanfit object","code":""},{"path":[]},{"path":"epiforecasts.io/forecast.vocs/reference/convert_to_stanfit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert to stanfit object — convert_to_stanfit","text":"","code":"if (FALSE) { # interactive() obs <- filter_by_availability(   germany_covid19_delta_obs,   date = as.Date(\"2021-06-12\"), ) dt <- fv_as_data_list(obs) inits <- fv_inits(dt) fit <- fv_sample(dt, init = inits, adapt_delta = 0.99, max_treedepth = 15) convert_to_stanfit(fit) }"},{"path":"epiforecasts.io/forecast.vocs/reference/define_scenarios.html","id":null,"dir":"Reference","previous_headings":"","what":"Define data availability scenarios — define_scenarios","title":"Define data availability scenarios — define_scenarios","text":"Define data availability scenarios","code":""},{"path":"epiforecasts.io/forecast.vocs/reference/define_scenarios.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define data availability scenarios — define_scenarios","text":"","code":"define_scenarios(   seq_lag = 0:3,   seq_samples = seq(1, by = -0.25, length.out = 4),   voc_scale = list(c(0, 0.5)) )"},{"path":"epiforecasts.io/forecast.vocs/reference/define_scenarios.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define data availability scenarios — define_scenarios","text":"seq_lag number weeks sequences lag date. Default test 0 3 weeks lag. seq_samples Fraction samples include (deterministic scaling). default test samples 25% samples 25% increments. voc_scale list mean standard  deviations use inform prior additional transmissibility VOC variant. default uninformed prior knowledge prior (0, 0.5). adjusted growth (0.74, 0.1).","code":""},{"path":"epiforecasts.io/forecast.vocs/reference/define_scenarios.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define data availability scenarios — define_scenarios","text":"data frame scenario definitions ids","code":""},{"path":[]},{"path":"epiforecasts.io/forecast.vocs/reference/define_scenarios.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Define data availability scenarios — define_scenarios","text":"","code":"define_scenarios() #>     id seq_lag seq_samples voc_scale #>  1:  1       0        1.00   0.0,0.5 #>  2:  2       0        0.75   0.0,0.5 #>  3:  3       0        0.50   0.0,0.5 #>  4:  4       0        0.25   0.0,0.5 #>  5:  5       1        1.00   0.0,0.5 #>  6:  6       1        0.75   0.0,0.5 #>  7:  7       1        0.50   0.0,0.5 #>  8:  8       1        0.25   0.0,0.5 #>  9:  9       2        1.00   0.0,0.5 #> 10: 10       2        0.75   0.0,0.5 #> 11: 11       2        0.50   0.0,0.5 #> 12: 12       2        0.25   0.0,0.5 #> 13: 13       3        1.00   0.0,0.5 #> 14: 14       3        0.75   0.0,0.5 #> 15: 15       3        0.50   0.0,0.5 #> 16: 16       3        0.25   0.0,0.5"},{"path":"epiforecasts.io/forecast.vocs/reference/extract_draws.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract posterior draws — extract_draws","title":"Extract posterior draws — extract_draws","text":"Extract posterior draws","code":""},{"path":"epiforecasts.io/forecast.vocs/reference/extract_draws.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract posterior draws — extract_draws","text":"","code":"extract_draws(fit, ...)"},{"path":"epiforecasts.io/forecast.vocs/reference/extract_draws.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract posterior draws — extract_draws","text":"fit list produced fv_sample(). ... Additional parameters passed cmdstanr::draws()","code":""},{"path":"epiforecasts.io/forecast.vocs/reference/extract_draws.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract posterior draws — extract_draws","text":"cmdstanr::draws() object posterior package.","code":""},{"path":[]},{"path":"epiforecasts.io/forecast.vocs/reference/extract_draws.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract posterior draws — extract_draws","text":"","code":"if (FALSE) { # interactive() obs <- filter_by_availability(   germany_covid19_delta_obs,   date = as.Date(\"2021-06-12\"), ) dt <- fv_as_data_list(obs) inits <- fv_inits(dt) fit <- fv_sample(dt, init = inits, adapt_delta = 0.99, max_treedepth = 15) extract_draws(fit) }"},{"path":"epiforecasts.io/forecast.vocs/reference/extract_forecast_dates.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract forecast dates — extract_forecast_dates","title":"Extract forecast dates — extract_forecast_dates","text":"Extract forecast dates based availability case sequence data.","code":""},{"path":"epiforecasts.io/forecast.vocs/reference/extract_forecast_dates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract forecast dates — extract_forecast_dates","text":"","code":"extract_forecast_dates(posterior)"},{"path":"epiforecasts.io/forecast.vocs/reference/extract_forecast_dates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract forecast dates — extract_forecast_dates","text":"posterior dataframe posterior output produced fv_tidy_posterior(). forecast dates extracted data value_type == \"cases\" must present.","code":""},{"path":"epiforecasts.io/forecast.vocs/reference/extract_forecast_dates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract forecast dates — extract_forecast_dates","text":"data.frame containing least two vectors: Data unavailable indicating type data missing, date giving date data last available .","code":""},{"path":[]},{"path":"epiforecasts.io/forecast.vocs/reference/extract_forecast_dates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract forecast dates — extract_forecast_dates","text":"","code":"p <- fv_example(strains = 2, type = \"posterior\")  extract_forecast_dates(p) #>    Data unavailable       date #> 1:            Cases 2021-06-26 #> 2:        Sequences 2021-06-12"},{"path":"epiforecasts.io/forecast.vocs/reference/filter_by_availability.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter data based on availability and forecast date — filter_by_availability","title":"Filter data based on availability and forecast date — filter_by_availability","text":"Filter data based availability forecast date","code":""},{"path":"epiforecasts.io/forecast.vocs/reference/filter_by_availability.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter data based on availability and forecast date — filter_by_availability","text":"","code":"filter_by_availability(   obs,   date = max(obs$date),   seq_date = date,   case_date = date )"},{"path":"epiforecasts.io/forecast.vocs/reference/filter_by_availability.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter data based on availability and forecast date — filter_by_availability","text":"obs data.frame following variables: date, cases, seq_voc, seq_total, cases_available, seq_available. seq_available case_available must uniquely define data rows rows can duplicated based data availability. data format allows multiple versions case sequence data given date different reporting dates. important using package evaluation settings real-time data sources liable updated new data becomes available. See germany_covid19_delta_obs example supported data set. date Date filter. Defaults maximum date obs. seq_date Date use available sequence data. Defaults date. case_date Date use available case data. Defaults date.","code":""},{"path":"epiforecasts.io/forecast.vocs/reference/filter_by_availability.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter data based on availability and forecast date — filter_by_availability","text":"data.frame observations filter latest available data specified dates interest.","code":""},{"path":[]},{"path":"epiforecasts.io/forecast.vocs/reference/filter_by_availability.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter data based on availability and forecast date — filter_by_availability","text":"","code":"options(mc.cores = 4) obs <- filter_by_availability(   germany_covid19_delta_obs,   date = as.Date(\"2021-06-12\"), ) dt <- rbind(   update_obs_availability(obs, seq_lag = 3),   update_obs_availability(obs, seq_lag = 1) ) # filter out duplicates and up to the present date filter_by_availability(dt) #>           date location_name location  cases cases_available seq_total seq_voc #>  1: 2021-03-20       Germany       DE  87328      2021-03-20        NA      NA #>  2: 2021-03-27       Germany       DE 109442      2021-03-27        NA      NA #>  3: 2021-04-03       Germany       DE 117965      2021-04-03        NA      NA #>  4: 2021-04-10       Germany       DE 107223      2021-04-10        NA      NA #>  5: 2021-04-17       Germany       DE 142664      2021-04-17      4066       5 #>  6: 2021-04-24       Germany       DE 145568      2021-04-24      4494      31 #>  7: 2021-05-01       Germany       DE 131887      2021-05-01      3615      55 #>  8: 2021-05-08       Germany       DE 107141      2021-05-08      4479      86 #>  9: 2021-05-15       Germany       DE  77261      2021-05-15      3399      93 #> 10: 2021-05-22       Germany       DE  57310      2021-05-22      3275     108 #> 11: 2021-05-29       Germany       DE  33052      2021-05-29      1328      34 #> 12: 2021-06-05       Germany       DE  22631      2021-06-05        NA      NA #> 13: 2021-06-12       Germany       DE  15553      2021-06-12        NA      NA #>       share_voc seq_available #>  1:          NA          <NA> #>  2:          NA          <NA> #>  3:          NA          <NA> #>  4:          NA          <NA> #>  5: 0.001229710    2021-05-08 #>  6: 0.006898086    2021-05-15 #>  7: 0.015214385    2021-05-22 #>  8: 0.019200714    2021-05-29 #>  9: 0.027360989    2021-06-05 #> 10: 0.032977099    2021-06-12 #> 11: 0.025602410    2021-06-05 #> 12:          NA    2021-06-26 #> 13:          NA    2021-07-03  # filter to only use sequence data up the the 12th of June filter_by_availability(dt, seq_date = \"2021-06-12\") #>           date location_name location  cases cases_available seq_total seq_voc #>  1: 2021-03-20       Germany       DE  87328      2021-03-20        NA      NA #>  2: 2021-03-27       Germany       DE 109442      2021-03-27        NA      NA #>  3: 2021-04-03       Germany       DE 117965      2021-04-03        NA      NA #>  4: 2021-04-10       Germany       DE 107223      2021-04-10        NA      NA #>  5: 2021-04-17       Germany       DE 142664      2021-04-17      4066       5 #>  6: 2021-04-24       Germany       DE 145568      2021-04-24      4494      31 #>  7: 2021-05-01       Germany       DE 131887      2021-05-01      3615      55 #>  8: 2021-05-08       Germany       DE 107141      2021-05-08      4479      86 #>  9: 2021-05-15       Germany       DE  77261      2021-05-15      3399      93 #> 10: 2021-05-22       Germany       DE  57310      2021-05-22      3275     108 #> 11: 2021-05-29       Germany       DE  33052      2021-05-29      1328      34 #> 12: 2021-06-05       Germany       DE  22631      2021-06-05        NA      NA #> 13: 2021-06-12       Germany       DE  15553      2021-06-12        NA      NA #>       share_voc seq_available #>  1:          NA          <NA> #>  2:          NA          <NA> #>  3:          NA          <NA> #>  4:          NA          <NA> #>  5: 0.001229710    2021-05-08 #>  6: 0.006898086    2021-05-15 #>  7: 0.015214385    2021-05-22 #>  8: 0.019200714    2021-05-29 #>  9: 0.027360989    2021-06-05 #> 10: 0.032977099    2021-06-12 #> 11: 0.025602410    2021-06-05 #> 12:          NA    2021-06-26 #> 13:          NA    2021-07-03  # as above but only use filter_by_availability(dt,   seq_date = \"2021-06-12\",   case_date = \"2021-07-01\" ) #>           date location_name location  cases cases_available seq_total seq_voc #>  1: 2021-03-20       Germany       DE  87328      2021-03-20        NA      NA #>  2: 2021-03-27       Germany       DE 109442      2021-03-27        NA      NA #>  3: 2021-04-03       Germany       DE 117965      2021-04-03        NA      NA #>  4: 2021-04-10       Germany       DE 107223      2021-04-10        NA      NA #>  5: 2021-04-17       Germany       DE 142664      2021-04-17      4066       5 #>  6: 2021-04-24       Germany       DE 145568      2021-04-24      4494      31 #>  7: 2021-05-01       Germany       DE 131887      2021-05-01      3615      55 #>  8: 2021-05-08       Germany       DE 107141      2021-05-08      4479      86 #>  9: 2021-05-15       Germany       DE  77261      2021-05-15      3399      93 #> 10: 2021-05-22       Germany       DE  57310      2021-05-22      3275     108 #> 11: 2021-05-29       Germany       DE  33052      2021-05-29      1328      34 #> 12: 2021-06-05       Germany       DE  22631      2021-06-05        NA      NA #> 13: 2021-06-12       Germany       DE  15553      2021-06-12        NA      NA #>       share_voc seq_available #>  1:          NA          <NA> #>  2:          NA          <NA> #>  3:          NA          <NA> #>  4:          NA          <NA> #>  5: 0.001229710    2021-05-08 #>  6: 0.006898086    2021-05-15 #>  7: 0.015214385    2021-05-22 #>  8: 0.019200714    2021-05-29 #>  9: 0.027360989    2021-06-05 #> 10: 0.032977099    2021-06-12 #> 11: 0.025602410    2021-06-05 #> 12:          NA    2021-06-26 #> 13:          NA    2021-07-03"},{"path":"epiforecasts.io/forecast.vocs/reference/forecast.html","id":null,"dir":"Reference","previous_headings":"","what":"Forecast using branching processes at a target date — forecast","title":"Forecast using branching processes at a target date — forecast","text":"Forecast using branching processes target date","code":""},{"path":"epiforecasts.io/forecast.vocs/reference/forecast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Forecast using branching processes at a target date — forecast","text":"","code":"forecast(   obs,   forecast_date = max(obs$date),   seq_date = forecast_date,   case_date = forecast_date,   data_list = forecast.vocs::fv_as_data_list,   inits = forecast.vocs::fv_inits,   fit = forecast.vocs::fv_sample,   posterior = forecast.vocs::fv_tidy_posterior,   extract_forecast = forecast.vocs::fv_extract_forecast,   horizon = 4,   r_init = c(0, 0.25),   voc_scale = c(0, 0.2),   voc_label = \"VOC\",   strains = 2,   variant_relationship = \"pooled\",   overdispersion = TRUE,   models = NULL,   likelihood = TRUE,   output_loglik = FALSE,   debug = FALSE,   keep_fit = TRUE,   scale_r = 1,   digits = 3,   timespan = 7,   probs = c(0.05, 0.2, 0.8, 0.95),   id = 0,   ... )"},{"path":"epiforecasts.io/forecast.vocs/reference/forecast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Forecast using branching processes at a target date — forecast","text":"obs data.frame following variables: date, cases, seq_voc, seq_total, cases_available, seq_available. seq_available case_available must uniquely define data rows rows can duplicated based data availability. data format allows multiple versions case sequence data given date different reporting dates. important using package evaluation settings real-time data sources liable updated new data becomes available. See germany_covid19_delta_obs example supported data set. forecast_date Date forecast. Defaults maximum date obs. seq_date Date use available sequence data. Defaults date. case_date Date use available case data. Defaults date. data_list function returns list data ingested inits fit function. Must use arguments defined fv_as_data_list(). supplied package default fv_as_data_list() used. inits function returns function samples initial conditions arguments fv_inits(). supplied package default fv_inits() used. fit function fits supplied model arguments return values fv_sample(). supplied package default fv_sample() used performs MCMC sampling using cmdstanr. posterior function summarises output supplied fitting function arguments return values (depending requirement downstream package functionality function) fv_tidy_posterior(). supplied package default fv_tidy_posterior() used. extract_forecast function extracts forecast summarised posterior. supplied package default fv_extract_forecast() used. horizon Integer forecast horizon. Defaults 4. r_init Numeric vector length 2. Prior mean standard deviation initial growth rate. voc_scale Numeric vector length 2. Prior mean standard deviation initial growth rate modifier due variant concern. voc_label character string, default \"VOC\". Defines label assign variant concern specific parameters. Example usage rename parameters use variant specific terminology. strains Integer number strains use. Defaults 2. Current maximum 2. numeric vector can passed forecasts multiple strain models desired. variant_relationship Character string, defaulting \"pooled\". Controls relationship strains options \"pooled\" (dependence determined data), \"scaled\" (fixed scaling strains), \"independent\" (fully independent strains initial scaling). overdispersion Logical, defaults TRUE. observations used include overdispersion. models model supplied fv_model(). supplied default strain used. multiple strain models forecast models list models. likelihood Logical, defaults TRUE. likelihood included model output_loglik Logical, defaults FALSE. log-likelihood output. Disabling speed fitting evaluating model fit required. debug Logical, defaults FALSE. within model debug information returned. keep_fit Logical, defaults TRUE. stan model fit kept returned. Dropping can substantially reduce memory usage situations multiple models fit. scale_r Numeric, defaults 1. Rescale timespan growth rate reproduction number calculated. example use case rescaling growth rate weekly scaled mean generation time (COVID-19 example 5.5 / 7. digits Numeric, defaults 3. Number digits round summary statistics . probs vector numeric probabilities produce quantile summaries . default 5%, 20%, 80%, 95% quantiles also minimum set required plotting functions work (plot_cases(), plot_rt(), plot_voc_frac()). id ID assign forecast. Defaults 0. ... Additional parameters passed fv_sample().","code":""},{"path":"epiforecasts.io/forecast.vocs/reference/forecast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Forecast using branching processes at a target date — forecast","text":"data.frame containing output fv_sample() row well summarised posterior, forecast information parameters specified.","code":""},{"path":[]},{"path":"epiforecasts.io/forecast.vocs/reference/forecast.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Forecast using branching processes at a target date — forecast","text":"","code":"if (FALSE) { # interactive() options(mc.cores = 4)  forecasts <- forecast(   germany_covid19_delta_obs,   forecast_date = as.Date(\"2021-06-12\"),   horizon = 4,   strains = c(1, 2),   adapt_delta = 0.99,   max_treedepth = 15,   variant_relationship = \"scaled\" )  # inspect forecasts forecasts  # extract the model summary summary(forecasts, type = \"model\")  # plot case posterior predictions plot(forecasts, log = TRUE)  # plot voc posterior predictions plot(forecasts, type = \"voc_frac\")  # extract the case forecast summary(forecasts, type = \"cases\", forecast = TRUE) }"},{"path":"epiforecasts.io/forecast.vocs/reference/forecast.vocs-package.html","id":null,"dir":"Reference","previous_headings":"","what":"forecast.vocs: Forecast Case and Sequence Notifications using Variant of Concern Strain Dynamics — forecast.vocs-package","title":"forecast.vocs: Forecast Case and Sequence Notifications using Variant of Concern Strain Dynamics — forecast.vocs-package","text":"Contains models tools produce short-term forecasts case sequence notifications assuming circulation either one two variants. Tools also provided allow evaluation use sequence data short-term forecasts real-world settings user generated scenarios.","code":""},{"path":[]},{"path":"epiforecasts.io/forecast.vocs/reference/forecast.vocs-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"forecast.vocs: Forecast Case and Sequence Notifications using Variant of Concern Strain Dynamics — forecast.vocs-package","text":"Maintainer: Sam Abbott sam.abbott@lshtm.ac.uk (ORCID)","code":""},{"path":"epiforecasts.io/forecast.vocs/reference/forecast_across_dates.html","id":null,"dir":"Reference","previous_headings":"","what":"Forecast across multiple dates — forecast_across_dates","title":"Forecast across multiple dates — forecast_across_dates","text":"Forecast across multiple dates","code":""},{"path":"epiforecasts.io/forecast.vocs/reference/forecast_across_dates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Forecast across multiple dates — forecast_across_dates","text":"","code":"forecast_across_dates(   obs,   forecast_dates = unique(obs[!is.na(seq_available)])$date[-c(1:3)],   ... )"},{"path":"epiforecasts.io/forecast.vocs/reference/forecast_across_dates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Forecast across multiple dates — forecast_across_dates","text":"obs data.frame following variables: date, cases, seq_voc, seq_total, cases_available, seq_available. seq_available case_available must uniquely define data rows rows can duplicated based data availability. data format allows multiple versions case sequence data given date different reporting dates. important using package evaluation settings real-time data sources liable updated new data becomes available. See germany_covid19_delta_obs example supported data set. forecast_dates list dates forecast . ... Additional parameters passed forecast().","code":""},{"path":"epiforecasts.io/forecast.vocs/reference/forecast_across_dates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Forecast across multiple dates — forecast_across_dates","text":"data.table row containing output running forecast() single forecast date.","code":""},{"path":[]},{"path":"epiforecasts.io/forecast.vocs/reference/forecast_across_dates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Forecast across multiple dates — forecast_across_dates","text":"","code":"if (FALSE) { # interactive() library(ggplot2) options(mc.cores = 4)  forecasts <- forecast_across_dates(   germany_covid19_delta_obs,   forecast_dates = c(as.Date(\"2021-05-01\"), as.Date(\"2021-06-12\")),   horizon = 4,   strains = 2,   adapt_delta = 0.99,   max_treedepth = 15,   variant_relationship = \"scaled\" )  # inspect forecasts forecasts  # unnest posteriors posteriors <- unnest_posterior(forecasts)  # plot case posterior predictions plot_cases(posteriors, log = TRUE) +   facet_grid(vars(forecast_date), vars(voc_scale)) }"},{"path":"epiforecasts.io/forecast.vocs/reference/forecast_across_scenarios.html","id":null,"dir":"Reference","previous_headings":"","what":"Forecast across multiple scenarios and dates — forecast_across_scenarios","title":"Forecast across multiple scenarios and dates — forecast_across_scenarios","text":"Forecast across multiple scenarios dates","code":""},{"path":"epiforecasts.io/forecast.vocs/reference/forecast_across_scenarios.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Forecast across multiple scenarios and dates — forecast_across_scenarios","text":"","code":"forecast_across_scenarios(obs, scenarios, ...)"},{"path":"epiforecasts.io/forecast.vocs/reference/forecast_across_scenarios.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Forecast across multiple scenarios and dates — forecast_across_scenarios","text":"obs data.frame following variables: date, cases, seq_voc, seq_total, cases_available, seq_available. seq_available case_available must uniquely define data rows rows can duplicated based data availability. data format allows multiple versions case sequence data given date different reporting dates. important using package evaluation settings real-time data sources liable updated new data becomes available. See germany_covid19_delta_obs example supported data set. scenarios data.frame scenarios produced define_scenarios(). obs variable present used scenario data otherwise generate_obs_scenario() used generate data variables scenarios. ... Additional parameters passed forecast_across_dates().","code":""},{"path":"epiforecasts.io/forecast.vocs/reference/forecast_across_scenarios.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Forecast across multiple scenarios and dates — forecast_across_scenarios","text":"data table rows containing output running forecast() single scenario single forecast date.","code":""},{"path":[]},{"path":"epiforecasts.io/forecast.vocs/reference/forecast_across_scenarios.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Forecast across multiple scenarios and dates — forecast_across_scenarios","text":"","code":"if (FALSE) { # interactive() library(ggplot2) options(mc.cores = 4)  scenarios <- define_scenarios(   voc_scale = list(c(0, 0.5), c(0.5, 0.25)),   seq_lag = 1,   seq_samples = 1 ) scenarios  forecasts <- forecast_across_scenarios(   germany_covid19_delta_obs,   scenarios,   forecast_dates = c(as.Date(\"2021-05-01\"), as.Date(\"2021-06-12\")),   horizon = 4,   strains = 2,   adapt_delta = 0.99,   max_treedepth = 15,   variant_relationship = \"scaled\" )  # inspect forecasts forecasts  # unnest posteriors posteriors <- unnest_posterior(forecasts)  # plot case posterior predictions plot_cases(posteriors, log = TRUE) +   facet_grid(vars(forecast_date)) }"},{"path":"epiforecasts.io/forecast.vocs/reference/forecast_n_strain.html","id":null,"dir":"Reference","previous_headings":"","what":"Forecast for a single model and summarise — forecast_n_strain","title":"Forecast for a single model and summarise — forecast_n_strain","text":"Forecast single model summarise","code":""},{"path":"epiforecasts.io/forecast.vocs/reference/forecast_n_strain.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Forecast for a single model and summarise — forecast_n_strain","text":"","code":"forecast_n_strain(   data,   model = NULL,   inits = forecast.vocs::fv_inits,   fit = forecast.vocs::fv_sample,   posterior = forecast.vocs::fv_tidy_posterior,   extract_forecast = forecast.vocs::fv_extract_forecast,   strains = 2,   voc_label = \"VOC\",   probs = c(0.05, 0.2, 0.8, 0.95),   digits = 3,   scale_r = 1,   timespan = 7,   ... )"},{"path":"epiforecasts.io/forecast.vocs/reference/forecast_n_strain.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Forecast for a single model and summarise — forecast_n_strain","text":"data list data produced fv_as_data_list(). model cmdstanr model object loaded fv_model(). inits function returns function samples initial conditions arguments fv_inits(). supplied package default fv_inits() used. fit function fits supplied model arguments return values fv_sample(). supplied package default fv_sample() used performs MCMC sampling using cmdstanr. posterior function summarises output supplied fitting function arguments return values (depending requirement downstream package functionality function) fv_tidy_posterior(). supplied package default fv_tidy_posterior() used. extract_forecast function extracts forecast summarised posterior. supplied package default fv_extract_forecast() used. strains Integer number strains. Defaults 2. Current maximum 2. voc_label character string, default \"VOC\". Defines label assign variant concern specific parameters. Example usage rename parameters use variant specific terminology. probs vector numeric probabilities produce quantile summaries . default 5%, 20%, 80%, 95% quantiles also minimum set required plotting functions work (plot_cases(), plot_rt(), plot_voc_frac()). digits Numeric, defaults 3. Number digits round summary statistics . scale_r Numeric, defaults 1. Rescale timespan growth rate reproduction number calculated. example use case rescaling growth rate weekly scaled mean generation time (COVID-19 example 5.5 / 7. ... Additional parameters passed fv_sample().","code":""},{"path":[]},{"path":"epiforecasts.io/forecast.vocs/reference/fv_as_data_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Format data for use with stan — fv_as_data_list","title":"Format data for use with stan — fv_as_data_list","text":"Format data use stan","code":""},{"path":"epiforecasts.io/forecast.vocs/reference/fv_as_data_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format data for use with stan — fv_as_data_list","text":"","code":"fv_as_data_list(   obs,   horizon = 4,   r_init = c(0, 0.25),   voc_scale = c(0, 0.2),   variant_relationship = \"pooled\",   overdispersion = TRUE,   likelihood = TRUE,   output_loglik = TRUE,   debug = FALSE )"},{"path":"epiforecasts.io/forecast.vocs/reference/fv_as_data_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format data for use with stan — fv_as_data_list","text":"obs data frame following variables: date, cases, seq_voc, seq_total. horizon Integer forecast horizon. Defaults 4. r_init Numeric vector length 2. Prior mean standard deviation initial growth rate. voc_scale Numeric vector length 2. Prior mean standard deviation initial growth rate modifier due variant concern. variant_relationship Character string, defaulting \"pooled\". Controls relationship strains options \"pooled\" (dependence determined data), \"scaled\" (fixed scaling strains), \"independent\" (fully independent strains initial scaling). overdispersion Logical, defaults TRUE. observations used include overdispersion. likelihood Logical, defaults TRUE. likelihood included model output_loglik Logical, defaults FALSE. log-likelihood output. Disabling speed fitting evaluating model fit required. debug Logical, defaults FALSE. within model debug information returned.","code":""},{"path":"epiforecasts.io/forecast.vocs/reference/fv_as_data_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format data for use with stan — fv_as_data_list","text":"list required stan.","code":""},{"path":[]},{"path":"epiforecasts.io/forecast.vocs/reference/fv_as_data_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format data for use with stan — fv_as_data_list","text":"","code":"fv_as_data_list(latest_obs(germany_covid19_delta_obs)) #> $t #> [1] 30 #>  #> $t_nots #> [1] 26 #>  #> $t_nseq #> [1] 4 #>  #> $t_seq #> [1] 14 #>  #> $t_seqf #> [1] 26 #>  #> $X #>  [1]  87328 109442 117965 107223 142664 145568 131887 107141  77261  57310 #> [11]  33052  22631  15553   7659   5033   4181   5067   7969  11122  14654 #> [21]  18474  28646  44862  62984  71057  75107 #>  #> $N #>  [1] 4108 4539 3667 4547 3688 3817 2781 2197 1566  991  706  803  735  564 #>  #> $Y #>  [1]   6  34  54  89 101 119 102 181 309 414 451 631 643 521 #>  #> $likelihood #> [1] 1 #>  #> $output_loglik #> [1] 1 #>  #> $start_date #> [1] \"2021-03-20\" #>  #> $seq_start_date #> [1] \"2021-04-17\" #>  #> $r_init_mean #> [1] 0 #>  #> $r_init_sd #> [1] 0.25 #>  #> $voc_mean #> [1] 0 #>  #> $voc_sd #> [1] 0.2 #>  #> $relat #> [1] 1 #>  #> $overdisp #> [1] 1 #>  #> $debug #> [1] 0 #>  #> $t_dep #> [1] 28 #>"},{"path":"epiforecasts.io/forecast.vocs/reference/fv_example.html","id":null,"dir":"Reference","previous_headings":"","what":"Load a package example — fv_example","title":"Load a package example — fv_example","text":"Loads examples posterior forecast summaries produced using example scripts. Used streamline examples, package tests enable users explore package functionality without needing install cmdstanr.","code":""},{"path":"epiforecasts.io/forecast.vocs/reference/fv_example.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load a package example — fv_example","text":"","code":"fv_example(strains = 1, type = \"posterior\")"},{"path":"epiforecasts.io/forecast.vocs/reference/fv_example.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load a package example — fv_example","text":"strains Integer number strains. Defaults 2. Current maximum 2. type character string indicating example load. Supported options \"posterior\", \"forecast\", \"observations\", \"script\" output fv_tidy_posterior(),  fv_extract_forecast(), filter_by_availability (date argument set \"2021-08-26\" applied germany_covid19_delta_obs package dataset), script used generate examples respectively.","code":""},{"path":"epiforecasts.io/forecast.vocs/reference/fv_example.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load a package example — fv_example","text":"data.table summarised output","code":""},{"path":[]},{"path":"epiforecasts.io/forecast.vocs/reference/fv_example.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load a package example — fv_example","text":"","code":"# Load the summarised posterior from an example fit of the one strain model fv_example(strains = 1, type = \"posterior\") #> Available value types: model, cases, growth, rt, raw #>      value_type     variable                  clean_name       date    type #>   1:      model         beta                        Beta       <NA>         #>   2:      model       phi[1] Notification overdispersion       <NA>         #>   3:      model       r_init              Initial growth       <NA>         #>   4:      model      r_noise                 Growth (sd)       <NA>         #>   5:      cases sim_cases[1]                             2021-03-20 Overall #>  ---                                                                        #> 167:        raw  log_lik[11]                                   <NA>         #> 168:        raw  log_lik[12]                                   <NA>         #> 169:        raw  log_lik[13]                                   <NA>         #> 170:        raw  log_lik[14]                                   <NA>         #> 171:        raw  log_lik[15]                                   <NA>         #>        obs observed forecast_start exponentiated      mean    median       sd #>   1:    NA       NA             NA         FALSE     0.199     0.249 4.78e-01 #>   2:    NA       NA             NA         FALSE   110.000    83.100 1.12e+02 #>   3:    NA       NA             NA         FALSE     0.139     0.139 6.84e-02 #>   4:    NA       NA             NA         FALSE     0.111     0.104 5.52e-02 #>   5: 87328     TRUE          FALSE            NA 89200.000 88800.000 1.30e+04 #>  ---                                                                          #> 167:    NA       NA             NA            NA    -9.570    -9.510 5.71e-01 #> 168:    NA       NA             NA            NA    -8.950    -8.910 4.61e-01 #> 169:    NA       NA             NA            NA    -8.940    -8.830 6.69e-01 #> 170:    NA       NA             NA            NA    -8.210    -8.100 6.56e-01 #> 171:    NA       NA             NA            NA    -7.640    -7.520 6.51e-01 #>           mad        q5       q20       q80       q95 rhat ess_bulk ess_tail #>   1: 5.55e-01 -6.47e-01 -2.52e-01     0.669  8.88e-01 1.00      741     1290 #>   2: 5.21e+01  2.67e+01  4.81e+01   145.000  2.64e+02 1.01      537      369 #>   3: 6.55e-02  2.95e-02  8.14e-02     0.194  2.49e-01 1.00     1290     1190 #>   4: 5.84e-02  3.53e-02  5.94e-02     0.158  2.10e-01 1.00      795     1480 #>   5: 1.13e+04  6.93e+04  7.93e+04 98700.000  1.11e+05 1.00     2430     1640 #>  ---                                                                         #> 167: 4.85e-01 -1.06e+01 -9.97e+00    -9.130 -8.76e+00 1.00      621      481 #> 168: 3.83e-01 -9.79e+00 -9.26e+00    -8.600 -8.32e+00 1.00      586      444 #> 169: 5.22e-01 -1.02e+01 -9.37e+00    -8.460 -8.08e+00 1.00      892      529 #> 170: 5.32e-01 -9.46e+00 -8.64e+00    -7.700 -7.38e+00 1.00      889      601 #> 171: 4.87e-01 -8.86e+00 -8.01e+00    -7.170 -6.86e+00 1.00      750      635  # Load the summarised forecast from this posterior fv_example(strains = 1, type = \"forecast\") #> Available value types: cases, growth, rt #>     value_type    type       date horizon forecast_start         mean #>  1:      cases Overall 2021-07-03       1          FALSE 3030.0000000 #>  2:      cases Overall 2021-07-10       2          FALSE 1900.0000000 #>  3:      cases Overall 2021-07-17       3          FALSE 1260.0000000 #>  4:      cases Overall 2021-07-24       4          FALSE  930.0000000 #>  5:     growth Overall 2021-06-26       1          FALSE   -0.4140714 #>  6:     growth Overall 2021-07-03       2          FALSE   -0.4109286 #>  7:     growth Overall 2021-07-10       3          FALSE   -0.4164286 #>  8:     growth Overall 2021-07-17       4          FALSE   -0.4164286 #>  9:         rt Overall 2021-06-26       1          FALSE    0.6609537 #> 10:         rt Overall 2021-07-03       2          FALSE    0.6630343 #> 11:         rt Overall 2021-07-10       3          FALSE    0.6593976 #> 12:         rt Overall 2021-07-17       4          FALSE    0.6593976 #>           median       sd     mad           q5          q20          q80 #>  1: 2910.0000000  793.000 665.000 1910.0000000 2420.0000000 3590.0000000 #>  2: 1750.0000000  870.000 638.000  903.0000000 1270.0000000 2380.0000000 #>  3: 1020.0000000 1000.000 544.000  384.0000000  644.0000000 1630.0000000 #>  4:  597.0000000 1420.000 436.000  156.0000000  306.0000000 1180.0000000 #>  5:   -0.4125000    0.159   0.143   -0.6136429   -0.5075714   -0.3166429 #>  6:   -0.4125000    0.206   0.182   -0.6647143   -0.5342857   -0.2867857 #>  7:   -0.4172143    0.256   0.227   -0.7275714   -0.5665000   -0.2647857 #>  8:   -0.4180000    0.302   0.254   -0.7857143   -0.5869286   -0.2412143 #>  9:    0.6619932    0.159   0.143    0.5413751    0.6019557    0.7285909 #> 10:    0.6619932    0.206   0.182    0.5144205    0.5860878    0.7506726 #> 11:    0.6588797    0.256   0.227    0.4830808    0.5675082    0.7673704 #> 12:    0.6583622    0.302   0.254    0.4557940    0.5560325    0.7856732 #>               q95 #>  1: 4490.00000000 #>  2: 3420.00000000 #>  3: 2990.00000000 #>  4: 2680.00000000 #>  5:   -0.20271429 #>  6:   -0.15321429 #>  7:   -0.09035714 #>  8:   -0.03912857 #>  9:    0.81651150 #> 10:    0.85794586 #> 11:    0.91360484 #> 12:    0.96162706  # Load the script used to generate these examples # Optionally source this script to regenerate the example readLines(fv_example(strains = 1, type = \"script\")) #>  [1] \"options(mc.cores = 2)\"                                               #>  [2] \"obs <- filter_by_availability(\"                                      #>  [3] \"  germany_covid19_delta_obs,\"                                        #>  [4] \"  date = \\\"2021-06-26\\\"\"                                             #>  [5] \")\"                                                                   #>  [6] \"\"                                                                    #>  [7] \"current_obs <- filter_by_availability(\"                              #>  [8] \"  germany_covid19_delta_obs,\"                                        #>  [9] \"  date = \\\"2021-08-26\\\"\"                                             #> [10] \")\"                                                                   #> [11] \"\"                                                                    #> [12] \"dt <- fv_as_data_list(\"                                              #> [13] \"  obs,\"                                                              #> [14] \"  overdispersion = TRUE,\"                                            #> [15] \"  variant_relationship = \\\"scaled\\\",\"                                #> [16] \"  voc_scale = c(0.4, 0.2)\"                                           #> [17] \")\"                                                                   #> [18] \"\"                                                                    #> [19] \"inits <- fv_inits(dt, strains = 1)\"                                  #> [20] \"\"                                                                    #> [21] \"model <- suppressMessages(fv_model(strains = 1))\"                    #> [22] \"\"                                                                    #> [23] \"fit <- fv_sample(\"                                                   #> [24] \"  data = dt, model = model, init = inits,\"                           #> [25] \"  adapt_delta = 0.99, max_treedepth = 15, chains = 2\"                #> [26] \")\"                                                                   #> [27] \"\"                                                                    #> [28] \"# summarise posterior assuming a mean generation time of  5.5 days.\" #> [29] \"posterior <- fv_tidy_posterior(fit, scale_r = 5.5 / 7)\"              #> [30] \"forecast <- fv_extract_forecast(posterior)\""},{"path":"epiforecasts.io/forecast.vocs/reference/fv_extract_forecast.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract forecasts from a summarised posterior — fv_extract_forecast","title":"Extract forecasts from a summarised posterior — fv_extract_forecast","text":"Uses observed variable returned fv_tidy_posterior() return posterior predictions forecast dates .","code":""},{"path":"epiforecasts.io/forecast.vocs/reference/fv_extract_forecast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract forecasts from a summarised posterior — fv_extract_forecast","text":"","code":"fv_extract_forecast(posterior)"},{"path":"epiforecasts.io/forecast.vocs/reference/fv_extract_forecast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract forecasts from a summarised posterior — fv_extract_forecast","text":"posterior dataframe posterior output produced fv_tidy_posterior(). forecast dates extracted data value_type == \"cases\" must present.","code":""},{"path":"epiforecasts.io/forecast.vocs/reference/fv_extract_forecast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract forecasts from a summarised posterior — fv_extract_forecast","text":"data.frame forecasts format returned fv_tidy_posterior() fitting variables dropped.","code":""},{"path":[]},{"path":"epiforecasts.io/forecast.vocs/reference/fv_extract_forecast.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract forecasts from a summarised posterior — fv_extract_forecast","text":"","code":"p <- fv_example(strains = 2, type = \"posterior\")  fv_extract_forecast(p) #> Available value types: cases, voc_frac, voc_advantage, growth, rt #>        value_type     type       date horizon forecast_start          mean #>  1:         cases Combined 2021-07-03       1          FALSE 3400.00000000 #>  2:         cases Combined 2021-07-10       2          FALSE 2510.00000000 #>  3:         cases Combined 2021-07-17       3          FALSE 2130.00000000 #>  4:         cases Combined 2021-07-24       4          FALSE 2160.00000000 #>  5:         cases      VOC 2021-06-19       1          FALSE 2110.00000000 #>  6:         cases      VOC 2021-06-26       2          FALSE 1950.00000000 #>  7:         cases      VOC 2021-07-03       3          FALSE 1780.00000000 #>  8:         cases      VOC 2021-07-10       4          FALSE 1670.00000000 #>  9:         cases      VOC 2021-07-17       5          FALSE 1660.00000000 #> 10:         cases      VOC 2021-07-24       6          FALSE 1860.00000000 #> 11:         cases  non-VOC 2021-06-19       1          FALSE 6200.00000000 #> 12:         cases  non-VOC 2021-06-26       2          FALSE 3190.00000000 #> 13:         cases  non-VOC 2021-07-03       3          FALSE 1620.00000000 #> 14:         cases  non-VOC 2021-07-10       4          FALSE  837.00000000 #> 15:         cases  non-VOC 2021-07-17       5          FALSE  467.00000000 #> 16:         cases  non-VOC 2021-07-24       6          FALSE  296.00000000 #> 17:      voc_frac      VOC 2021-06-19       1          FALSE    0.25400000 #> 18:      voc_frac      VOC 2021-06-26       2          FALSE    0.37900000 #> 19:      voc_frac      VOC 2021-07-03       3          FALSE    0.52300000 #> 20:      voc_frac      VOC 2021-07-10       4          FALSE    0.66200000 #> 21:      voc_frac      VOC 2021-07-17       5          FALSE    0.77700000 #> 22:      voc_frac      VOC 2021-07-24       6          FALSE    0.86100000 #> 23: voc_advantage      VOC 2021-06-19       1          FALSE    1.59099108 #> 24: voc_advantage      VOC 2021-06-26       2          FALSE    1.59099108 #> 25: voc_advantage      VOC 2021-07-03       3          FALSE    1.59099108 #> 26: voc_advantage      VOC 2021-07-10       4          FALSE    1.59099108 #> 27: voc_advantage      VOC 2021-07-17       5          FALSE    1.59099108 #> 28: voc_advantage      VOC 2021-07-24       6          FALSE    1.59099108 #> 29:        growth Combined 2021-06-26       1          FALSE   -0.30800000 #> 30:        growth Combined 2021-07-03       2          FALSE   -0.25378571 #> 31:        growth Combined 2021-07-10       3          FALSE   -0.21292857 #> 32:        growth Combined 2021-07-17       4          FALSE   -0.18228571 #> 33:        growth      VOC 2021-06-12       1          FALSE   -0.04816429 #> 34:        growth      VOC 2021-06-19       2          FALSE   -0.06442857 #> 35:        growth      VOC 2021-06-26       3          FALSE   -0.08800000 #> 36:        growth      VOC 2021-07-03       4          FALSE   -0.09742857 #> 37:        growth      VOC 2021-07-10       5          FALSE   -0.11078571 #> 38:        growth      VOC 2021-07-17       6          FALSE   -0.11864286 #> 39:        growth  non-VOC 2021-06-12       1          FALSE   -0.51228571 #> 40:        growth  non-VOC 2021-06-19       2          FALSE   -0.52878571 #> 41:        growth  non-VOC 2021-06-26       3          FALSE   -0.55235714 #> 42:        growth  non-VOC 2021-07-03       4          FALSE   -0.56178571 #> 43:        growth  non-VOC 2021-07-10       5          FALSE   -0.57514286 #> 44:        growth  non-VOC 2021-07-17       6          FALSE   -0.58300000 #> 45:            rt Combined 2021-06-26       1          FALSE    0.73491532 #> 46:            rt Combined 2021-07-03       2          FALSE    0.77585804 #> 47:            rt Combined 2021-07-10       3          FALSE    0.80821386 #> 48:            rt Combined 2021-07-17       4          FALSE    0.83336320 #> 49:            rt      VOC 2021-06-12       1          FALSE    0.95297721 #> 50:            rt      VOC 2021-06-19       2          FALSE    0.93760308 #> 51:            rt      VOC 2021-06-26       3          FALSE    0.91576088 #> 52:            rt      VOC 2021-07-03       4          FALSE    0.90716714 #> 53:            rt      VOC 2021-07-10       5          FALSE    0.89513054 #> 54:            rt      VOC 2021-07-17       6          FALSE    0.88812493 #> 55:            rt  non-VOC 2021-06-12       1          FALSE    0.59912458 #> 56:            rt  non-VOC 2021-06-19       2          FALSE    0.58932014 #> 57:            rt  non-VOC 2021-06-26       3          FALSE    0.57559146 #> 58:            rt  non-VOC 2021-07-03       4          FALSE    0.57018996 #> 59:            rt  non-VOC 2021-07-10       5          FALSE    0.56262449 #> 60:            rt  non-VOC 2021-07-17       6          FALSE    0.55822119 #>        value_type     type       date horizon forecast_start          mean #>            median       sd      mad           q5           q20           q80 #>  1: 3300.00000000 9.00e+02 7.89e+02 2170.0000000 2690.00000000  4.020000e+03 #>  2: 2300.00000000 1.16e+03 9.05e+02 1120.0000000 1630.00000000  3.210000e+03 #>  3: 1710.00000000 2.14e+03 1.03e+03  551.0000000  999.00000000  2.880000e+03 #>  4: 1340.00000000 6.26e+03 1.11e+03  256.0000000  611.00000000  2.850000e+03 #>  5: 2080.00000000 4.90e+02 4.51e+02 1420.0000000 1710.00000000  2.460000e+03 #>  6: 1910.00000000 4.64e+02 4.22e+02 1300.0000000 1570.00000000  2.290000e+03 #>  7: 1700.00000000 5.75e+02 4.97e+02 1040.0000000 1320.00000000  2.170000e+03 #>  8: 1520.00000000 8.44e+02 6.30e+02  703.0000000 1050.00000000  2.160000e+03 #>  9: 1320.00000000 1.76e+03 8.24e+02  417.0000000  744.00000000  2.250000e+03 #> 10: 1150.00000000 5.59e+03 9.59e+02  222.0000000  522.00000000  2.450000e+03 #> 11: 6130.00000000 1.04e+03 9.01e+02 4680.0000000 5400.00000000  6.940000e+03 #> 12: 3130.00000000 6.64e+02 5.44e+02 2290.0000000 2700.00000000  3.620000e+03 #> 13: 1550.00000000 4.98e+02 4.23e+02  958.0000000 1240.00000000  1.960000e+03 #> 14:  753.00000000 4.15e+02 3.22e+02  351.0000000  517.00000000  1.090000e+03 #> 15:  368.00000000 4.32e+02 2.32e+02  113.0000000  212.00000000  6.410000e+02 #> 16:  177.00000000 7.09e+02 1.51e+02   32.0000000   79.00000000  3.810000e+02 #> 17:    0.25200000 3.95e-02 3.71e-02    0.1930000    0.22200000  2.850000e-01 #> 18:    0.37800000 5.44e-02 5.22e-02    0.2930000    0.33500000  4.230000e-01 #> 19:    0.52400000 6.34e-02 6.14e-02    0.4190000    0.47100000  5.740000e-01 #> 20:    0.66500000 6.25e-02 6.03e-02    0.5560000    0.61100000  7.140000e-01 #> 21:    0.78200000 5.31e-02 5.00e-02    0.6830000    0.73600000  8.210000e-01 #> 22:    0.86600000 4.02e-02 3.70e-02    0.7890000    0.83100000  8.950000e-01 #> 23:    1.59099108 2.83e-02 2.65e-02    1.5345149    1.56249783  1.620004e+00 #> 24:    1.59099108 2.83e-02 2.65e-02    1.5345149    1.56249783  1.620004e+00 #> 25:    1.59099108 2.83e-02 2.65e-02    1.5345149    1.56249783  1.620004e+00 #> 26:    1.59099108 2.83e-02 2.65e-02    1.5345149    1.56249783  1.620004e+00 #> 27:    1.59099108 2.83e-02 2.65e-02    1.5345149    1.56249783  1.620004e+00 #> 28:    1.59099108 2.83e-02 2.65e-02    1.5345149    1.56249783  1.620004e+00 #> 29:   -0.30878571 1.64e-01 1.49e-01   -0.5170000   -0.40542857 -2.105714e-01 #> 30:   -0.25378571 2.23e-01 1.99e-01   -0.5366429   -0.38657143 -1.210000e-01 #> 31:   -0.20350000 2.76e-01 2.54e-01   -0.5743571   -0.38185714 -4.612143e-02 #> 32:   -0.17521429 3.35e-01 2.96e-01   -0.6199286   -0.37478571  1.830714e-02 #> 33:   -0.04604286 7.73e-02 6.53e-02   -0.1492857   -0.09035714 -3.912857e-03 #> 34:   -0.06702143 9.50e-02 8.78e-02   -0.1815000   -0.12414286 -6.262143e-03 #> 35:   -0.08721429 1.62e-01 1.47e-01   -0.2962143   -0.18385714  9.585714e-03 #> 36:   -0.09742857 2.22e-01 1.98e-01   -0.3795000   -0.22942857  3.504286e-02 #> 37:   -0.10450000 2.76e-01 2.55e-01   -0.4761429   -0.27657143  5.649286e-02 #> 38:   -0.11078571 3.36e-01 2.97e-01   -0.5555000   -0.31035714  8.250000e-02 #> 39:   -0.51071429 7.87e-02 6.84e-02   -0.6144286   -0.55864286 -4.651429e-01 #> 40:   -0.52957143 9.89e-02 9.07e-02   -0.6521429   -0.59007143 -4.675000e-01 #> 41:   -0.55314286 1.65e-01 1.49e-01   -0.7676429   -0.64821429 -4.510000e-01 #> 42:   -0.56178571 2.26e-01 2.01e-01   -0.8485714   -0.69692857 -4.242857e-01 #> 43:   -0.56807143 2.79e-01 2.55e-01   -0.9428571   -0.74328571 -4.070000e-01 #> 44:   -0.57278571 3.39e-01 2.97e-01   -1.0214286   -0.77707143 -3.810714e-01 #> 45:    0.73433811 1.64e-01 1.49e-01    0.5963068    0.66669102  8.101212e-01 #> 46:    0.77585804 2.23e-01 1.99e-01    0.5847079    0.67938220  8.860340e-01 #> 47:    0.81587020 2.76e-01 2.54e-01    0.5630667    0.68259256  9.549260e-01 #> 48:    0.83927716 3.35e-01 2.96e-01    0.5379829    0.68743657  1.018476e+00 #> 49:    0.95500103 7.73e-02 6.53e-02    0.8613230    0.91360484  9.960948e-01 #> 50:    0.93517516 9.50e-02 8.78e-02    0.8340182    0.88325365  9.937574e-01 #> 51:    0.91648069 1.62e-01 1.47e-01    0.7436281    0.83205466  1.009632e+00 #> 52:    0.90716714 2.22e-01 1.98e-01    0.6842034    0.79498775  1.035664e+00 #> 53:    0.90077480 2.76e-01 2.55e-01    0.6211747    0.75837945  1.058119e+00 #> 54:    0.89513054 3.36e-01 2.97e-01    0.5737853    0.73318506  1.085999e+00 #> 55:    0.60006681 7.87e-02 6.84e-02    0.5409499    0.57198480  6.280454e-01 #> 56:    0.58885728 9.89e-02 9.07e-02    0.5209283    0.55428769  6.265667e-01 #> 57:    0.57513939 1.65e-01 1.49e-01    0.4641057    0.52297883  6.369908e-01 #> 58:    0.57018996 2.26e-01 2.01e-01    0.4280260    0.49811287  6.542369e-01 #> 59:    0.56661715 2.79e-01 2.55e-01    0.3895133    0.47554883  6.656442e-01 #> 60:    0.56395224 3.39e-01 2.97e-01    0.3600802    0.45975045  6.831291e-01 #>            median       sd      mad           q5           q20           q80 #>               q95 #>  1: 5010.00000000 #>  2: 4580.00000000 #>  3: 4920.00000000 #>  4: 5870.00000000 #>  5: 2950.00000000 #>  6: 2770.00000000 #>  7: 2810.00000000 #>  8: 3090.00000000 #>  9: 3840.00000000 #> 10: 5170.00000000 #> 11: 7860.00000000 #> 12: 4290.00000000 #> 13: 2490.00000000 #> 14: 1580.00000000 #> 15: 1080.00000000 #> 16:  827.00000000 #> 17:    0.31900000 #> 18:    0.46800000 #> 19:    0.62500000 #> 20:    0.75900000 #> 21:    0.85600000 #> 22:    0.91800000 #> 23:    1.64954584 #> 24:    1.64954584 #> 25:    1.64954584 #> 26:    1.64954584 #> 27:    1.64954584 #> 28:    1.64954584 #> 29:   -0.10292857 #> 30:    0.02530000 #> 31:    0.12414286 #> 32:    0.21371429 #> 33:    0.04140714 #> 34:    0.05665000 #> 35:    0.11628571 #> 36:    0.17914286 #> 37:    0.21921429 #> 38:    0.27657143 #> 39:   -0.42114286 #> 40:   -0.40071429 #> 41:   -0.34335714 #> 42:   -0.28600000 #> 43:   -0.24042857 #> 44:   -0.18228571 #> 45:    0.90219141 #> 46:    1.02562276 #> 47:    1.13217760 #> 48:    1.23826881 #> 49:    1.04227637 #> 50:    1.05828535 #> 51:    1.12331677 #> 52:    1.19619162 #> 53:    1.24509805 #> 54:    1.31860114 #> 55:    0.65629634 #> 56:    0.66984142 #> 57:    0.70938481 #> 58:    0.75126262 #> 59:    0.78629081 #> 60:    0.83336320 #>               q95"},{"path":"epiforecasts.io/forecast.vocs/reference/fv_inits.html","id":null,"dir":"Reference","previous_headings":"","what":"Set up initial conditions for model — fv_inits","title":"Set up initial conditions for model — fv_inits","text":"Set initial conditions model","code":""},{"path":"epiforecasts.io/forecast.vocs/reference/fv_inits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set up initial conditions for model — fv_inits","text":"","code":"fv_inits(data, strains = 2)"},{"path":"epiforecasts.io/forecast.vocs/reference/fv_inits.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set up initial conditions for model — fv_inits","text":"data list data produced fv_as_data_list(). strains Integer number strains. Defaults 2. Current maximum 2.","code":""},{"path":"epiforecasts.io/forecast.vocs/reference/fv_inits.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set up initial conditions for model — fv_inits","text":"function called returns list initial conditions package stan models.","code":""},{"path":[]},{"path":"epiforecasts.io/forecast.vocs/reference/fv_inits.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set up initial conditions for model — fv_inits","text":"","code":"dt <- fv_as_data_list(latest_obs(germany_covid19_delta_obs)) inits <- fv_inits(dt) inits #> function ()  #> { #>     inits <- list(init_cases = purrr::map_dbl(c(data$X[1], max(2,  #>         data$X[data$t_nseq + 1] * data$Y[1]/data$N[1])), ~log(abs(rnorm(1,  #>         ., . * 0.01)))), r_init = rnorm(1, data$r_init_mean,  #>         data$r_init_sd * 0.1), r_noise = abs(rnorm(1, 0, 0.01)),  #>         eta = rnorm(data$t_dep, 0, 0.01), beta = rnorm(1, 0,  #>             0.1), sqrt_phi = abs(rnorm(2, 0, 0.01))) #>     if (strains == 1) { #>         inits$init_cases <- inits$init_cases[1] #>         inits$sqrt_phi <- inits$sqrt_phi[1] #>     } #>     else { #>         inits$voc_mod <- rnorm(1, data$voc_mean, data$voc_sd *  #>             0.1) #>         inits$voc_noise <- abs(rnorm(1, 0, 0.01)) #>         inits$nvoc_noise <- abs(rnorm(1, 0, 0.01)) #>         inits$voc_eta <- rnorm(data$t_seqf - 2, 0, 0.01) #>         inits$nvoc_eta <- rnorm(data$t_seqf - 2, 0, 0.01) #>     } #>     return(inits) #> } #> <bytecode: 0x7f95d8d10448> #> <environment: 0x7f95d8558f08> inits() #> $init_cases #> [1] 11.383194  5.345065 #>  #> $r_init #> [1] 0.01722698 #>  #> $r_noise #> [1] 0.02294424 #>  #> $eta #>  [1]  0.0010932223  0.0065706723 -0.0136458195 -0.0021764154 -0.0169016627 #>  [6]  0.0146470812 -0.0100846275  0.0053775009 -0.0053488175 -0.0133795985 #> [11] -0.0146571877 -0.0076050694 -0.0001696967 -0.0090937537 -0.0055993014 #> [16] -0.0114538181 -0.0167360752 -0.0002771521 -0.0105351537 -0.0150462165 #> [21] -0.0079590870  0.0042970377 -0.0105766068 -0.0048081233  0.0210157803 #> [26]  0.0220534667 -0.0121667468 -0.0002178325 #>  #> $beta #> [1] 0.01506781 #>  #> $sqrt_phi #> [1] 0.011786718 0.009942199 #>  #> $voc_mod #> [1] 0.009708283 #>  #> $voc_noise #> [1] 0.009426162 #>  #> $nvoc_noise #> [1] 0.001436467 #>  #> $voc_eta #>  [1] -0.0041517422 -0.0156664803 -0.0049050828  0.0111508002 -0.0056518740 #>  [6]  0.0009231261  0.0096513036  0.0047277000  0.0009191405  0.0092708978 #> [11]  0.0032466376  0.0078032615  0.0010974419  0.0042050568  0.0053060426 #> [16]  0.0059748348  0.0006684526 -0.0034168692  0.0084324622 -0.0026626689 #> [21]  0.0106802784  0.0045362889  0.0052098840 -0.0127519694 #>  #> $nvoc_eta #>  [1] -0.0085034037  0.0199889209 -0.0048736365 -0.0185285107  0.0005479390 #>  [6]  0.0017257738  0.0013508813  0.0084558347  0.0115838383 -0.0162634090 #> [11] -0.0090643420 -0.0040036855  0.0214076459  0.0158406528  0.0014226905 #> [16] -0.0008828482  0.0118524051 -0.0109644573 -0.0029735790  0.0015895109 #> [21]  0.0024199239 -0.0062900207 -0.0003954702  0.0035694134 #>"},{"path":"epiforecasts.io/forecast.vocs/reference/fv_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Load and compile a strain model — fv_model","title":"Load and compile a strain model — fv_model","text":"Load compile strain model","code":""},{"path":"epiforecasts.io/forecast.vocs/reference/fv_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load and compile a strain model — fv_model","text":"","code":"fv_model(strains = 2, compile = TRUE, ...)"},{"path":"epiforecasts.io/forecast.vocs/reference/fv_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load and compile a strain model — fv_model","text":"strains Integer number strains. Defaults 2. Current maximum 2. compile Logical, defaults TRUE. model loaded compiled using cmdstanr::cmdstan_model(). ... Additional arguments passed cmdstanr::cmdstan_model().","code":""},{"path":"epiforecasts.io/forecast.vocs/reference/fv_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load and compile a strain model — fv_model","text":"cmdstanr model.","code":""},{"path":[]},{"path":"epiforecasts.io/forecast.vocs/reference/fv_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load and compile a strain model — fv_model","text":"","code":"if (FALSE) { # interactive() # one strain model mod <- fv_model(strains = 1)  # two strain model two_strain_mod <- fv_model(strains = 2) }"},{"path":"epiforecasts.io/forecast.vocs/reference/fv_posterior.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise the posterior — fv_posterior","title":"Summarise the posterior — fv_posterior","text":"generic wrapper around posterior::summarise_draws() opinionated defaults. See fv_tidy_posterior() opinionated wrapper cleaning tidying including linking observed data, tidying parameter names, transforming parameters interpretability.","code":""},{"path":"epiforecasts.io/forecast.vocs/reference/fv_posterior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise the posterior — fv_posterior","text":"","code":"fv_posterior(fit, probs = c(0.05, 0.2, 0.8, 0.95), digits = 3, ...)"},{"path":"epiforecasts.io/forecast.vocs/reference/fv_posterior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise the posterior — fv_posterior","text":"fit List output returned fv_sample(). probs vector numeric probabilities produce quantile summaries . default 5%, 20%, 80%, 95% quantiles also minimum set required plotting functions work (plot_cases(), plot_rt(), plot_voc_frac()). digits Numeric, defaults 3. Number digits round summary statistics . ... Additional arguments may passed used.","code":""},{"path":"epiforecasts.io/forecast.vocs/reference/fv_posterior.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise the posterior — fv_posterior","text":"dataframe summarising model posterior.","code":""},{"path":[]},{"path":"epiforecasts.io/forecast.vocs/reference/fv_posterior.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarise the posterior — fv_posterior","text":"","code":"if (FALSE) { # interactive() options(mc.cores = 4) obs <- filter_by_availability(   germany_covid19_delta_obs,   date = as.Date(\"2021-06-12\"), ) dt <- fv_as_data_list(obs) inits <- fv_inits(dt) fit <- fv_sample(dt, init = inits, adapt_delta = 0.99, max_treedepth = 15) fv_posterior(fit) }"},{"path":"epiforecasts.io/forecast.vocs/reference/fv_sample.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit a brancing process strain model — fv_sample","title":"Fit a brancing process strain model — fv_sample","text":"Fit brancing process strain model","code":""},{"path":"epiforecasts.io/forecast.vocs/reference/fv_sample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit a brancing process strain model — fv_sample","text":"","code":"fv_sample(   data,   model = forecast.vocs::fv_model(strains = 2),   diagnostics = TRUE,   ... )"},{"path":"epiforecasts.io/forecast.vocs/reference/fv_sample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit a brancing process strain model — fv_sample","text":"data list data produced fv_as_data_list(). model cmdstanr model object loaded fv_model(). diagnostics Logical, defaults TRUE. fitting diagnostics returned data.frame. ... Additional parameters passed sample method cmdstanr.","code":""},{"path":"epiforecasts.io/forecast.vocs/reference/fv_sample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit a brancing process strain model — fv_sample","text":"data.frame containing cmdstanr fit, input data, fitting arguments, optionally summary diagnostics.","code":""},{"path":[]},{"path":"epiforecasts.io/forecast.vocs/reference/fv_sample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit a brancing process strain model — fv_sample","text":"","code":"if (FALSE) { # interactive() options(mc.cores = 4)  # format example data obs <- filter_by_availability(   germany_covid19_delta_obs,   date = as.Date(\"2021-06-12\"), ) dt <- fv_as_data_list(obs)  # single strain model inits <- fv_inits(dt, strains = 1) mod <- fv_model(strains = 1) fit <- fv_sample(   dt,   model = mod, init = inits,   adapt_delta = 0.99, max_treedepth = 15 ) fit  # two strain model inits <- fv_inits(dt, strains = 2)  mod <- fv_model(strains = 2)  two_strain_fit <- fv_sample(dt,   model = mod, init = inits,   adapt_delta = 0.99, max_treedepth = 15 ) two_strain_fit }"},{"path":"epiforecasts.io/forecast.vocs/reference/fv_score_forecast.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate forecasts using proper scoring rules — fv_score_forecast","title":"Evaluate forecasts using proper scoring rules — fv_score_forecast","text":"Acts wrapper scoringutils::eval_forecasts(). particular, handling filtering output various forecast.vocs functions linking output observed data. See documentation scoringutils package forecast scoring documentation examples simple examples context forecast.vocs.","code":""},{"path":"epiforecasts.io/forecast.vocs/reference/fv_score_forecast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate forecasts using proper scoring rules — fv_score_forecast","text":"","code":"fv_score_forecast(forecast, obs, log = FALSE, round_to = 3, ...)"},{"path":"epiforecasts.io/forecast.vocs/reference/fv_score_forecast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate forecasts using proper scoring rules — fv_score_forecast","text":"forecast posterior forecast posterior prediction returned summary.fv_posterior(), summary.fv_forecast() fv_extract_forecast(). Internally case forecasts filtered using value_type variable present overall combined case counts (.e returned) 1 2 strain models. looking complex scoring may wise implement custom wrapper. obs data frame observed data produced latest_obs(). log Logical, defaults FALSE. scores calculated log scale (0.01 shift) observations forecasts. Scoring way can thought relative score vs usual absolute measure. may useful targets different scales forecaster interested good round performance versus good performance targets large values. round_to Integer defaults 3. Number digits round scoring output . ... Additional arguments passed scoringutils::eval_forecasts().","code":""},{"path":"epiforecasts.io/forecast.vocs/reference/fv_score_forecast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluate forecasts using proper scoring rules — fv_score_forecast","text":"data.table returned scoringutils::eval_forecasts().","code":""},{"path":[]},{"path":"epiforecasts.io/forecast.vocs/reference/fv_score_forecast.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Evaluate forecasts using proper scoring rules — fv_score_forecast","text":"","code":"if (FALSE) { # interactive() options(mc.cores = 4) library(data.table) library(scoringutils)  # Fit and forecast using both the one and two strain models forecasts <- forecast(   germany_covid19_delta_obs,   forecast_date = as.Date(\"2021-06-12\"),   horizon = 4,   strains = c(1, 2),   adapt_delta = 0.99,   max_treedepth = 15,   variant_relationship = \"scaled\" )  # Extract forecasts forecasts <- summary(forecasts, target = \"forecast\", type = \"cases\")  # Filter for the latest available observations obs <- latest_obs(germany_covid19_delta_obs)  # score overall fv_score_forecast(forecasts, obs, summarise_by = \"strains\")  # score overall on a log scale fv_score_forecast(forecasts, obs, summarise_by = \"strains\", log = TRUE)  # score by horizon fv_score_forecast(forecasts, obs, summarise_by = c(\"strains\", \"horizon\"))  # score by horizon on a log scale fv_score_forecast(  forecasts, obs, summarise_by = c(\"strains\", \"horizon\"), log = TRUE ) }"},{"path":"epiforecasts.io/forecast.vocs/reference/fv_tidy_posterior.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise the posterior tidily — fv_tidy_posterior","title":"Summarise the posterior tidily — fv_tidy_posterior","text":"opinionated wrapper around posterior::summarise_draws() cleaning tidying including linking observed data, tidying parameter names, transforming parameters interpretability. See fv_posterior() generic solution.","code":""},{"path":"epiforecasts.io/forecast.vocs/reference/fv_tidy_posterior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise the posterior tidily — fv_tidy_posterior","text":"","code":"fv_tidy_posterior(   fit,   probs = c(0.05, 0.2, 0.8, 0.95),   digits = 3,   voc_label = \"VOC\",   scale_r = 1,   timespan = 7 )"},{"path":"epiforecasts.io/forecast.vocs/reference/fv_tidy_posterior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise the posterior tidily — fv_tidy_posterior","text":"fit List output returned fv_sample(). probs vector numeric probabilities produce quantile summaries . default 5%, 20%, 80%, 95% quantiles also minimum set required plotting functions work (plot_cases(), plot_rt(), plot_voc_frac()). digits Numeric, defaults 3. Number digits round summary statistics . voc_label character string, default \"VOC\". Defines label assign variant concern specific parameters. Example usage rename parameters use variant specific terminology. scale_r Numeric, defaults 1. Rescale timespan growth rate reproduction number calculated. example use case rescaling growth rate weekly scaled mean generation time (COVID-19 example 5.5 / 7.","code":""},{"path":"epiforecasts.io/forecast.vocs/reference/fv_tidy_posterior.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise the posterior tidily — fv_tidy_posterior","text":"dataframe summarising model posterior. Output stratified value_type posterior summaries case, voc, voc advantage vs non-voc time, rt, growth, model, raw posterior summary.","code":""},{"path":[]},{"path":"epiforecasts.io/forecast.vocs/reference/fv_tidy_posterior.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarise the posterior tidily — fv_tidy_posterior","text":"","code":"if (FALSE) { # interactive() options(mc.cores = 4) obs <- filter_by_availability(   germany_covid19_delta_obs,   date = as.Date(\"2021-06-12\"), ) dt <- fv_as_data_list(obs) inits <- fv_inits(dt) fit <- fv_sample(dt, init = inits, adapt_delta = 0.99, max_treedepth = 15) fv_tidy_posterior(fit) }"},{"path":"epiforecasts.io/forecast.vocs/reference/generate_obs.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Simulated Observations — generate_obs","title":"Generate Simulated Observations — generate_obs","text":"Generate simulated observations prior posterior distributions forecast.vocs model. single strain model used case data simulated multiple strain model used sequence data also simulated.","code":""},{"path":"epiforecasts.io/forecast.vocs/reference/generate_obs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Simulated Observations — generate_obs","text":"","code":"generate_obs(   obs,   strains = 2,   model = forecast.vocs::fv_model(strains = strains),   data_list = forecast.vocs::fv_as_data_list,   inits = forecast.vocs::fv_inits,   fit = forecast.vocs::fv_sample,   type = \"prior\",   datasets = 10,   ... )"},{"path":"epiforecasts.io/forecast.vocs/reference/generate_obs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Simulated Observations — generate_obs","text":"obs Observed data use parameterise model used fitting posterior required. strains Integer number strains use. Defaults 2. Current maximum 2. numeric vector can passed forecasts multiple strain models desired. model cmdstanr model object loaded fv_model(). data_list function returns list data ingested inits fit function. Must use arguments defined fv_as_data_list(). supplied package default fv_as_data_list() used. inits function returns function samples initial conditions arguments fv_inits(). supplied package default fv_inits() used. fit function fits supplied model arguments return values fv_sample(). supplied package default fv_sample() used performs MCMC sampling using cmdstanr. type character string indicating type data generate. Supported options data based \"prior\" data based  \"posterior\" default prior. datasets Numeric, defaults 10. Number datasets generate. ... Additional arguments pass fv_as_data_list().","code":""},{"path":"epiforecasts.io/forecast.vocs/reference/generate_obs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Simulated Observations — generate_obs","text":"dataframe sampled dataset row following variables: parameters (prior/posterior parameters used generate data), obs (simulated observed data), data, (simulated data formatted using supplied data_list function (default fv_as_data_list()) arguments specified  simulation).","code":""},{"path":[]},{"path":"epiforecasts.io/forecast.vocs/reference/generate_obs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Simulated Observations — generate_obs","text":"","code":"if (FALSE) { # interactive() options(mc.cores = 4) obs <- latest_obs(germany_covid19_delta_obs)  sim_obs <- generate_obs(obs, voc_scale = c(0.8, 0.1), r_init = c(-0.1, 0.05))  # fit a simulated dataset sim_dt <- sim_obs$data[[1]] inits <- fv_inits(sim_dt) fit <- fv_sample(   sim_dt,   init = inits, adapt_delta = 0.95, max_treedepth = 15 )  # summarise and plot simualated fit posterior <- fv_tidy_posterior(fit)  plot_cases(posterior, log = TRUE)  plot_voc(posterior)  plot_rt(posterior) }"},{"path":"epiforecasts.io/forecast.vocs/reference/generate_obs_scenario.html","id":null,"dir":"Reference","previous_headings":"","what":"Define observed data for a scenario — generate_obs_scenario","title":"Define observed data for a scenario — generate_obs_scenario","text":"Define observed data scenario","code":""},{"path":"epiforecasts.io/forecast.vocs/reference/generate_obs_scenario.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define observed data for a scenario — generate_obs_scenario","text":"","code":"generate_obs_scenario(obs, seq_lag, seq_samples)"},{"path":"epiforecasts.io/forecast.vocs/reference/generate_obs_scenario.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define observed data for a scenario — generate_obs_scenario","text":"obs dataframe observations returned latest_obs() similar. seq_lag Number, number weeks lag sequence data behind date observation. seq_samples Fraction sequence samples include.","code":""},{"path":"epiforecasts.io/forecast.vocs/reference/generate_obs_scenario.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define observed data for a scenario — generate_obs_scenario","text":"data.frame scenario definitions ids","code":""},{"path":[]},{"path":"epiforecasts.io/forecast.vocs/reference/generate_obs_scenario.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Define observed data for a scenario — generate_obs_scenario","text":"","code":"generate_obs_scenario(latest_obs(germany_covid19_delta_obs), 4, 0.1) #>           date location_name location  cases cases_available seq_total seq_voc #>  1: 2021-03-20       Germany       DE  87328      2021-03-20        NA      NA #>  2: 2021-03-27       Germany       DE 109442      2021-03-27        NA      NA #>  3: 2021-04-03       Germany       DE 117965      2021-04-03        NA      NA #>  4: 2021-04-10       Germany       DE 107223      2021-04-10        NA      NA #>  5: 2021-04-17       Germany       DE 142664      2021-04-17       411       1 #>  6: 2021-04-24       Germany       DE 145568      2021-04-24       454       3 #>  7: 2021-05-01       Germany       DE 131887      2021-05-01       367       5 #>  8: 2021-05-08       Germany       DE 107141      2021-05-08       455       9 #>  9: 2021-05-15       Germany       DE  77261      2021-05-15       369      10 #> 10: 2021-05-22       Germany       DE  57310      2021-05-22       382      12 #> 11: 2021-05-29       Germany       DE  33052      2021-05-29       278      10 #> 12: 2021-06-05       Germany       DE  22631      2021-06-05       220      18 #> 13: 2021-06-12       Germany       DE  15553      2021-06-12       157      31 #> 14: 2021-06-19       Germany       DE   7659      2021-06-19        99      41 #> 15: 2021-06-26       Germany       DE   5033      2021-06-26        71      45 #> 16: 2021-07-03       Germany       DE   4181      2021-07-03        80      63 #> 17: 2021-07-10       Germany       DE   5067      2021-07-10        74      64 #> 18: 2021-07-17       Germany       DE   7969      2021-07-17        56      52 #> 19: 2021-07-24       Germany       DE  11122      2021-07-24        NA      NA #> 20: 2021-07-31       Germany       DE  14654      2021-07-31        NA      NA #> 21: 2021-08-07       Germany       DE  18474      2021-08-07        NA      NA #> 22: 2021-08-14       Germany       DE  28646      2021-08-14        NA      NA #> 23: 2021-08-21       Germany       DE  44862      2021-08-21        NA      NA #> 24: 2021-08-28       Germany       DE  62984      2021-08-28        NA      NA #> 25: 2021-09-04       Germany       DE  71057      2021-09-04        NA      NA #> 26: 2021-09-11       Germany       DE  75107      2021-09-11        NA      NA #>           date location_name location  cases cases_available seq_total seq_voc #>       share_voc seq_available #>  1:          NA          <NA> #>  2:          NA          <NA> #>  3:          NA          <NA> #>  4:          NA          <NA> #>  5: 0.001460565    2021-05-15 #>  6: 0.007490637    2021-05-22 #>  7: 0.014725934    2021-05-29 #>  8: 0.019573345    2021-06-05 #>  9: 0.027386117    2021-06-12 #> 10: 0.031176316    2021-06-19 #> 11: 0.036677454    2021-06-26 #> 12: 0.082385071    2021-07-03 #> 13: 0.197318008    2021-07-10 #> 14: 0.417759839    2021-07-17 #> 15: 0.638810198    2021-07-24 #> 16: 0.785803238    2021-07-31 #> 17: 0.874829932    2021-08-07 #> 18: 0.923758865    2021-08-14 #> 19:          NA          <NA> #> 20:          NA          <NA> #> 21:          NA          <NA> #> 22:          NA          <NA> #> 23:          NA          <NA> #> 24:          NA          <NA> #> 25:          NA          <NA> #> 26:          NA          <NA> #>       share_voc seq_available"},{"path":"epiforecasts.io/forecast.vocs/reference/germany_covid19_delta_obs.html","id":null,"dir":"Reference","previous_headings":"","what":"Test positive COVID-19 cases and sequences in Germany — germany_covid19_delta_obs","title":"Test positive COVID-19 cases and sequences in Germany — germany_covid19_delta_obs","text":"Test positive COVID-19 cases sequences stratified voc variant status summarised week Germany. Data sourced RKI via Germany/Poland forecasting hub.","code":""},{"path":"epiforecasts.io/forecast.vocs/reference/germany_covid19_delta_obs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test positive COVID-19 cases and sequences in Germany — germany_covid19_delta_obs","text":"","code":"germany_covid19_delta_obs"},{"path":"epiforecasts.io/forecast.vocs/reference/germany_covid19_delta_obs.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Test positive COVID-19 cases and sequences in Germany — germany_covid19_delta_obs","text":"object class data.table (inherits data.frame) 114 rows 9 columns.","code":""},{"path":"epiforecasts.io/forecast.vocs/reference/germany_covid19_delta_obs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test positive COVID-19 cases and sequences in Germany — germany_covid19_delta_obs","text":"data.table following variables: date, location_name, location, cases, seq_total, seq_voc, share_voc, cases_available, seq_available.","code":""},{"path":[]},{"path":"epiforecasts.io/forecast.vocs/reference/latest_obs.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter for latest observations of all types — latest_obs","title":"Filter for latest observations of all types — latest_obs","text":"Filter latest observations types","code":""},{"path":"epiforecasts.io/forecast.vocs/reference/latest_obs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter for latest observations of all types — latest_obs","text":"","code":"latest_obs(obs)"},{"path":"epiforecasts.io/forecast.vocs/reference/latest_obs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter for latest observations of all types — latest_obs","text":"obs data.frame following variables: date, cases, seq_voc, seq_total, cases_available, seq_available. seq_available case_available must uniquely define data rows rows can duplicated based data availability. data format allows multiple versions case sequence data given date different reporting dates. important using package evaluation settings real-time data sources liable updated new data becomes available. See germany_covid19_delta_obs example supported data set.","code":""},{"path":"epiforecasts.io/forecast.vocs/reference/latest_obs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter for latest observations of all types — latest_obs","text":"data.frame observations filtered latest available data.","code":""},{"path":[]},{"path":"epiforecasts.io/forecast.vocs/reference/latest_obs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter for latest observations of all types — latest_obs","text":"","code":"dt <- rbind(   update_obs_availability(germany_covid19_delta_obs, seq_lag = 3),   update_obs_availability(germany_covid19_delta_obs, seq_lag = 1) ) latest_obs(dt) #>           date location_name location  cases cases_available seq_total seq_voc #>  1: 2021-03-20       Germany       DE  87328      2021-03-20        NA      NA #>  2: 2021-03-27       Germany       DE 109442      2021-03-27        NA      NA #>  3: 2021-04-03       Germany       DE 117965      2021-04-03        NA      NA #>  4: 2021-04-10       Germany       DE 107223      2021-04-10        NA      NA #>  5: 2021-04-17       Germany       DE 142664      2021-04-17      3757       3 #>  6: 2021-04-24       Germany       DE 145568      2021-04-24      3957      15 #>  7: 2021-05-01       Germany       DE 131887      2021-05-01      1913      19 #>  8: 2021-05-08       Germany       DE 107141      2021-05-08      2161      37 #>  9: 2021-05-15       Germany       DE  77261      2021-05-15      1676      40 #> 10: 2021-05-22       Germany       DE  57310      2021-05-22      1387      30 #> 11: 2021-05-29       Germany       DE  33052      2021-05-29      1328      34 #> 12: 2021-06-05       Germany       DE  22631      2021-06-05      1136      75 #> 13: 2021-06-12       Germany       DE  15553      2021-06-12       696     116 #> 14: 2021-06-19       Germany       DE   7659      2021-06-19       576     226 #> 15: 2021-06-26       Germany       DE   5033      2021-06-26       452     287 #> 16: 2021-07-03       Germany       DE   4181      2021-07-03       534     407 #> 17: 2021-07-10       Germany       DE   5067      2021-07-10       468     399 #> 18: 2021-07-17       Germany       DE   7969      2021-07-17       564     521 #> 19: 2021-07-24       Germany       DE  11122      2021-07-24        NA      NA #> 20: 2021-07-31       Germany       DE  14654      2021-07-31        NA      NA #> 21: 2021-08-07       Germany       DE  18474      2021-08-07        NA      NA #> 22: 2021-08-14       Germany       DE  28646      2021-08-14        NA      NA #> 23: 2021-08-21       Germany       DE  44862      2021-08-21        NA      NA #> 24: 2021-08-28       Germany       DE  62984      2021-08-28        NA      NA #> 25: 2021-09-04       Germany       DE  71057      2021-09-04        NA      NA #> 26: 2021-09-11       Germany       DE  75107      2021-09-11        NA      NA #>           date location_name location  cases cases_available seq_total seq_voc #>        share_voc seq_available #>  1:           NA          <NA> #>  2:           NA          <NA> #>  3:           NA          <NA> #>  4:           NA          <NA> #>  5: 0.0007985094    2021-05-08 #>  6: 0.0037907506    2021-05-15 #>  7: 0.0099320439    2021-05-22 #>  8: 0.0171217029    2021-05-29 #>  9: 0.0238663484    2021-06-05 #> 10: 0.0216294160    2021-06-12 #> 11: 0.0256024096    2021-06-19 #> 12: 0.0660211268    2021-06-26 #> 13: 0.1666666667    2021-07-03 #> 14: 0.3923611111    2021-07-10 #> 15: 0.6349557522    2021-07-17 #> 16: 0.7621722846    2021-07-24 #> 17: 0.8525641026    2021-07-31 #> 18: 0.9237588652    2021-08-07 #> 19:           NA          <NA> #> 20:           NA          <NA> #> 21:           NA          <NA> #> 22:           NA          <NA> #> 23:           NA          <NA> #> 24:           NA          <NA> #> 25:           NA          <NA> #> 26:           NA          <NA> #>        share_voc seq_available"},{"path":"epiforecasts.io/forecast.vocs/reference/link_dates_with_posterior.html","id":null,"dir":"Reference","previous_headings":"","what":"Link dates by time for posterior parameter estimates — link_dates_with_posterior","title":"Link dates by time for posterior parameter estimates — link_dates_with_posterior","text":"Link dates time posterior parameter estimates","code":""},{"path":"epiforecasts.io/forecast.vocs/reference/link_dates_with_posterior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Link dates by time for posterior parameter estimates — link_dates_with_posterior","text":"","code":"link_dates_with_posterior(posterior, data, timespan = 7, mod_end = 0)"},{"path":"epiforecasts.io/forecast.vocs/reference/link_dates_with_posterior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Link dates by time for posterior parameter estimates — link_dates_with_posterior","text":"posterior data frame summarised posterior estimates returned cmdstanr::summary()  additional type variable contains following character string options: \"non-VOC\", \"VOC\", \"Combined\", \"Overall\". data list data returned \"data\" entry output returned fv_sample(). timespan Integer, defaults 7. Indicates number days observation. Defaults week. mod_end Integer, defaults 0. Amount shift end date estimates.","code":""},{"path":"epiforecasts.io/forecast.vocs/reference/link_dates_with_posterior.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Link dates by time for posterior parameter estimates — link_dates_with_posterior","text":"posterior data.frame additional data column.","code":""},{"path":[]},{"path":"epiforecasts.io/forecast.vocs/reference/link_obs_with_posterior.html","id":null,"dir":"Reference","previous_headings":"","what":"Link posterior estimates with observed data — link_obs_with_posterior","title":"Link posterior estimates with observed data — link_obs_with_posterior","text":"Link posterior estimates observed data flag values observed .","code":""},{"path":"epiforecasts.io/forecast.vocs/reference/link_obs_with_posterior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Link posterior estimates with observed data — link_obs_with_posterior","text":"","code":"link_obs_with_posterior(posterior, obs, horizon, target_types)"},{"path":"epiforecasts.io/forecast.vocs/reference/link_obs_with_posterior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Link posterior estimates with observed data — link_obs_with_posterior","text":"posterior data frame summarised posterior estimates returned cmdstanr::summary()  additional type variable contains following character string options: \"non-VOC\", \"VOC\", \"Combined\", \"Overall\". obs Numeric vector observed data link posterior estimates. horizon Integer indicating horizon unobserved forecasts. specified inferred obs. target_types character vector types (specified type variable) modify.","code":""},{"path":"epiforecasts.io/forecast.vocs/reference/link_obs_with_posterior.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Link posterior estimates with observed data — link_obs_with_posterior","text":"input data.frame combined obs observed variables.","code":""},{"path":[]},{"path":"epiforecasts.io/forecast.vocs/reference/plot.fv_forecast.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot method for forecast — plot.fv_forecast","title":"Plot method for forecast — plot.fv_forecast","text":"plot method class \"fv_forecast\". type plot produced can controlled using target type arguments latter functional target set \"posterior\" \"forecast\".","code":""},{"path":"epiforecasts.io/forecast.vocs/reference/plot.fv_forecast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot method for forecast — plot.fv_forecast","text":"","code":"# S3 method for fv_forecast plot(x, obs = NULL, target = \"posterior\", type = \"cases\", ...)"},{"path":"epiforecasts.io/forecast.vocs/reference/plot.fv_forecast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot method for forecast — plot.fv_forecast","text":"x data.table output produced forecast() class \"fv_forecast\". obs data frame observed data produced latest_obs(). target character string indicating target object within forecast() produce plots . Current options : posterior predictions (\"posterior\"), posterior forecasts (\"forecast\"), model fit (\"fit\"). \"posterior\" \"forecast\" used plot.fv_posterior() called whereas \"fit\" used plot_pairs() used. type character string indicating type plot required, defaulting \"cases\". Current options : \"cases\" calls plot_cases(), \"voc_frac\" calls plot_voc_frac(), \"voc_advantage\" calls plot_voc_advantage(), \"growth\" calls plot_growth(), \"rt\" calls plot_rt(), \"\" produces list plots call plot_posterior(). ... Pass additional arguments lower level plot functions.","code":""},{"path":"epiforecasts.io/forecast.vocs/reference/plot.fv_forecast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot method for forecast — plot.fv_forecast","text":"ggplot2 object","code":""},{"path":[]},{"path":"epiforecasts.io/forecast.vocs/reference/plot.fv_forecast.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot method for forecast — plot.fv_forecast","text":"","code":"if (FALSE) { # interactive() options(mc.cores = 4)  forecasts <- forecast(   germany_covid19_delta_obs,   forecast_date = as.Date(\"2021-06-12\"),   horizon = 4,   strains = c(1, 2),   adapt_delta = 0.99,   max_treedepth = 15,   variant_relationship = \"scaled\" ) # inspect forecasts forecasts  # plot case posterior predictions plot(forecasts, log = TRUE)  # plot voc posterior predictions plot(forecasts, type = \"voc_frac\") }"},{"path":"epiforecasts.io/forecast.vocs/reference/plot.fv_posterior.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot method for fv_tidy_posterior — plot.fv_posterior","title":"Plot method for fv_tidy_posterior — plot.fv_posterior","text":"plot method class \"fv_posterior\". function wraps lower level plot functions.","code":""},{"path":"epiforecasts.io/forecast.vocs/reference/plot.fv_posterior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot method for fv_tidy_posterior — plot.fv_posterior","text":"","code":"# S3 method for fv_posterior plot(   x,   obs = NULL,   type = \"cases\",   forecast_dates = NULL,   all_obs = FALSE,   voc_label = \"variant of concern\",   ... )"},{"path":"epiforecasts.io/forecast.vocs/reference/plot.fv_posterior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot method for fv_tidy_posterior — plot.fv_posterior","text":"x data.table output produced fv_tidy_posterior(). obs data frame observed data produced latest_obs(). type character string indicating type plot required, defaulting \"cases\". Current options : \"cases\" calls plot_cases(), \"voc_frac\" calls plot_voc_frac(), \"voc_advantage\" calls plot_voc_advantage(), \"growth\" calls plot_growth(), \"rt\" calls plot_rt(), \"\" produces list plots call plot_posterior(). forecast_dates data.frame format produced extract_forecast_dates() (least date variable Data unavailable variable)). Specifies date availability add plots. May contain faceting variables. all_obs Logical, defaults FALSE. observations plot just date range estimates plot. voc_label Character string giving name assign variant concern. Defaults  \"variant concern\". ... Pass additional arguments lower level plot functions.","code":""},{"path":"epiforecasts.io/forecast.vocs/reference/plot.fv_posterior.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot method for fv_tidy_posterior — plot.fv_posterior","text":"ggplot2 object","code":""},{"path":[]},{"path":"epiforecasts.io/forecast.vocs/reference/plot.fv_posterior.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot method for fv_tidy_posterior — plot.fv_posterior","text":"","code":"posterior <- fv_example(strains = 2, type = \"posterior\")  # plot cases on the log scale plot(posterior, type = \"cases\", log = TRUE)   # plot fraction that have the variant of concern plot(posterior, type = \"voc_frac\")   # plot the transmission advantage for the the variant of concern plot(posterior, type = \"voc_advantage\")   # plot the growth rates for both voc and non-voc cases plot(posterior, type = \"growth\")   # plot the reproduction number estimates plot(posterior, type = \"rt\")"},{"path":"epiforecasts.io/forecast.vocs/reference/plot_cases.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the posterior prediction for cases — plot_cases","title":"Plot the posterior prediction for cases — plot_cases","text":"Plot posterior prediction cases","code":""},{"path":"epiforecasts.io/forecast.vocs/reference/plot_cases.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the posterior prediction for cases — plot_cases","text":"","code":"plot_cases(   posterior,   obs = NULL,   forecast_dates = NULL,   all_obs = FALSE,   col = NULL,   log = TRUE )"},{"path":"epiforecasts.io/forecast.vocs/reference/plot_cases.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the posterior prediction for cases — plot_cases","text":"posterior dataframe posterior output produced fv_tidy_posterior(). forecast dates extracted data value_type == \"cases\" must present. obs data frame observed data produced latest_obs(). forecast_dates data.frame format produced extract_forecast_dates() (least date variable Data unavailable variable)). Specifies date availability add plots. May contain faceting variables. all_obs Logical, defaults FALSE. observations plot just date range estimates plot. col character string denoting variable use stratify ribbon plot. Defaults \"type\" indicates data stream. log Logical, defaults TRUE. cases plot log scale?","code":""},{"path":"epiforecasts.io/forecast.vocs/reference/plot_cases.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the posterior prediction for cases — plot_cases","text":"ggplot2 plot.","code":""},{"path":[]},{"path":"epiforecasts.io/forecast.vocs/reference/plot_cases.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the posterior prediction for cases — plot_cases","text":"","code":"posterior <- fv_example(strains = 2, type = \"posterior\")  # default with log transform plot_cases(posterior)   # without log transform plot_cases(posterior)"},{"path":"epiforecasts.io/forecast.vocs/reference/plot_default.html","id":null,"dir":"Reference","previous_headings":"","what":"Default posterior plot — plot_default","title":"Default posterior plot — plot_default","text":"Default posterior plot","code":""},{"path":"epiforecasts.io/forecast.vocs/reference/plot_default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default posterior plot — plot_default","text":"","code":"plot_default(   posterior,   target,   obs = NULL,   forecast_dates = NULL,   all_obs = FALSE,   ... )"},{"path":"epiforecasts.io/forecast.vocs/reference/plot_default.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default posterior plot — plot_default","text":"posterior dataframe posterior output produced fv_tidy_posterior(). forecast dates extracted data value_type == \"cases\" must present. target character string indicating variable extract posterior list. obs data frame observed data produced latest_obs(). forecast_dates data.frame format produced extract_forecast_dates() (least date variable Data unavailable variable)). Specifies date availability add plots. May contain faceting variables. all_obs Logical, defaults FALSE. observations plot just date range estimates plot. ... Additional arguments passed ggplot2::aes()","code":""},{"path":"epiforecasts.io/forecast.vocs/reference/plot_default.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Default posterior plot — plot_default","text":"ggplot2 plot.","code":""},{"path":[]},{"path":"epiforecasts.io/forecast.vocs/reference/plot_growth.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the posterior prediction for the growth rate — plot_growth","title":"Plot the posterior prediction for the growth rate — plot_growth","text":"Plot posterior prediction growth rate","code":""},{"path":"epiforecasts.io/forecast.vocs/reference/plot_growth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the posterior prediction for the growth rate — plot_growth","text":"","code":"plot_growth(posterior, forecast_dates = NULL, col = NULL)"},{"path":"epiforecasts.io/forecast.vocs/reference/plot_growth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the posterior prediction for the growth rate — plot_growth","text":"posterior dataframe posterior output produced fv_tidy_posterior(). forecast dates extracted data value_type == \"cases\" must present. forecast_dates data.frame format produced extract_forecast_dates() (least date variable Data unavailable variable)). Specifies date availability add plots. May contain faceting variables. col character string denoting variable use stratify ribbon plot. Defaults \"type\" indicates data stream.","code":""},{"path":"epiforecasts.io/forecast.vocs/reference/plot_growth.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the posterior prediction for the growth rate — plot_growth","text":"ggplot2 plot.","code":""},{"path":[]},{"path":"epiforecasts.io/forecast.vocs/reference/plot_growth.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the posterior prediction for the growth rate — plot_growth","text":"","code":"posterior <- fv_example(strains = 2, type = \"posterior\") plot_growth(posterior)"},{"path":"epiforecasts.io/forecast.vocs/reference/plot_pairs.html","id":null,"dir":"Reference","previous_headings":"","what":"Pairs plot of parameters of interest and fitting diagnostics — plot_pairs","title":"Pairs plot of parameters of interest and fitting diagnostics — plot_pairs","text":"Pairs plot parameters interest fitting diagnostics","code":""},{"path":"epiforecasts.io/forecast.vocs/reference/plot_pairs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pairs plot of parameters of interest and fitting diagnostics — plot_pairs","text":"","code":"plot_pairs(   fit,   pars = c(\"r_init\", \"r_noise\", \"beta\", \"voc_noise[1]\", \"nvoc_noise[1]\", \"init_cases\",     \"init_cases[1]\", \"init_cases[2]\", \"eta[1]\", \"voc_eta[1]\", \"nvoc_eta[1]\",     \"sqrt_phi[1]\", \"sqrt_phi[2]\", \"sqrt_phi\"),   diagnostics = TRUE,   ... )"},{"path":"epiforecasts.io/forecast.vocs/reference/plot_pairs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pairs plot of parameters of interest and fitting diagnostics — plot_pairs","text":"fit List output returned fv_sample(). pars Character vector parameters try include plot. included present fitted model. diagnostics Logical, defaults TRUE. fitting diagnostics returned data.frame. ... Additional parameters passed bayesplot::mcmc_pairs().","code":""},{"path":"epiforecasts.io/forecast.vocs/reference/plot_pairs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pairs plot of parameters of interest and fitting diagnostics — plot_pairs","text":"ggplot2 based pairs plot parameters interest","code":""},{"path":[]},{"path":"epiforecasts.io/forecast.vocs/reference/plot_pairs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pairs plot of parameters of interest and fitting diagnostics — plot_pairs","text":"","code":"if (FALSE) { # interactive() obs <- filter_by_availability(   germany_covid19_delta_obs,   date = as.Date(\"2021-06-12\"), ) dt <- fv_as_data_list(obs) inits <- fv_inits(dt) fit <- fv_sample(dt, init = inits, adapt_voc = 0.99, max_treedepth = 15) plot_pairs(fit) }"},{"path":"epiforecasts.io/forecast.vocs/reference/plot_posterior.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot posterior predictions — plot_posterior","title":"Plot posterior predictions — plot_posterior","text":"Plot posterior predictions","code":""},{"path":"epiforecasts.io/forecast.vocs/reference/plot_posterior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot posterior predictions — plot_posterior","text":"","code":"plot_posterior(   posterior,   obs = NULL,   forecast_dates = NULL,   all_obs = FALSE,   voc_label = \"variant of concern\" )"},{"path":"epiforecasts.io/forecast.vocs/reference/plot_posterior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot posterior predictions — plot_posterior","text":"posterior dataframe posterior output produced fv_tidy_posterior(). forecast dates extracted data value_type == \"cases\" must present. obs data frame observed data produced latest_obs(). forecast_dates data.frame format produced extract_forecast_dates() (least date variable Data unavailable variable)). Specifies date availability add plots. May contain faceting variables. all_obs Logical, defaults FALSE. observations plot just date range estimates plot. voc_label Character string giving name assign variant concern. Defaults  \"variant concern\".","code":""},{"path":"epiforecasts.io/forecast.vocs/reference/plot_posterior.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot posterior predictions — plot_posterior","text":"named list supported package plots sensible defaults.","code":""},{"path":[]},{"path":"epiforecasts.io/forecast.vocs/reference/plot_posterior.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot posterior predictions — plot_posterior","text":"","code":"posterior <- fv_example(strains = 2, type = \"posterior\") plot_posterior(posterior) #> $cases  #>  #> $log_cases  #>  #> $voc_frac  #>  #> $voc_advantage  #>  #> $growth  #>  #> $rt  #>"},{"path":"epiforecasts.io/forecast.vocs/reference/plot_rt.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the posterior prediction for the reproduction number — plot_rt","title":"Plot the posterior prediction for the reproduction number — plot_rt","text":"Plot posterior prediction reproduction number","code":""},{"path":"epiforecasts.io/forecast.vocs/reference/plot_rt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the posterior prediction for the reproduction number — plot_rt","text":"","code":"plot_rt(posterior, forecast_dates = NULL, col = NULL)"},{"path":"epiforecasts.io/forecast.vocs/reference/plot_rt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the posterior prediction for the reproduction number — plot_rt","text":"posterior dataframe posterior output produced fv_tidy_posterior(). forecast dates extracted data value_type == \"cases\" must present. forecast_dates data.frame format produced extract_forecast_dates() (least date variable Data unavailable variable)). Specifies date availability add plots. May contain faceting variables. col character string denoting variable use stratify ribbon plot. Defaults \"type\" indicates data stream.","code":""},{"path":"epiforecasts.io/forecast.vocs/reference/plot_rt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the posterior prediction for the reproduction number — plot_rt","text":"ggplot2 plot.","code":""},{"path":[]},{"path":"epiforecasts.io/forecast.vocs/reference/plot_rt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the posterior prediction for the reproduction number — plot_rt","text":"","code":"posterior <- fv_example(strains = 2, type = \"posterior\") plot_rt(posterior)"},{"path":"epiforecasts.io/forecast.vocs/reference/plot_theme.html","id":null,"dir":"Reference","previous_headings":"","what":"Add the default plot theme — plot_theme","title":"Add the default plot theme — plot_theme","text":"Add default plot theme","code":""},{"path":"epiforecasts.io/forecast.vocs/reference/plot_theme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add the default plot theme — plot_theme","text":"","code":"plot_theme(plot)"},{"path":"epiforecasts.io/forecast.vocs/reference/plot_theme.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add the default plot theme — plot_theme","text":"plot ggplot2 object","code":""},{"path":"epiforecasts.io/forecast.vocs/reference/plot_theme.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add the default plot theme — plot_theme","text":"ggplot2 plot package theme applied.","code":""},{"path":[]},{"path":"epiforecasts.io/forecast.vocs/reference/plot_voc_advantage.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the posterior prediction for the transmission advantage for the variant\nof concern — plot_voc_advantage","title":"Plot the posterior prediction for the transmission advantage for the variant\nof concern — plot_voc_advantage","text":"Plot posterior prediction transmission advantage variant concern","code":""},{"path":"epiforecasts.io/forecast.vocs/reference/plot_voc_advantage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the posterior prediction for the transmission advantage for the variant\nof concern — plot_voc_advantage","text":"","code":"plot_voc_advantage(   posterior,   forecast_dates = NULL,   voc_label = \"variant of concern\",   ... )"},{"path":"epiforecasts.io/forecast.vocs/reference/plot_voc_advantage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the posterior prediction for the transmission advantage for the variant\nof concern — plot_voc_advantage","text":"posterior dataframe posterior output produced fv_tidy_posterior(). forecast dates extracted data value_type == \"cases\" must present. forecast_dates data.frame format produced extract_forecast_dates() (least date variable Data unavailable variable)). Specifies date availability add plots. May contain faceting variables. voc_label Character string giving name assign variant concern. Defaults  \"variant concern\". ... Additional parameters passed plot_default().","code":""},{"path":"epiforecasts.io/forecast.vocs/reference/plot_voc_advantage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the posterior prediction for the transmission advantage for the variant\nof concern — plot_voc_advantage","text":"ggplot2 plot.","code":""},{"path":[]},{"path":"epiforecasts.io/forecast.vocs/reference/plot_voc_advantage.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the posterior prediction for the transmission advantage for the variant\nof concern — plot_voc_advantage","text":"","code":"posterior <- fv_example(strains = 2, type = \"posterior\") plot_voc_advantage(posterior)"},{"path":"epiforecasts.io/forecast.vocs/reference/plot_voc_frac.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the posterior prediction for the fraction of samples with the variant\nof concern — plot_voc_frac","title":"Plot the posterior prediction for the fraction of samples with the variant\nof concern — plot_voc_frac","text":"Plot posterior prediction fraction samples variant concern","code":""},{"path":"epiforecasts.io/forecast.vocs/reference/plot_voc_frac.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the posterior prediction for the fraction of samples with the variant\nof concern — plot_voc_frac","text":"","code":"plot_voc_frac(   posterior,   obs = NULL,   forecast_dates = NULL,   all_obs = FALSE,   voc_label = \"variant of concern\",   ... )"},{"path":"epiforecasts.io/forecast.vocs/reference/plot_voc_frac.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the posterior prediction for the fraction of samples with the variant\nof concern — plot_voc_frac","text":"posterior dataframe posterior output produced fv_tidy_posterior(). forecast dates extracted data value_type == \"cases\" must present. obs data frame observed data produced latest_obs(). forecast_dates data.frame format produced extract_forecast_dates() (least date variable Data unavailable variable)). Specifies date availability add plots. May contain faceting variables. all_obs Logical, defaults FALSE. observations plot just date range estimates plot. voc_label Character string giving name assign variant concern. Defaults  \"variant concern\". ... Additional parameters passed plot_default().","code":""},{"path":"epiforecasts.io/forecast.vocs/reference/plot_voc_frac.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the posterior prediction for the fraction of samples with the variant\nof concern — plot_voc_frac","text":"ggplot2 plot.","code":""},{"path":[]},{"path":"epiforecasts.io/forecast.vocs/reference/plot_voc_frac.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the posterior prediction for the fraction of samples with the variant\nof concern — plot_voc_frac","text":"","code":"posterior <- fv_example(strains = 2, type = \"posterior\") plot_voc_frac(posterior)"},{"path":"epiforecasts.io/forecast.vocs/reference/print.fv_posterior.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for fv_tidy_posterior — print.fv_posterior","title":"Print method for fv_tidy_posterior — print.fv_posterior","text":"print method class \"fv_posterior\". Prints available value types falls back data.table print method.","code":""},{"path":"epiforecasts.io/forecast.vocs/reference/print.fv_posterior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for fv_tidy_posterior — print.fv_posterior","text":"","code":"# S3 method for fv_posterior print(x, ...)"},{"path":"epiforecasts.io/forecast.vocs/reference/print.fv_posterior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for fv_tidy_posterior — print.fv_posterior","text":"x output output fv_tidy_posterior(). ... Pass additional arguments data.table printing method.","code":""},{"path":"epiforecasts.io/forecast.vocs/reference/print.fv_posterior.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print method for fv_tidy_posterior — print.fv_posterior","text":"summary data.frame","code":""},{"path":[]},{"path":"epiforecasts.io/forecast.vocs/reference/print.fv_posterior.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print method for fv_tidy_posterior — print.fv_posterior","text":"","code":"posterior <- fv_example(strains = 2, type = \"posterior\")  # case summary posterior #> Available value types: model, cases, voc_frac, voc_advantage, growth, rt, raw #>      value_type          variable                  clean_name date type obs #>   1:      model avg_voc_advantage          Average VOC effect <NA>       NA #>   2:      model              beta                        Beta <NA>       NA #>   3:      model     init_cases[1]               Initial cases <NA>       NA #>   4:      model     init_cases[2]           Initial VOC cases <NA>       NA #>   5:      model            phi[1] Notification overdispersion <NA>       NA #>  ---                                                                        #> 434:        raw       log_lik[11]                             <NA>       NA #> 435:        raw       log_lik[12]                             <NA>       NA #> 436:        raw       log_lik[13]                             <NA>       NA #> 437:        raw       log_lik[14]                             <NA>       NA #> 438:        raw       log_lik[15]                             <NA>       NA #>      observed forecast_start exponentiated         mean       median      sd #>   1:       NA             NA          TRUE     1.805793     1.805793  0.0283 #>   2:       NA             NA         FALSE     0.359000     0.457000  0.4700 #>   3:       NA             NA          TRUE 89321.723361 89321.723361  0.0713 #>   4:       NA             NA          TRUE   219.203386   219.203386  0.0975 #>   5:       NA             NA         FALSE    92.000000    77.000000 62.0000 #>  ---                                                                         #> 434:       NA             NA            NA   -14.800000   -14.700000  0.7130 #> 435:       NA             NA            NA   -14.100000   -14.000000  0.6710 #> 436:       NA             NA            NA   -13.700000   -13.600000  0.8350 #> 437:       NA             NA            NA    -8.160000    -8.060000  0.5840 #> 438:       NA             NA            NA    -7.690000    -7.560000  0.6060 #>          mad           q5          q20          q80        q95 rhat ess_bulk #>   1:  0.0265     1.724608     1.764734     1.847808     1.8908    1     1880 #>   2:  0.4870    -0.523000    -0.086800     0.798000     0.9490    1      616 #>   3:  0.0721 80821.637540 80821.637540 98715.771011 98715.7710    1     1720 #>   4:  0.0971   186.792804   202.350228   237.460193   257.2376    1     2220 #>   5: 47.8000    23.600000    43.500000   130.000000   212.0000    1      809 #>  ---                                                                         #> 434:  0.6130   -16.000000   -15.300000   -14.200000   -13.8000    1     1100 #> 435:  0.6100   -15.300000   -14.600000   -13.500000   -13.1000    1      909 #> 436:  0.7320   -15.200000   -14.300000   -13.000000   -12.5000    1     1280 #> 437:  0.4510    -9.240000    -8.530000    -7.730000    -7.4300    1     1290 #> 438:  0.4880    -8.860000    -8.100000    -7.210000    -6.9500    1      903 #>      ess_tail #>   1:     1410 #>   2:     1090 #>   3:     1260 #>   4:     1480 #>   5:     1100 #>  ---          #> 434:     1210 #> 435:     1030 #> 436:     1510 #> 437:     1270 #> 438:     1490"},{"path":"epiforecasts.io/forecast.vocs/reference/quantiles_to_long.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert summarised quantiles from wide to long format — quantiles_to_long","title":"Convert summarised quantiles from wide to long format — quantiles_to_long","text":"Convert summarised quantiles wide long format","code":""},{"path":"epiforecasts.io/forecast.vocs/reference/quantiles_to_long.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert summarised quantiles from wide to long format — quantiles_to_long","text":"","code":"quantiles_to_long(posterior)"},{"path":"epiforecasts.io/forecast.vocs/reference/quantiles_to_long.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert summarised quantiles from wide to long format — quantiles_to_long","text":"posterior dataframe output fv_tidy_posterior(), fv_extract_forecast(), etc.","code":""},{"path":"epiforecasts.io/forecast.vocs/reference/quantiles_to_long.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert summarised quantiles from wide to long format — quantiles_to_long","text":"data frame quantiles long format.","code":""},{"path":[]},{"path":"epiforecasts.io/forecast.vocs/reference/quantiles_to_long.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert summarised quantiles from wide to long format — quantiles_to_long","text":"","code":"posterior <- fv_example(strains = 2, type = \"posterior\") long_posterior <- quantiles_to_long(posterior) long_posterior #>       value_type          variable                  clean_name date type obs #>    1:      model avg_voc_advantage          Average VOC effect <NA>       NA #>    2:      model              beta                        Beta <NA>       NA #>    3:      model     init_cases[1]               Initial cases <NA>       NA #>    4:      model     init_cases[2]           Initial VOC cases <NA>       NA #>    5:      model            phi[1] Notification overdispersion <NA>       NA #>   ---                                                                        #> 1748:        raw       log_lik[11]                             <NA>       NA #> 1749:        raw       log_lik[12]                             <NA>       NA #> 1750:        raw       log_lik[13]                             <NA>       NA #> 1751:        raw       log_lik[14]                             <NA>       NA #> 1752:        raw       log_lik[15]                             <NA>       NA #>       observed forecast_start exponentiated         mean       median      sd #>    1:       NA             NA          TRUE     1.805793     1.805793  0.0283 #>    2:       NA             NA         FALSE     0.359000     0.457000  0.4700 #>    3:       NA             NA          TRUE 89321.723361 89321.723361  0.0713 #>    4:       NA             NA          TRUE   219.203386   219.203386  0.0975 #>    5:       NA             NA         FALSE    92.000000    77.000000 62.0000 #>   ---                                                                         #> 1748:       NA             NA            NA   -14.800000   -14.700000  0.7130 #> 1749:       NA             NA            NA   -14.100000   -14.000000  0.6710 #> 1750:       NA             NA            NA   -13.700000   -13.600000  0.8350 #> 1751:       NA             NA            NA    -8.160000    -8.060000  0.5840 #> 1752:       NA             NA            NA    -7.690000    -7.560000  0.6060 #>           mad rhat ess_bulk ess_tail quantile   prediction #>    1:  0.0265    1     1880     1410     0.05     1.724608 #>    2:  0.4870    1      616     1090     0.05    -0.523000 #>    3:  0.0721    1     1720     1260     0.05 80821.637540 #>    4:  0.0971    1     2220     1480     0.05   186.792804 #>    5: 47.8000    1      809     1100     0.05    23.600000 #>   ---                                                      #> 1748:  0.6130    1     1100     1210     0.95   -13.800000 #> 1749:  0.6100    1      909     1030     0.95   -13.100000 #> 1750:  0.7320    1     1280     1510     0.95   -12.500000 #> 1751:  0.4510    1     1290     1270     0.95    -7.430000 #> 1752:  0.4880    1      903     1490     0.95    -6.950000"},{"path":"epiforecasts.io/forecast.vocs/reference/sample_sequences.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample Sequence Observation Model — sample_sequences","title":"Sample Sequence Observation Model — sample_sequences","text":"Sample Sequence Observation Model","code":""},{"path":"epiforecasts.io/forecast.vocs/reference/sample_sequences.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample Sequence Observation Model — sample_sequences","text":"","code":"sample_sequences(frac_voc, seq_total, phi)"},{"path":"epiforecasts.io/forecast.vocs/reference/sample_sequences.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample Sequence Observation Model — sample_sequences","text":"frac_voc numeric vector expected proportions positive variant concern. seq_total integer vector total sequences available. phi overdispersion sampling process. supplied overdispersion used (.e binomial observation model vs beta binomial observation model).","code":""},{"path":"epiforecasts.io/forecast.vocs/reference/sample_sequences.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample Sequence Observation Model — sample_sequences","text":"vector observed sequences positive variant concern.","code":""},{"path":[]},{"path":"epiforecasts.io/forecast.vocs/reference/sample_sequences.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample Sequence Observation Model — sample_sequences","text":"","code":"# dummy sequence data frac_voc <- seq(0, 1, by = 0.1) seq_total <- seq(10, length.out = length(frac_voc), by = 100)  # binomial observation model sample_sequences(frac_voc, seq_total) #>  [1]    0    6   43   91  154  270  364  493  651  816 1010  # beta binomial observation model sample_sequences(frac_voc, seq_total, 0.5) #>  [1]    0    0  162    0    6    0  341  533    0  910 1010"},{"path":"epiforecasts.io/forecast.vocs/reference/save_plots.html","id":null,"dir":"Reference","previous_headings":"","what":"Save plots by name — save_plots","title":"Save plots by name — save_plots","text":"Save plots name","code":""},{"path":"epiforecasts.io/forecast.vocs/reference/save_plots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save plots by name — save_plots","text":"","code":"save_plots(plots, save_path = NULL, type = \"png\", ...)"},{"path":"epiforecasts.io/forecast.vocs/reference/save_plots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save plots by name — save_plots","text":"plots named list ggplot2 plots. save_path character string indicating save plots required. type character string indicating format use save plots. ... Additional arguments passed ggplot2::ggsave()","code":""},{"path":[]},{"path":"epiforecasts.io/forecast.vocs/reference/save_plots.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save plots by name — save_plots","text":"","code":"posterior <- fv_example(strains = 2, type = \"posterior\") p <- plot(posterior, type = \"all\") save_plots(p, save_path = tempdir()) #> Saving 6.67 x 6.67 in image #> Saving 6.67 x 6.67 in image #> Saving 6.67 x 6.67 in image #> Saving 6.67 x 6.67 in image #> Saving 6.67 x 6.67 in image #> Saving 6.67 x 6.67 in image"},{"path":"epiforecasts.io/forecast.vocs/reference/summary.fv_forecast.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary method for forecast — summary.fv_forecast","title":"Summary method for forecast — summary.fv_forecast","text":"summary method class \"fv_forecast\".","code":""},{"path":"epiforecasts.io/forecast.vocs/reference/summary.fv_forecast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary method for forecast — summary.fv_forecast","text":"","code":"# S3 method for fv_forecast summary(   object,   target = \"posterior\",   type = \"model\",   as_dt = FALSE,   forecast = FALSE,   ... )"},{"path":"epiforecasts.io/forecast.vocs/reference/summary.fv_forecast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary method for forecast — summary.fv_forecast","text":"object data.table output forecast() class \"fv_forecast\". target character string indicating target object within forecast() summarise. Current options : posterior predictions (\"posterior\"), posterior forecasts (\"forecast\"), model fit (\"fit\"), model diagnostics (\"diagnostics\"). \"posterior\" \"forecast\" used summary.fv_posterior() called nested posterior forecast. type character string used filter summarised output defaulting \"model\". Current options : \"model\" returns summary key model parameters, \"cases\" returns summarised cases, \"voc_frac\" returns summarised estimates fraction cases variant concern, \"voc_advantage\" returns summarised estimates transmission advantage variant concern, \"growth\" returns summarised variant specific overall growth rates, \"rt\" returns summarised variant specific overall reproduction number estimates, \"raw\" returns raw posterior summary, \"\" returns tidied posterior estimates. as_dt Logical defaults FALSE. filtering applied summary() fall back using default data.table method. forecast Logical defaults FALSE. fv_extract_forecast() used return forecasts rather complete posterior. ... Pass additional arguments summary.fv_posterior().","code":""},{"path":"epiforecasts.io/forecast.vocs/reference/summary.fv_forecast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary method for forecast — summary.fv_forecast","text":"summary data.table.","code":""},{"path":[]},{"path":"epiforecasts.io/forecast.vocs/reference/summary.fv_forecast.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary method for forecast — summary.fv_forecast","text":"","code":"if (FALSE) { # interactive() options(mc.cores = 4)  forecasts <- forecast(   germany_covid19_delta_obs,   forecast_date = as.Date(\"2021-06-12\"),   horizon = 4,   strains = c(1, 2),   adapt_delta = 0.99,   max_treedepth = 15,   variant_relationship = \"scaled\" ) # inspect forecasts forecasts  # extract the model summary summary(forecasts, type = \"model\")  # extract the fit object summary(forecasts, target = \"fit\")  # extract the case forecast summary(forecasts, type = \"cases\", forecast = TRUE) }"},{"path":"epiforecasts.io/forecast.vocs/reference/summary.fv_posterior.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary method for fv_tidy_posterior — summary.fv_posterior","title":"Summary method for fv_tidy_posterior — summary.fv_posterior","text":"summary method class \"fv_tidy_posterior\". Can used filter posterior variables interest, return forecasts , summarise using data.table method","code":""},{"path":"epiforecasts.io/forecast.vocs/reference/summary.fv_posterior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary method for fv_tidy_posterior — summary.fv_posterior","text":"","code":"# S3 method for fv_posterior summary(object, type = \"model\", forecast = FALSE, as_dt = FALSE, ...)"},{"path":"epiforecasts.io/forecast.vocs/reference/summary.fv_posterior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary method for fv_tidy_posterior — summary.fv_posterior","text":"object object class fv_posterior returned fv_tidy_posterior() . type character string used filter summarised output defaulting \"model\". Current options : \"model\" returns summary key model parameters, \"cases\" returns summarised cases, \"voc_frac\" returns summarised estimates fraction cases variant concern, \"voc_advantage\" returns summarised estimates transmission advantage variant concern, \"growth\" returns summarised variant specific overall growth rates, \"rt\" returns summarised variant specific overall reproduction number estimates, \"raw\" returns raw posterior summary, \"\" returns tidied posterior estimates. forecast Logical defaults FALSE. fv_extract_forecast() used return forecasts rather complete posterior. as_dt Logical defaults FALSE. filtering applied summary() fall back using default data.table method. ... Additional arguments passed summary() as_dt = TRUE.","code":""},{"path":"epiforecasts.io/forecast.vocs/reference/summary.fv_posterior.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary method for fv_tidy_posterior — summary.fv_posterior","text":"summary data.table table unless type \"\" used case output still type \"fv_posterior\"","code":""},{"path":[]},{"path":"epiforecasts.io/forecast.vocs/reference/summary.fv_posterior.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary method for fv_tidy_posterior — summary.fv_posterior","text":"","code":"posterior <- fv_example(strains = 2, type = \"posterior\")  # case summary summary(posterior, type = \"cases\") #>               variable       date     type    obs observed forecast_start #>  1:       sim_cases[1] 2021-03-20 Combined  87328     TRUE          FALSE #>  2:       sim_cases[2] 2021-03-27 Combined 109442     TRUE          FALSE #>  3:       sim_cases[3] 2021-04-03 Combined 117965     TRUE          FALSE #>  4:       sim_cases[4] 2021-04-10 Combined 107223     TRUE          FALSE #>  5:       sim_cases[5] 2021-04-17 Combined 142664     TRUE          FALSE #>  6:       sim_cases[6] 2021-04-24 Combined 145568     TRUE          FALSE #>  7:       sim_cases[7] 2021-05-01 Combined 131887     TRUE          FALSE #>  8:       sim_cases[8] 2021-05-08 Combined 107141     TRUE          FALSE #>  9:       sim_cases[9] 2021-05-15 Combined  77261     TRUE          FALSE #> 10:      sim_cases[10] 2021-05-22 Combined  57310     TRUE          FALSE #> 11:      sim_cases[11] 2021-05-29 Combined  33052     TRUE          FALSE #> 12:      sim_cases[12] 2021-06-05 Combined  22631     TRUE          FALSE #> 13:      sim_cases[13] 2021-06-12 Combined  15553     TRUE          FALSE #> 14:      sim_cases[14] 2021-06-19 Combined   7659     TRUE          FALSE #> 15:      sim_cases[15] 2021-06-26 Combined   5033     TRUE           TRUE #> 16:      sim_cases[16] 2021-07-03 Combined     NA    FALSE          FALSE #> 17:      sim_cases[17] 2021-07-10 Combined     NA    FALSE          FALSE #> 18:      sim_cases[18] 2021-07-17 Combined     NA    FALSE          FALSE #> 19:      sim_cases[19] 2021-07-24 Combined     NA    FALSE          FALSE #> 20:   sim_voc_cases[1] 2021-04-17      VOC     NA     TRUE          FALSE #> 21:   sim_voc_cases[2] 2021-04-24      VOC     NA     TRUE          FALSE #> 22:   sim_voc_cases[3] 2021-05-01      VOC     NA     TRUE          FALSE #> 23:   sim_voc_cases[4] 2021-05-08      VOC     NA     TRUE          FALSE #> 24:   sim_voc_cases[5] 2021-05-15      VOC     NA     TRUE          FALSE #> 25:   sim_voc_cases[6] 2021-05-22      VOC     NA     TRUE          FALSE #> 26:   sim_voc_cases[7] 2021-05-29      VOC     NA     TRUE          FALSE #> 27:   sim_voc_cases[8] 2021-06-05      VOC     NA     TRUE          FALSE #> 28:   sim_voc_cases[9] 2021-06-12      VOC     NA     TRUE           TRUE #> 29:  sim_voc_cases[10] 2021-06-19      VOC     NA    FALSE          FALSE #> 30:  sim_voc_cases[11] 2021-06-26      VOC     NA    FALSE          FALSE #> 31:  sim_voc_cases[12] 2021-07-03      VOC     NA    FALSE          FALSE #> 32:  sim_voc_cases[13] 2021-07-10      VOC     NA    FALSE          FALSE #> 33:  sim_voc_cases[14] 2021-07-17      VOC     NA    FALSE          FALSE #> 34:  sim_voc_cases[15] 2021-07-24      VOC     NA    FALSE          FALSE #> 35:  sim_nvoc_cases[1] 2021-03-20  non-VOC     NA     TRUE          FALSE #> 36:  sim_nvoc_cases[2] 2021-03-27  non-VOC     NA     TRUE          FALSE #> 37:  sim_nvoc_cases[3] 2021-04-03  non-VOC     NA     TRUE          FALSE #> 38:  sim_nvoc_cases[4] 2021-04-10  non-VOC     NA     TRUE          FALSE #> 39:  sim_nvoc_cases[5] 2021-04-17  non-VOC     NA     TRUE          FALSE #> 40:  sim_nvoc_cases[6] 2021-04-24  non-VOC     NA     TRUE          FALSE #> 41:  sim_nvoc_cases[7] 2021-05-01  non-VOC     NA     TRUE          FALSE #> 42:  sim_nvoc_cases[8] 2021-05-08  non-VOC     NA     TRUE          FALSE #> 43:  sim_nvoc_cases[9] 2021-05-15  non-VOC     NA     TRUE          FALSE #> 44: sim_nvoc_cases[10] 2021-05-22  non-VOC     NA     TRUE          FALSE #> 45: sim_nvoc_cases[11] 2021-05-29  non-VOC     NA     TRUE          FALSE #> 46: sim_nvoc_cases[12] 2021-06-05  non-VOC     NA     TRUE          FALSE #> 47: sim_nvoc_cases[13] 2021-06-12  non-VOC     NA     TRUE           TRUE #> 48: sim_nvoc_cases[14] 2021-06-19  non-VOC     NA    FALSE          FALSE #> 49: sim_nvoc_cases[15] 2021-06-26  non-VOC     NA    FALSE          FALSE #> 50: sim_nvoc_cases[16] 2021-07-03  non-VOC     NA    FALSE          FALSE #> 51: sim_nvoc_cases[17] 2021-07-10  non-VOC     NA    FALSE          FALSE #> 52: sim_nvoc_cases[18] 2021-07-17  non-VOC     NA    FALSE          FALSE #> 53: sim_nvoc_cases[19] 2021-07-24  non-VOC     NA    FALSE          FALSE #>               variable       date     type    obs observed forecast_start #>       mean median      sd     mad     q5    q20    q80    q95 rhat ess_bulk #>  1:  90100  89500 13400.0 12100.0  69200  79700 100000 112000    1     2060 #>  2: 102000 102000 14700.0 13100.0  78800  91000 113000 126000    1     2130 #>  3: 114000 113000 17600.0 15200.0  86500 100000 126000 143000    1     1980 #>  4: 123000 122000 19100.0 16700.0  93100 109000 137000 154000    1     1820 #>  5: 133000 133000 19900.0 17400.0 104000 118000 148000 164000    1     1920 #>  6: 138000 137000 20400.0 18200.0 106000 122000 153000 172000    1     1910 #>  7: 128000 127000 19100.0 16700.0  98800 113000 142000 160000    1     1860 #>  8: 106000 105000 16300.0 13700.0  82400  94800 117000 132000    1     2090 #>  9:  79600  78800 11800.0 10600.0  62700  70300  88100  99600    1     1880 #> 10:  55700  55200  8510.0  6970.0  43400  49400  61500  69900    1     1890 #> 11:  35800  35500  5540.0  4500.0  27800  31900  39600  45200    1     1870 #> 12:  22900  22700  3230.0  2800.0  17900  20400  25200  28100    1     2200 #> 13:  14200  14000  1910.0  1690.0  11400  12600  15600  17300    1     2160 #> 14:   8310   8240  1130.0   936.0   6700   7440   9080  10200    1     2340 #> 15:   5140   5060   822.0   692.0   4050   4520   5680   6470    1     2140 #> 16:   3400   3300   900.0   789.0   2170   2690   4020   5010    1     2050 #> 17:   2510   2300  1160.0   905.0   1120   1630   3210   4580    1     1780 #> 18:   2130   1710  2140.0  1030.0    551    999   2880   4920    1     1810 #> 19:   2160   1340  6260.0  1110.0    256    611   2850   5870    1     1710 #> 20:    221    218    40.0    37.1    162    189    252    288    1     2010 #> 21:    410    408    71.1    68.2    301    351    469    528    1     1800 #> 22:    684    673   124.0   108.0    507    588    772    900    1     1970 #> 23:   1030   1010   194.0   175.0    742    869   1170   1360    1     2290 #> 24:   1380   1350   269.0   234.0    991   1170   1580   1830    1     2270 #> 25:   1720   1680   330.0   307.0   1230   1450   1960   2290    1     2280 #> 26:   1960   1920   413.0   354.0   1390   1650   2250   2670    1     2300 #> 27:   2170   2140   459.0   411.0   1500   1810   2500   2980    1     2250 #> 28:   2230   2200   490.0   442.0   1510   1830   2580   3060    1     2130 #> 29:   2110   2080   490.0   451.0   1420   1710   2460   2950    1     2270 #> 30:   1950   1910   464.0   422.0   1300   1570   2290   2770    1     2250 #> 31:   1780   1700   575.0   497.0   1040   1320   2170   2810    1     2210 #> 32:   1670   1520   844.0   630.0    703   1050   2160   3090    1     2010 #> 33:   1660   1320  1760.0   824.0    417    744   2250   3840    1     1850 #> 34:   1860   1150  5590.0   959.0    222    522   2450   5170    1     1760 #> 35:  90100  89500 13400.0 12100.0  69200  79700 100000 112000    1     2060 #> 36: 102000 102000 14700.0 13100.0  78800  91000 113000 126000    1     2130 #> 37: 114000 113000 17600.0 15200.0  86500 100000 126000 143000    1     1980 #> 38: 123000 122000 19100.0 16700.0  93100 109000 137000 154000    1     1820 #> 39: 133000 133000 19900.0 17400.0 103000 118000 147000 164000    1     1920 #> 40: 138000 137000 20400.0 18100.0 105000 122000 153000 172000    1     1910 #> 41: 127000 127000 19100.0 16600.0  98200 113000 141000 159000    1     1860 #> 42: 105000 105000 16200.0 13600.0  81500  93700 116000 131000    1     2090 #> 43:  78300  77400 11700.0 10500.0  61300  69000  86700  97800    1     1880 #> 44:  54000  53500  8450.0  6980.0  41700  47700  59700  67900    1     1890 #> 45:  33900  33500  5430.0  4340.0  26000  30100  37600  43100    1     1870 #> 46:  20700  20600  3130.0  2630.0  15900  18300  23000  25800    1     2180 #> 47:  11900  11800  1830.0  1630.0   9290  10500  13300  15100    1     2200 #> 48:   6200   6130  1040.0   901.0   4680   5400   6940   7860    1     2220 #> 49:   3190   3130   664.0   544.0   2290   2700   3620   4290    1     1950 #> 50:   1620   1550   498.0   423.0    958   1240   1960   2490    1     1950 #> 51:    837    753   415.0   322.0    351    517   1090   1580    1     1850 #> 52:    467    368   432.0   232.0    113    212    641   1080    1     1720 #> 53:    296    177   709.0   151.0     32     79    381    827    1     1510 #>       mean median      sd     mad     q5    q20    q80    q95 rhat ess_bulk #>     ess_tail #>  1:     1860 #>  2:     1850 #>  3:     1700 #>  4:     1760 #>  5:     1350 #>  6:     1860 #>  7:     1780 #>  8:     1820 #>  9:     1750 #> 10:     1650 #> 11:     1700 #> 12:     1850 #> 13:     1780 #> 14:     1850 #> 15:     1750 #> 16:     1580 #> 17:     1620 #> 18:     1460 #> 19:     1720 #> 20:     1850 #> 21:     1750 #> 22:     1770 #> 23:     1850 #> 24:     1820 #> 25:     1550 #> 26:     1650 #> 27:     1720 #> 28:     1660 #> 29:     1660 #> 30:     1630 #> 31:     1450 #> 32:     1640 #> 33:     1610 #> 34:     1720 #> 35:     1860 #> 36:     1850 #> 37:     1700 #> 38:     1760 #> 39:     1350 #> 40:     1790 #> 41:     1780 #> 42:     1820 #> 43:     1780 #> 44:     1670 #> 45:     1670 #> 46:     1880 #> 47:     1850 #> 48:     1700 #> 49:     1420 #> 50:     1420 #> 51:     1720 #> 52:     1500 #> 53:     1490 #>     ess_tail  # summary of the case summary summary(posterior, type = \"cases\", as_dt = TRUE) #>    variable              date                type                obs         #>  Length:53          Min.   :2021-03-20   Length:53          Min.   :  5033   #>  Class :character   1st Qu.:2021-04-24   Class :character   1st Qu.: 27842   #>  Mode  :character   Median :2021-05-29   Mode  :character   Median : 87328   #>                     Mean   :2021-05-25                      Mean   : 77848   #>                     3rd Qu.:2021-06-26                      3rd Qu.:113704   #>                     Max.   :2021-07-24                      Max.   :145568   #>                                                             NA's   :38       #>   observed       forecast_start       mean            median       #>  Mode :logical   Mode :logical   Min.   :   221   Min.   :   177   #>  FALSE:16        FALSE:50        1st Qu.:  1860   1st Qu.:  1680   #>  TRUE :37        TRUE :3         Median :  8310   Median :  8240   #>                                  Mean   : 44006   Mean   : 43686   #>                                  3rd Qu.:102000   3rd Qu.:102000   #>                                  Max.   :138000   Max.   :137000   #>                                                                    #>        sd             mad                q5              q20         #>  Min.   :   40   Min.   :   37.1   Min.   :    32   Min.   :    79   #>  1st Qu.:  498   1st Qu.:  442.0   1st Qu.:   991   1st Qu.:  1240   #>  Median : 2140   Median : 1110.0   Median :  6700   Median :  7440   #>  Mean   : 6995   Mean   : 5896.1   Mean   : 33740   Mean   : 38848   #>  3rd Qu.:14700   3rd Qu.:13100.0   3rd Qu.: 78800   3rd Qu.: 91000   #>  Max.   :20400   Max.   :18200.0   Max.   :106000   Max.   :122000   #>                                                                      #>       q80              q95              rhat      ess_bulk       ess_tail    #>  Min.   :   252   Min.   :   288   Min.   :1   Min.   :1510   Min.   :1350   #>  1st Qu.:  2250   1st Qu.:  2950   1st Qu.:1   1st Qu.:1870   1st Qu.:1640   #>  Median :  9080   Median : 10200   Median :1   Median :1980   Median :1720   #>  Mean   : 48848   Mean   : 55198   Mean   :1   Mean   :2005   Mean   :1699   #>  3rd Qu.:113000   3rd Qu.:126000   3rd Qu.:1   3rd Qu.:2160   3rd Qu.:1820   #>  Max.   :153000   Max.   :172000   Max.   :1   Max.   :2340   Max.   :1880   #>                                                                               # case forecast only summary(posterior, type = \"cases\", forecast = TRUE) #>         type       date horizon forecast_start mean median   sd  mad   q5  q20 #>  1: Combined 2021-07-03       1          FALSE 3400   3300  900  789 2170 2690 #>  2: Combined 2021-07-10       2          FALSE 2510   2300 1160  905 1120 1630 #>  3: Combined 2021-07-17       3          FALSE 2130   1710 2140 1030  551  999 #>  4: Combined 2021-07-24       4          FALSE 2160   1340 6260 1110  256  611 #>  5:      VOC 2021-06-19       1          FALSE 2110   2080  490  451 1420 1710 #>  6:      VOC 2021-06-26       2          FALSE 1950   1910  464  422 1300 1570 #>  7:      VOC 2021-07-03       3          FALSE 1780   1700  575  497 1040 1320 #>  8:      VOC 2021-07-10       4          FALSE 1670   1520  844  630  703 1050 #>  9:      VOC 2021-07-17       5          FALSE 1660   1320 1760  824  417  744 #> 10:      VOC 2021-07-24       6          FALSE 1860   1150 5590  959  222  522 #> 11:  non-VOC 2021-06-19       1          FALSE 6200   6130 1040  901 4680 5400 #> 12:  non-VOC 2021-06-26       2          FALSE 3190   3130  664  544 2290 2700 #> 13:  non-VOC 2021-07-03       3          FALSE 1620   1550  498  423  958 1240 #> 14:  non-VOC 2021-07-10       4          FALSE  837    753  415  322  351  517 #> 15:  non-VOC 2021-07-17       5          FALSE  467    368  432  232  113  212 #> 16:  non-VOC 2021-07-24       6          FALSE  296    177  709  151   32   79 #>      q80  q95 #>  1: 4020 5010 #>  2: 3210 4580 #>  3: 2880 4920 #>  4: 2850 5870 #>  5: 2460 2950 #>  6: 2290 2770 #>  7: 2170 2810 #>  8: 2160 3090 #>  9: 2250 3840 #> 10: 2450 5170 #> 11: 6940 7860 #> 12: 3620 4290 #> 13: 1960 2490 #> 14: 1090 1580 #> 15:  641 1080 #> 16:  381  827  # voc fraction summary summary(posterior, type = \"voc_frac\") #>         variable       date type         obs observed forecast_start    mean #>  1:  frac_voc[1] 2021-04-17  VOC 0.001465917     TRUE          FALSE 0.00166 #>  2:  frac_voc[2] 2021-04-24  VOC 0.007085917     TRUE          FALSE 0.00298 #>  3:  frac_voc[3] 2021-05-01  VOC 0.015085025     TRUE          FALSE 0.00537 #>  4:  frac_voc[4] 2021-05-08  VOC 0.019443217     TRUE          FALSE 0.00965 #>  5:  frac_voc[5] 2021-05-15  VOC 0.026459592     TRUE          FALSE 0.01730 #>  6:  frac_voc[6] 2021-05-22  VOC 0.032900194     TRUE          FALSE 0.03090 #>  7:  frac_voc[7] 2021-05-29  VOC 0.038084020     TRUE          FALSE 0.05450 #>  8:  frac_voc[8] 2021-06-05  VOC 0.085600907     TRUE          FALSE 0.09440 #>  9:  frac_voc[9] 2021-06-12  VOC 0.166666667     TRUE           TRUE 0.15900 #> 10: frac_voc[10] 2021-06-19  VOC          NA    FALSE          FALSE 0.25400 #> 11: frac_voc[11] 2021-06-26  VOC          NA    FALSE          FALSE 0.37900 #> 12: frac_voc[12] 2021-07-03  VOC          NA    FALSE          FALSE 0.52300 #> 13: frac_voc[13] 2021-07-10  VOC          NA    FALSE          FALSE 0.66200 #> 14: frac_voc[14] 2021-07-17  VOC          NA    FALSE          FALSE 0.77700 #> 15: frac_voc[15] 2021-07-24  VOC          NA    FALSE          FALSE 0.86100 #>      median       sd      mad      q5     q20     q80     q95 rhat ess_bulk #>  1: 0.00164 0.000201 0.000189 0.00136 0.00149 0.00181 0.00200    1     1790 #>  2: 0.00296 0.000318 0.000309 0.00250 0.00272 0.00324 0.00352    1     1940 #>  3: 0.00534 0.000529 0.000507 0.00456 0.00492 0.00580 0.00629    1     2170 #>  4: 0.00962 0.000947 0.000916 0.00817 0.00885 0.01040 0.01130    1     2420 #>  5: 0.01720 0.001820 0.001750 0.01450 0.01580 0.01880 0.02040    1     2610 #>  6: 0.03080 0.003640 0.003500 0.02520 0.02790 0.03370 0.03690    1     2600 #>  7: 0.05410 0.007260 0.006880 0.04350 0.04870 0.05990 0.06670    1     2530 #>  8: 0.09360 0.013900 0.012900 0.07340 0.08350 0.10500 0.11800    1     2440 #>  9: 0.15700 0.024800 0.023000 0.12100 0.13900 0.17800 0.19900    1     2350 #> 10: 0.25200 0.039500 0.037100 0.19300 0.22200 0.28500 0.31900    1     2270 #> 11: 0.37800 0.054400 0.052200 0.29300 0.33500 0.42300 0.46800    1     2200 #> 12: 0.52400 0.063400 0.061400 0.41900 0.47100 0.57400 0.62500    1     2150 #> 13: 0.66500 0.062500 0.060300 0.55600 0.61100 0.71400 0.75900    1     2110 #> 14: 0.78200 0.053100 0.050000 0.68300 0.73600 0.82100 0.85600    1     2080 #> 15: 0.86600 0.040200 0.037000 0.78900 0.83100 0.89500 0.91800    1     2060 #>     ess_tail #>  1:     1480 #>  2:     1580 #>  3:     1700 #>  4:     1590 #>  5:     1650 #>  6:     1590 #>  7:     1670 #>  8:     1440 #>  9:     1340 #> 10:     1270 #> 11:     1260 #> 12:     1260 #> 13:     1220 #> 14:     1220 #> 15:     1310  # voc advantage summary summary(posterior, type = \"voc_advantage\") #>              variable       date type observed forecast_start     mean   median #>  1:  voc_advantage[1] 2021-04-17  VOC     TRUE          FALSE 1.590991 1.590991 #>  2:  voc_advantage[2] 2021-04-24  VOC     TRUE          FALSE 1.590991 1.590991 #>  3:  voc_advantage[3] 2021-05-01  VOC     TRUE          FALSE 1.590991 1.590991 #>  4:  voc_advantage[4] 2021-05-08  VOC     TRUE          FALSE 1.590991 1.590991 #>  5:  voc_advantage[5] 2021-05-15  VOC     TRUE          FALSE 1.590991 1.590991 #>  6:  voc_advantage[6] 2021-05-22  VOC     TRUE          FALSE 1.590991 1.590991 #>  7:  voc_advantage[7] 2021-05-29  VOC     TRUE          FALSE 1.590991 1.590991 #>  8:  voc_advantage[8] 2021-06-05  VOC     TRUE          FALSE 1.590991 1.590991 #>  9:  voc_advantage[9] 2021-06-12  VOC     TRUE           TRUE 1.590991 1.590991 #> 10: voc_advantage[10] 2021-06-19  VOC    FALSE          FALSE 1.590991 1.590991 #> 11: voc_advantage[11] 2021-06-26  VOC    FALSE          FALSE 1.590991 1.590991 #> 12: voc_advantage[12] 2021-07-03  VOC    FALSE          FALSE 1.590991 1.590991 #> 13: voc_advantage[13] 2021-07-10  VOC    FALSE          FALSE 1.590991 1.590991 #> 14: voc_advantage[14] 2021-07-17  VOC    FALSE          FALSE 1.590991 1.590991 #> 15: avg_voc_advantage 2021-07-24  VOC    FALSE          FALSE 1.590991 1.590991 #>         sd    mad       q5      q20      q80      q95 rhat ess_bulk ess_tail #>  1: 0.0283 0.0265 1.534515 1.562498 1.620004 1.649546    1     1880     1410 #>  2: 0.0283 0.0265 1.534515 1.562498 1.620004 1.649546    1     1880     1410 #>  3: 0.0283 0.0265 1.534515 1.562498 1.620004 1.649546    1     1880     1410 #>  4: 0.0283 0.0265 1.534515 1.562498 1.620004 1.649546    1     1880     1410 #>  5: 0.0283 0.0265 1.534515 1.562498 1.620004 1.649546    1     1880     1410 #>  6: 0.0283 0.0265 1.534515 1.562498 1.620004 1.649546    1     1880     1410 #>  7: 0.0283 0.0265 1.534515 1.562498 1.620004 1.649546    1     1880     1410 #>  8: 0.0283 0.0265 1.534515 1.562498 1.620004 1.649546    1     1880     1410 #>  9: 0.0283 0.0265 1.534515 1.562498 1.620004 1.649546    1     1880     1410 #> 10: 0.0283 0.0265 1.534515 1.562498 1.620004 1.649546    1     1880     1410 #> 11: 0.0283 0.0265 1.534515 1.562498 1.620004 1.649546    1     1880     1410 #> 12: 0.0283 0.0265 1.534515 1.562498 1.620004 1.649546    1     1880     1410 #> 13: 0.0283 0.0265 1.534515 1.562498 1.620004 1.649546    1     1880     1410 #> 14: 0.0283 0.0265 1.534515 1.562498 1.620004 1.649546    1     1880     1410 #> 15: 0.0283 0.0265 1.534515 1.562498 1.620004 1.649546    1     1880     1410  # growth summary summary(posterior, type = \"growth\") #>      variable       date     type observed forecast_start        mean #>  1:  com_r[1] 2021-03-20 Combined     TRUE          FALSE  0.10292857 #>  2:  com_r[2] 2021-03-27 Combined     TRUE          FALSE  0.08250000 #>  3:  com_r[3] 2021-04-03 Combined     TRUE          FALSE  0.05830000 #>  4:  com_r[4] 2021-04-10 Combined     TRUE          FALSE  0.06600000 #>  5:  com_r[5] 2021-04-17 Combined     TRUE          FALSE  0.02325714 #>  6:  com_r[6] 2021-04-24 Combined     TRUE          FALSE -0.05672857 #>  7:  com_r[7] 2021-05-01 Combined     TRUE          FALSE -0.14457143 #>  8:  com_r[8] 2021-05-08 Combined     TRUE          FALSE -0.22392857 #>  9:  com_r[9] 2021-05-15 Combined     TRUE          FALSE -0.28050000 #> 10: com_r[10] 2021-05-22 Combined     TRUE          FALSE -0.33314286 #> 11: com_r[11] 2021-05-29 Combined     TRUE          FALSE -0.34571429 #> 12: com_r[12] 2021-06-05 Combined     TRUE          FALSE -0.36535714 #> 13: com_r[13] 2021-06-12 Combined     TRUE          FALSE -0.39364286 #> 14: com_r[14] 2021-06-19 Combined     TRUE           TRUE -0.35121429 #> 15: com_r[15] 2021-06-26 Combined    FALSE          FALSE -0.30800000 #> 16: com_r[16] 2021-07-03 Combined    FALSE          FALSE -0.25378571 #> 17: com_r[17] 2021-07-10 Combined    FALSE          FALSE -0.21292857 #> 18: com_r[18] 2021-07-17 Combined    FALSE          FALSE -0.18228571 #> 19:  voc_r[1] 2021-04-17      VOC     TRUE          FALSE  0.48635714 #> 20:  voc_r[2] 2021-04-24      VOC     TRUE          FALSE  0.40542857 #> 21:  voc_r[3] 2021-05-01      VOC     TRUE          FALSE  0.31507143 #> 22:  voc_r[4] 2021-05-08      VOC     TRUE          FALSE  0.23257143 #> 23:  voc_r[5] 2021-05-15      VOC     TRUE          FALSE  0.16971429 #> 24:  voc_r[6] 2021-05-22      VOC     TRUE          FALSE  0.10607143 #> 25:  voc_r[7] 2021-05-29      VOC     TRUE          FALSE  0.07472143 #> 26:  voc_r[8] 2021-06-05      VOC     TRUE           TRUE  0.02459286 #> 27:  voc_r[9] 2021-06-12      VOC    FALSE          FALSE -0.04816429 #> 28: voc_r[10] 2021-06-19      VOC    FALSE          FALSE -0.06442857 #> 29: voc_r[11] 2021-06-26      VOC    FALSE          FALSE -0.08800000 #> 30: voc_r[12] 2021-07-03      VOC    FALSE          FALSE -0.09742857 #> 31: voc_r[13] 2021-07-10      VOC    FALSE          FALSE -0.11078571 #> 32: voc_r[14] 2021-07-17      VOC    FALSE          FALSE -0.11864286 #> 33:      r[1] 2021-03-20  non-VOC     TRUE          FALSE  0.10292857 #> 34:      r[2] 2021-03-27  non-VOC     TRUE          FALSE  0.08250000 #> 35:      r[3] 2021-04-03  non-VOC     TRUE          FALSE  0.05830000 #> 36:      r[4] 2021-04-10  non-VOC     TRUE          FALSE  0.06600000 #> 37:      r[5] 2021-04-17  non-VOC     TRUE          FALSE  0.02184286 #> 38:      r[6] 2021-04-24  non-VOC     TRUE          FALSE -0.05916429 #> 39:      r[7] 2021-05-01  non-VOC     TRUE          FALSE -0.14928571 #> 40:      r[8] 2021-05-08  non-VOC     TRUE          FALSE -0.23178571 #> 41:      r[9] 2021-05-15  non-VOC     TRUE          FALSE -0.29464286 #> 42:     r[10] 2021-05-22  non-VOC     TRUE          FALSE -0.35828571 #> 43:     r[11] 2021-05-29  non-VOC     TRUE          FALSE -0.38971429 #> 44:     r[12] 2021-06-05  non-VOC     TRUE           TRUE -0.44000000 #> 45:     r[13] 2021-06-12  non-VOC    FALSE          FALSE -0.51228571 #> 46:     r[14] 2021-06-19  non-VOC    FALSE          FALSE -0.52878571 #> 47:     r[15] 2021-06-26  non-VOC    FALSE          FALSE -0.55235714 #> 48:     r[16] 2021-07-03  non-VOC    FALSE          FALSE -0.56178571 #> 49:     r[17] 2021-07-10  non-VOC    FALSE          FALSE -0.57514286 #> 50:     r[18] 2021-07-17  non-VOC    FALSE          FALSE -0.58300000 #>      variable       date     type observed forecast_start        mean #>          median     sd    mad          q5         q20          q80         q95 #>  1:  0.10214286 0.0740 0.0652  0.01186429  0.05845714  0.146928571  0.19721429 #>  2:  0.08564286 0.0624 0.0524  0.00302500  0.04753571  0.120214286  0.15635714 #>  3:  0.06395714 0.0709 0.0535 -0.03912857  0.02255000  0.096642857  0.13514286 #>  4:  0.06254286 0.0665 0.0550 -0.01100000  0.02852143  0.102928571  0.15321429 #>  5:  0.02019286 0.0668 0.0541 -0.05476429 -0.01422143  0.059557143  0.10921429 #>  6: -0.05877143 0.0664 0.0501 -0.13278571 -0.09192857 -0.024592857  0.02404286 #>  7: -0.14300000 0.0665 0.0526 -0.22550000 -0.17992857 -0.108428571 -0.06411429 #>  8: -0.22157143 0.0639 0.0530 -0.30800000 -0.26007143 -0.188571429 -0.14614286 #>  9: -0.27971429 0.0668 0.0544 -0.36535714 -0.31664286 -0.243571429 -0.19721429 #> 10: -0.33078571 0.0666 0.0507 -0.41957143 -0.36535714 -0.297785714 -0.25221429 #> 11: -0.34885714 0.0645 0.0546 -0.42192857 -0.38185714 -0.308785714 -0.25928571 #> 12: -0.36850000 0.0654 0.0521 -0.44471429 -0.40071429 -0.330785714 -0.27892857 #> 13: -0.39207143 0.0766 0.0645 -0.49342857 -0.43842857 -0.349642857 -0.30328571 #> 14: -0.35200000 0.0957 0.0913 -0.46671429 -0.41092857 -0.291500000 -0.22785714 #> 15: -0.30878571 0.1640 0.1490 -0.51700000 -0.40542857 -0.210571429 -0.10292857 #> 16: -0.25378571 0.2230 0.1990 -0.53664286 -0.38657143 -0.121000000  0.02530000 #> 17: -0.20350000 0.2760 0.2540 -0.57435714 -0.38185714 -0.046121429  0.12414286 #> 18: -0.17521429 0.3350 0.2960 -0.61992857 -0.37478571  0.018307143  0.21371429 #> 19:  0.48400000 0.0681 0.0603  0.40385714  0.44707143  0.525642857  0.57750000 #> 20:  0.40228571 0.0685 0.0581  0.32528571  0.36692857  0.442357143  0.49264286 #> 21:  0.31742857 0.0711 0.0598  0.22785714  0.27500000  0.355142857  0.40071429 #> 22:  0.23414286 0.0685 0.0591  0.14300000  0.19407143  0.271857143  0.31350000 #> 23:  0.17050000 0.0716 0.0607  0.07841429  0.12964286  0.209785714  0.25614286 #> 24:  0.10921429 0.0710 0.0605  0.01343571  0.06623571  0.145357143  0.18935714 #> 25:  0.07338571 0.0673 0.0601 -0.00566500  0.03488571  0.114714286  0.16342857 #> 26:  0.02223571 0.0670 0.0543 -0.05649286 -0.01249286  0.061364286  0.11078571 #> 27: -0.04604286 0.0773 0.0653 -0.14928571 -0.09035714 -0.003912857  0.04140714 #> 28: -0.06702143 0.0950 0.0878 -0.18150000 -0.12414286 -0.006262143  0.05665000 #> 29: -0.08721429 0.1620 0.1470 -0.29621429 -0.18385714  0.009585714  0.11628571 #> 30: -0.09742857 0.2220 0.1980 -0.37950000 -0.22942857  0.035042857  0.17914286 #> 31: -0.10450000 0.2760 0.2550 -0.47614286 -0.27657143  0.056492857  0.21921429 #> 32: -0.11078571 0.3360 0.2970 -0.55550000 -0.31035714  0.082500000  0.27657143 #> 33:  0.10214286 0.0740 0.0652  0.01186429  0.05845714  0.146928571  0.19721429 #> 34:  0.08564286 0.0624 0.0524  0.00302500  0.04753571  0.120214286  0.15635714 #> 35:  0.06395714 0.0709 0.0535 -0.03912857  0.02255000  0.096642857  0.13514286 #> 36:  0.06254286 0.0665 0.0550 -0.01100000  0.02852143  0.102928571  0.15321429 #> 37:  0.01885714 0.0667 0.0541 -0.05610000 -0.01555714  0.058300000  0.10842857 #> 38: -0.06136429 0.0664 0.0498 -0.13514286 -0.09428571 -0.027264286  0.02176429 #> 39: -0.14771429 0.0664 0.0523 -0.23021429 -0.18464286 -0.113142857 -0.06827857 #> 40: -0.23021429 0.0639 0.0530 -0.31585714 -0.26792857 -0.196428571 -0.15478571 #> 41: -0.29464286 0.0669 0.0540 -0.37950000 -0.33078571 -0.257714286 -0.21057143 #> 42: -0.35671429 0.0668 0.0503 -0.44550000 -0.39207143 -0.322928571 -0.27892857 #> 43: -0.39207143 0.0652 0.0561 -0.46750000 -0.42742857 -0.352000000 -0.30250000 #> 44: -0.44157143 0.0669 0.0534 -0.51935714 -0.47692857 -0.403857143 -0.35042857 #> 45: -0.51071429 0.0787 0.0684 -0.61442857 -0.55864286 -0.465142857 -0.42114286 #> 46: -0.52957143 0.0989 0.0907 -0.65214286 -0.59007143 -0.467500000 -0.40071429 #> 47: -0.55314286 0.1650 0.1490 -0.76764286 -0.64821429 -0.451000000 -0.34335714 #> 48: -0.56178571 0.2260 0.2010 -0.84857143 -0.69692857 -0.424285714 -0.28600000 #> 49: -0.56807143 0.2790 0.2550 -0.94285714 -0.74328571 -0.407000000 -0.24042857 #> 50: -0.57278571 0.3390 0.2970 -1.02142857 -0.77707143 -0.381071429 -0.18228571 #>          median     sd    mad          q5         q20          q80         q95 #>     rhat ess_bulk ess_tail #>  1:    1     1240      859 #>  2:    1     1970     1520 #>  3:    1     1100     1140 #>  4:    1     1390     1410 #>  5:    1     1590     1460 #>  6:    1     1830     1580 #>  7:    1     2050     1730 #>  8:    1     2100     1680 #>  9:    1     1780     1600 #> 10:    1     2050     1700 #> 11:    1     1770     1650 #> 12:    1     1890     1360 #> 13:    1     1650     1640 #> 14:    1     2690     1670 #> 15:    1     1880     1530 #> 16:    1     1630     1540 #> 17:    1     1810     1620 #> 18:    1     1650     1480 #> 19:    1     1680     1530 #> 20:    1     1950     1660 #> 21:    1     2060     1380 #> 22:    1     1900     1640 #> 23:    1     1600     1550 #> 24:    1     1950     1560 #> 25:    1     1870     1460 #> 26:    1     1880     1280 #> 27:    1     1620     1790 #> 28:    1     2690     1680 #> 29:    1     1730     1590 #> 30:    1     1520     1600 #> 31:    1     1790     1630 #> 32:    1     1650     1520 #> 33:    1     1240      859 #> 34:    1     1970     1520 #> 35:    1     1100     1140 #> 36:    1     1390     1410 #> 37:    1     1590     1460 #> 38:    1     1830     1580 #> 39:    1     2050     1730 #> 40:    1     2110     1680 #> 41:    1     1790     1550 #> 42:    1     2040     1730 #> 43:    1     1680     1800 #> 44:    1     1930     1260 #> 45:    1     1610     1560 #> 46:    1     2520     1650 #> 47:    1     1580     1370 #> 48:    1     1520     1300 #> 49:    1     1780     1630 #> 50:    1     1650     1570 #>     rhat ess_bulk ess_tail  # Rt summary summary(posterior, type = \"rt\") #>      variable       date     type observed forecast_start      mean    median #>  1:  com_r[1] 2021-03-20 Combined     TRUE          FALSE 1.1084122 1.1075417 #>  2:  com_r[2] 2021-03-27 Combined     TRUE          FALSE 1.0859987 1.0894172 #>  3:  com_r[3] 2021-04-03 Combined     TRUE          FALSE 1.0600330 1.0660467 #>  4:  com_r[4] 2021-04-10 Combined     TRUE          FALSE 1.0682267 1.0645401 #>  5:  com_r[5] 2021-04-17 Combined     TRUE          FALSE 1.0235297 1.0203981 #>  6:  com_r[6] 2021-04-24 Combined     TRUE          FALSE 0.9448505 0.9429223 #>  7:  com_r[7] 2021-05-01 Combined     TRUE          FALSE 0.8653931 0.8667541 #>  8:  com_r[8] 2021-05-08 Combined     TRUE          FALSE 0.7993722 0.8012587 #>  9:  com_r[9] 2021-05-15 Combined     TRUE          FALSE 0.7554059 0.7559997 #> 10: com_r[10] 2021-05-22 Combined     TRUE          FALSE 0.7166678 0.7183591 #> 11: com_r[11] 2021-05-29 Combined     TRUE          FALSE 0.7077147 0.7054939 #> 12: com_r[12] 2021-06-05 Combined     TRUE          FALSE 0.6939488 0.6917712 #> 13: com_r[13] 2021-06-12 Combined     TRUE          FALSE 0.6745949 0.6756559 #> 14: com_r[14] 2021-06-19 Combined     TRUE           TRUE 0.7038329 0.7032801 #> 15: com_r[15] 2021-06-26 Combined    FALSE          FALSE 0.7349153 0.7343381 #> 16: com_r[16] 2021-07-03 Combined    FALSE          FALSE 0.7758580 0.7758580 #> 17: com_r[17] 2021-07-10 Combined    FALSE          FALSE 0.8082139 0.8158702 #> 18: com_r[18] 2021-07-17 Combined    FALSE          FALSE 0.8333632 0.8392772 #> 19:  voc_r[1] 2021-04-17      VOC     TRUE          FALSE 1.6263807 1.6225516 #> 20:  voc_r[2] 2021-04-24      VOC     TRUE          FALSE 1.4999452 1.4952385 #> 21:  voc_r[3] 2021-05-01      VOC     TRUE          FALSE 1.3703572 1.3735911 #> 22:  voc_r[4] 2021-05-08      VOC     TRUE          FALSE 1.2618406 1.2638250 #> 23:  voc_r[5] 2021-05-15      VOC     TRUE          FALSE 1.1849662 1.1858977 #> 24:  voc_r[6] 2021-05-22      VOC     TRUE          FALSE 1.1119013 1.1154013 #> 25:  voc_r[7] 2021-05-29      VOC     TRUE          FALSE 1.0775839 1.0761455 #> 26:  voc_r[8] 2021-06-05      VOC     TRUE           TRUE 1.0248978 1.0224848 #> 27:  voc_r[9] 2021-06-12      VOC    FALSE          FALSE 0.9529772 0.9550010 #> 28: voc_r[10] 2021-06-19      VOC    FALSE          FALSE 0.9376031 0.9351752 #> 29: voc_r[11] 2021-06-26      VOC    FALSE          FALSE 0.9157609 0.9164807 #> 30: voc_r[12] 2021-07-03      VOC    FALSE          FALSE 0.9071671 0.9071671 #> 31: voc_r[13] 2021-07-10      VOC    FALSE          FALSE 0.8951305 0.9007748 #> 32: voc_r[14] 2021-07-17      VOC    FALSE          FALSE 0.8881249 0.8951305 #> 33:      r[1] 2021-03-20  non-VOC     TRUE          FALSE 1.1084122 1.1075417 #> 34:      r[2] 2021-03-27  non-VOC     TRUE          FALSE 1.0859987 1.0894172 #> 35:      r[3] 2021-04-03  non-VOC     TRUE          FALSE 1.0600330 1.0660467 #> 36:      r[4] 2021-04-10  non-VOC     TRUE          FALSE 1.0682267 1.0645401 #> 37:      r[5] 2021-04-17  non-VOC     TRUE          FALSE 1.0220832 1.0190361 #> 38:      r[6] 2021-04-24  non-VOC     TRUE          FALSE 0.9425519 0.9404806 #> 39:      r[7] 2021-05-01  non-VOC     TRUE          FALSE 0.8613230 0.8626776 #> 40:      r[8] 2021-05-08  non-VOC     TRUE          FALSE 0.7931161 0.7943634 #> 41:      r[9] 2021-05-15  non-VOC     TRUE          FALSE 0.7447975 0.7447975 #> 42:     r[10] 2021-05-22  non-VOC     TRUE          FALSE 0.6988734 0.6999725 #> 43:     r[11] 2021-05-29  non-VOC     TRUE          FALSE 0.6772503 0.6756559 #> 44:     r[12] 2021-06-05  non-VOC     TRUE           TRUE 0.6440364 0.6430252 #> 45:     r[13] 2021-06-12  non-VOC    FALSE          FALSE 0.5991246 0.6000668 #> 46:     r[14] 2021-06-19  non-VOC    FALSE          FALSE 0.5893201 0.5888573 #> 47:     r[15] 2021-06-26  non-VOC    FALSE          FALSE 0.5755915 0.5751394 #> 48:     r[16] 2021-07-03  non-VOC    FALSE          FALSE 0.5701900 0.5701900 #> 49:     r[17] 2021-07-10  non-VOC    FALSE          FALSE 0.5626245 0.5666171 #> 50:     r[18] 2021-07-17  non-VOC    FALSE          FALSE 0.5582212 0.5639522 #>      variable       date     type observed forecast_start      mean    median #>         sd    mad        q5       q20       q80       q95 rhat ess_bulk #>  1: 0.0740 0.0652 1.0119349 1.0601995 1.1582712 1.2180050    1     1240 #>  2: 0.0624 0.0524 1.0030296 1.0486837 1.1277385 1.1692437    1     1970 #>  3: 0.0709 0.0535 0.9616271 1.0228062 1.1014669 1.1447003    1     1100 #>  4: 0.0665 0.0550 0.9890603 1.0289321 1.1084122 1.1655747    1     1390 #>  5: 0.0668 0.0541 0.9467083 0.9858792 1.0613664 1.1154013    1     1590 #>  6: 0.0664 0.0501 0.8756527 0.9121703 0.9757071 1.0243342    1     1830 #>  7: 0.0665 0.0526 0.7981171 0.8353299 0.8972430 0.9378978    1     2050 #>  8: 0.0639 0.0530 0.7349153 0.7709965 0.8281413 0.8640343    1     2100 #>  9: 0.0668 0.0544 0.6939488 0.7285909 0.7838235 0.8210147    1     1780 #> 10: 0.0666 0.0507 0.6573285 0.6939488 0.7424604 0.7770782    1     2050 #> 11: 0.0645 0.0546 0.6557809 0.6825926 0.7343381 0.7716025    1     1770 #> 12: 0.0654 0.0521 0.6410074 0.6698414 0.7183591 0.7565939    1     1890 #> 13: 0.0766 0.0645 0.6105296 0.6450493 0.7049398 0.7383881    1     1650 #> 14: 0.0957 0.0913 0.6270592 0.6630343 0.7471420 0.7962380    1     2690 #> 15: 0.1640 0.1490 0.5963068 0.6666910 0.8101212 0.9021914    1     1880 #> 16: 0.2230 0.1990 0.5847079 0.6793822 0.8860340 1.0256228    1     1630 #> 17: 0.2760 0.2540 0.5630667 0.6825926 0.9549260 1.1321776    1     1810 #> 18: 0.3350 0.2960 0.5379829 0.6874366 1.0184757 1.2382688    1     1650 #> 19: 0.0681 0.0603 1.4975900 1.5637260 1.6915459 1.7815789    1     1680 #> 20: 0.0685 0.0581 1.3844261 1.4432948 1.5563715 1.6366359    1     1950 #> 21: 0.0711 0.0598 1.2559059 1.3165307 1.4263844 1.4928907    1     2060 #> 22: 0.0685 0.0591 1.1537298 1.2141830 1.3123995 1.3682055    1     1900 #> 23: 0.0716 0.0607 1.0815706 1.1384217 1.2334137 1.2919373    1     1600 #> 24: 0.0710 0.0605 1.0135264 1.0684785 1.1564525 1.2084725    1     1950 #> 25: 0.0673 0.0601 0.9943510 1.0355014 1.1215529 1.1775412    1     1870 #> 26: 0.0670 0.0543 0.9450732 0.9875849 1.0632862 1.1171555    1     1880 #> 27: 0.0773 0.0653 0.8613230 0.9136048 0.9960948 1.0422764    1     1620 #> 28: 0.0950 0.0878 0.8340182 0.8832537 0.9937574 1.0582853    1     2690 #> 29: 0.1620 0.1470 0.7436281 0.8320547 1.0096318 1.1233168    1     1730 #> 30: 0.2220 0.1980 0.6842034 0.7949878 1.0356641 1.1961916    1     1520 #> 31: 0.2760 0.2550 0.6211747 0.7583794 1.0581191 1.2450981    1     1790 #> 32: 0.3360 0.2970 0.5737853 0.7331851 1.0859987 1.3186011    1     1650 #> 33: 0.0740 0.0652 1.0119349 1.0601995 1.1582712 1.2180050    1     1240 #> 34: 0.0624 0.0524 1.0030296 1.0486837 1.1277385 1.1692437    1     1970 #> 35: 0.0709 0.0535 0.9616271 1.0228062 1.1014669 1.1447003    1     1100 #> 36: 0.0665 0.0550 0.9890603 1.0289321 1.1084122 1.1655747    1     1390 #> 37: 0.0667 0.0541 0.9454446 0.9845632 1.0600330 1.1145253    1     1590 #> 38: 0.0664 0.0498 0.8735911 0.9100227 0.9731040 1.0220029    1     1830 #> 39: 0.0664 0.0523 0.7943634 0.8314012 0.8930231 0.9340003    1     2050 #> 40: 0.0639 0.0530 0.7291636 0.7649624 0.8216600 0.8565987    1     2110 #> 41: 0.0669 0.0540 0.6842034 0.7183591 0.7728160 0.8101212    1     1790 #> 42: 0.0668 0.0503 0.6405039 0.6756559 0.7240256 0.7565939    1     2040 #> 43: 0.0652 0.0561 0.6265667 0.6521840 0.7032801 0.7389685    1     1680 #> 44: 0.0669 0.0534 0.5949029 0.6206869 0.6677395 0.7043861    1     1930 #> 45: 0.0787 0.0684 0.5409499 0.5719848 0.6280454 0.6562963    1     1610 #> 46: 0.0989 0.0907 0.5209283 0.5542877 0.6265667 0.6698414    1     2520 #> 47: 0.1650 0.1490 0.4641057 0.5229788 0.6369908 0.7093848    1     1580 #> 48: 0.2260 0.2010 0.4280260 0.4981129 0.6542369 0.7512626    1     1520 #> 49: 0.2790 0.2550 0.3895133 0.4755488 0.6656442 0.7862908    1     1780 #> 50: 0.3390 0.2970 0.3600802 0.4597505 0.6831291 0.8333632    1     1650 #>         sd    mad        q5       q20       q80       q95 rhat ess_bulk #>     ess_tail #>  1:      859 #>  2:     1520 #>  3:     1140 #>  4:     1410 #>  5:     1460 #>  6:     1580 #>  7:     1730 #>  8:     1680 #>  9:     1600 #> 10:     1700 #> 11:     1650 #> 12:     1360 #> 13:     1640 #> 14:     1670 #> 15:     1530 #> 16:     1540 #> 17:     1620 #> 18:     1480 #> 19:     1530 #> 20:     1660 #> 21:     1380 #> 22:     1640 #> 23:     1550 #> 24:     1560 #> 25:     1460 #> 26:     1280 #> 27:     1790 #> 28:     1680 #> 29:     1590 #> 30:     1600 #> 31:     1630 #> 32:     1520 #> 33:      859 #> 34:     1520 #> 35:     1140 #> 36:     1410 #> 37:     1460 #> 38:     1580 #> 39:     1730 #> 40:     1680 #> 41:     1550 #> 42:     1730 #> 43:     1800 #> 44:     1260 #> 45:     1560 #> 46:     1650 #> 47:     1370 #> 48:     1300 #> 49:     1630 #> 50:     1570 #>     ess_tail  # model parameter summary summary(posterior, type = \"model\") #>             variable                  clean_name exponentiated         mean #> 1: avg_voc_advantage          Average VOC effect          TRUE     1.805793 #> 2:              beta                        Beta         FALSE     0.359000 #> 3:     init_cases[1]               Initial cases          TRUE 89321.723361 #> 4:     init_cases[2]           Initial VOC cases          TRUE   219.203386 #> 5:            phi[1] Notification overdispersion         FALSE    92.000000 #> 6:            phi[2]   Sequencing overdispersion         FALSE   189.000000 #> 7:            r_init              Initial growth         FALSE     0.131000 #> 8:           r_noise                 Growth (sd)         FALSE     0.105000 #> 9:           voc_mod          Initial VOC effect          TRUE     1.805793 #>          median       sd     mad           q5          q20          q80 #> 1:     1.805793   0.0283  0.0265     1.724608     1.764734     1.847808 #> 2:     0.457000   0.4700  0.4870    -0.523000    -0.086800     0.798000 #> 3: 89321.723361   0.0713  0.0721 80821.637540 80821.637540 98715.771011 #> 4:   219.203386   0.0975  0.0971   186.792804   202.350228   237.460193 #> 5:    77.000000  62.0000 47.8000    23.600000    43.500000   130.000000 #> 6:   164.000000 119.0000 99.5000    50.400000    92.800000   266.000000 #> 7:     0.130000   0.0740  0.0652     0.015100     0.074400     0.187000 #> 8:     0.092800   0.0597  0.0576     0.031900     0.052500     0.154000 #> 9:     1.805793   0.0283  0.0265     1.724608     1.764734     1.847808 #>           q95 rhat ess_bulk ess_tail #> 1:     1.8908    1     1880     1410 #> 2:     0.9490    1      616     1090 #> 3: 98715.7710    1     1720     1260 #> 4:   257.2376    1     2220     1480 #> 5:   212.0000    1      809     1100 #> 6:   424.0000    1     2140     1190 #> 7:     0.2510    1     1240      859 #> 8:     0.2200    1      578     1160 #> 9:     1.8908    1     1880     1410  # raw posterior values summary(posterior, type = \"raw\") #>         variable      mean    median     sd    mad        q5       q20 #>   1:        lp__ -3340.000 -3.34e+03 4.5800 4.3800 -3.35e+03 -3.35e+03 #>   2:      r_init     0.131  1.30e-01 0.0740 0.0652  1.51e-02  7.44e-02 #>   3:     r_noise     0.105  9.28e-02 0.0597 0.0576  3.19e-02  5.25e-02 #>   4:        beta     0.359  4.57e-01 0.4700 0.4870 -5.23e-01 -8.68e-02 #>   5:     voc_mod     0.591  5.91e-01 0.0283 0.0265  5.45e-01  5.68e-01 #>  ---                                                                   #> 242: log_lik[11]   -14.800 -1.47e+01 0.7130 0.6130 -1.60e+01 -1.53e+01 #> 243: log_lik[12]   -14.100 -1.40e+01 0.6710 0.6100 -1.53e+01 -1.46e+01 #> 244: log_lik[13]   -13.700 -1.36e+01 0.8350 0.7320 -1.52e+01 -1.43e+01 #> 245: log_lik[14]    -8.160 -8.06e+00 0.5840 0.4510 -9.24e+00 -8.53e+00 #> 246: log_lik[15]    -7.690 -7.56e+00 0.6060 0.4880 -8.86e+00 -8.10e+00 #>            q80       q95 rhat ess_bulk ess_tail #>   1: -3340.000 -3330.000 1.01      546      879 #>   2:     0.187     0.251 1.00     1240      859 #>   3:     0.154     0.220 1.00      578     1160 #>   4:     0.798     0.949 1.00      616     1090 #>   5:     0.614     0.637 1.00     1880     1410 #>  ---                                            #> 242:   -14.200   -13.800 1.00     1100     1210 #> 243:   -13.500   -13.100 1.00      909     1030 #> 244:   -13.000   -12.500 1.00     1280     1510 #> 245:    -7.730    -7.430 1.00     1290     1270 #> 246:    -7.210    -6.950 1.00      903     1490"},{"path":"epiforecasts.io/forecast.vocs/reference/unnest_posterior.html","id":null,"dir":"Reference","previous_headings":"","what":"Unnest posterior estimates from a forecast data.frame — unnest_posterior","title":"Unnest posterior estimates from a forecast data.frame — unnest_posterior","text":"Unnest posterior predictions forecasts output produced forecast() (multiple combined calls) dropping diagnostic fitting variables process.","code":""},{"path":"epiforecasts.io/forecast.vocs/reference/unnest_posterior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unnest posterior estimates from a forecast data.frame — unnest_posterior","text":"","code":"unnest_posterior(forecasts, target = \"posterior\")"},{"path":"epiforecasts.io/forecast.vocs/reference/unnest_posterior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unnest posterior estimates from a forecast data.frame — unnest_posterior","text":"forecasts data frame forecasts produced forecast(). target character string indicating list outputs unnest.","code":""},{"path":"epiforecasts.io/forecast.vocs/reference/unnest_posterior.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Unnest posterior estimates from a forecast data.frame — unnest_posterior","text":"unnested data.frame posterior estimates variables produced forecast().","code":""},{"path":[]},{"path":"epiforecasts.io/forecast.vocs/reference/unnest_posterior.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Unnest posterior estimates from a forecast data.frame — unnest_posterior","text":"","code":"if (FALSE) { # interactive() library(data.table) options(mc.cores = 4) dt <- forecast(   germany_covid19_delta_obs,   forecast_date = as.Date(\"2021-06-12\"),   max_treedepth = 15, adapt_delta = 0.99 )  # unnest posterior predictions posterior <- unnest_posterior(dt) posterior  # unnest forecasts forecasts <- unnest_posterior(dt, target = \"forecast\") forecasts }"},{"path":"epiforecasts.io/forecast.vocs/reference/update_obs_availability.html","id":null,"dir":"Reference","previous_headings":"","what":"Update observations based on availability — update_obs_availability","title":"Update observations based on availability — update_obs_availability","text":"Update observations based availability","code":""},{"path":"epiforecasts.io/forecast.vocs/reference/update_obs_availability.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update observations based on availability — update_obs_availability","text":"","code":"update_obs_availability(obs, cases_lag, seq_lag)"},{"path":"epiforecasts.io/forecast.vocs/reference/update_obs_availability.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update observations based on availability — update_obs_availability","text":"obs data.frame following variables: date, cases, seq_voc, seq_total, cases_available, seq_available. seq_available case_available must uniquely define data rows rows can duplicated based data availability. data format allows multiple versions case sequence data given date different reporting dates. important using package evaluation settings real-time data sources liable updated new data becomes available. See germany_covid19_delta_obs example supported data set. cases_lag Number weeks case data takes reported. Defaults alter input data. seq_lag Number weeks sequence data takes reported. Defaults alter input data.","code":""},{"path":"epiforecasts.io/forecast.vocs/reference/update_obs_availability.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update observations based on availability — update_obs_availability","text":"data.frame observations updated case sequence availability dates.","code":""},{"path":[]},{"path":"epiforecasts.io/forecast.vocs/reference/update_obs_availability.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update observations based on availability — update_obs_availability","text":"","code":"update_obs_availability(   germany_covid19_delta_obs,   cases_lag = 2, seq_lag = 3 ) #>            date location_name location  cases cases_available seq_total seq_voc #>   1: 2021-03-20       Germany       DE  87328      2021-04-03        NA      NA #>   2: 2021-03-27       Germany       DE 109442      2021-04-10        NA      NA #>   3: 2021-04-03       Germany       DE 117965      2021-04-17        NA      NA #>   4: 2021-04-10       Germany       DE 107223      2021-04-24        NA      NA #>   5: 2021-04-17       Germany       DE 142664      2021-05-01      3757       3 #>  ---                                                                            #> 110: 2021-08-14       Germany       DE  28646      2021-08-28        NA      NA #> 111: 2021-08-21       Germany       DE  44862      2021-09-04        NA      NA #> 112: 2021-08-28       Germany       DE  62984      2021-09-11        NA      NA #> 113: 2021-09-04       Germany       DE  71057      2021-09-18        NA      NA #> 114: 2021-09-11       Germany       DE  75107      2021-09-25        NA      NA #>         share_voc seq_available #>   1:           NA          <NA> #>   2:           NA          <NA> #>   3:           NA          <NA> #>   4:           NA          <NA> #>   5: 0.0007985094    2021-05-08 #>  ---                            #> 110:           NA          <NA> #> 111:           NA          <NA> #> 112:           NA          <NA> #> 113:           NA          <NA> #> 114:           NA          <NA>"},{"path":"epiforecasts.io/forecast.vocs/reference/update_voc_label.html","id":null,"dir":"Reference","previous_headings":"","what":"Label the Variant of Concern — update_voc_label","title":"Label the Variant of Concern — update_voc_label","text":"Assign custom label variant concern output fv_tidy_posterior().","code":""},{"path":"epiforecasts.io/forecast.vocs/reference/update_voc_label.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Label the Variant of Concern — update_voc_label","text":"","code":"update_voc_label(posterior, label, target_label = \"VOC\")"},{"path":"epiforecasts.io/forecast.vocs/reference/update_voc_label.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Label the Variant of Concern — update_voc_label","text":"posterior dataframe posterior output produced fv_tidy_posterior(). forecast dates extracted data value_type == \"cases\" must present. label Character string  indicating new label use variant concern. target_label character string defaulting \"VOC\". Indicates current label variant concern.","code":""},{"path":"epiforecasts.io/forecast.vocs/reference/update_voc_label.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Label the Variant of Concern — update_voc_label","text":"list data frames returned `fv_tidy_posterior() updated labels.","code":""},{"path":[]},{"path":"epiforecasts.io/forecast.vocs/reference/update_voc_label.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Label the Variant of Concern — update_voc_label","text":"","code":"p <- fv_example(strains = 2, type = \"posterior\") p <- update_voc_label(p, \"Delta\") summary(p, type = \"cases\") #>               variable       date      type    obs observed forecast_start #>  1:       sim_cases[1] 2021-03-20  Combined  87328     TRUE          FALSE #>  2:       sim_cases[2] 2021-03-27  Combined 109442     TRUE          FALSE #>  3:       sim_cases[3] 2021-04-03  Combined 117965     TRUE          FALSE #>  4:       sim_cases[4] 2021-04-10  Combined 107223     TRUE          FALSE #>  5:       sim_cases[5] 2021-04-17  Combined 142664     TRUE          FALSE #>  6:       sim_cases[6] 2021-04-24  Combined 145568     TRUE          FALSE #>  7:       sim_cases[7] 2021-05-01  Combined 131887     TRUE          FALSE #>  8:       sim_cases[8] 2021-05-08  Combined 107141     TRUE          FALSE #>  9:       sim_cases[9] 2021-05-15  Combined  77261     TRUE          FALSE #> 10:      sim_cases[10] 2021-05-22  Combined  57310     TRUE          FALSE #> 11:      sim_cases[11] 2021-05-29  Combined  33052     TRUE          FALSE #> 12:      sim_cases[12] 2021-06-05  Combined  22631     TRUE          FALSE #> 13:      sim_cases[13] 2021-06-12  Combined  15553     TRUE          FALSE #> 14:      sim_cases[14] 2021-06-19  Combined   7659     TRUE          FALSE #> 15:      sim_cases[15] 2021-06-26  Combined   5033     TRUE           TRUE #> 16:      sim_cases[16] 2021-07-03  Combined     NA    FALSE          FALSE #> 17:      sim_cases[17] 2021-07-10  Combined     NA    FALSE          FALSE #> 18:      sim_cases[18] 2021-07-17  Combined     NA    FALSE          FALSE #> 19:      sim_cases[19] 2021-07-24  Combined     NA    FALSE          FALSE #> 20:   sim_voc_cases[1] 2021-04-17     Delta     NA     TRUE          FALSE #> 21:   sim_voc_cases[2] 2021-04-24     Delta     NA     TRUE          FALSE #> 22:   sim_voc_cases[3] 2021-05-01     Delta     NA     TRUE          FALSE #> 23:   sim_voc_cases[4] 2021-05-08     Delta     NA     TRUE          FALSE #> 24:   sim_voc_cases[5] 2021-05-15     Delta     NA     TRUE          FALSE #> 25:   sim_voc_cases[6] 2021-05-22     Delta     NA     TRUE          FALSE #> 26:   sim_voc_cases[7] 2021-05-29     Delta     NA     TRUE          FALSE #> 27:   sim_voc_cases[8] 2021-06-05     Delta     NA     TRUE          FALSE #> 28:   sim_voc_cases[9] 2021-06-12     Delta     NA     TRUE           TRUE #> 29:  sim_voc_cases[10] 2021-06-19     Delta     NA    FALSE          FALSE #> 30:  sim_voc_cases[11] 2021-06-26     Delta     NA    FALSE          FALSE #> 31:  sim_voc_cases[12] 2021-07-03     Delta     NA    FALSE          FALSE #> 32:  sim_voc_cases[13] 2021-07-10     Delta     NA    FALSE          FALSE #> 33:  sim_voc_cases[14] 2021-07-17     Delta     NA    FALSE          FALSE #> 34:  sim_voc_cases[15] 2021-07-24     Delta     NA    FALSE          FALSE #> 35:  sim_nvoc_cases[1] 2021-03-20 non-Delta     NA     TRUE          FALSE #> 36:  sim_nvoc_cases[2] 2021-03-27 non-Delta     NA     TRUE          FALSE #> 37:  sim_nvoc_cases[3] 2021-04-03 non-Delta     NA     TRUE          FALSE #> 38:  sim_nvoc_cases[4] 2021-04-10 non-Delta     NA     TRUE          FALSE #> 39:  sim_nvoc_cases[5] 2021-04-17 non-Delta     NA     TRUE          FALSE #> 40:  sim_nvoc_cases[6] 2021-04-24 non-Delta     NA     TRUE          FALSE #> 41:  sim_nvoc_cases[7] 2021-05-01 non-Delta     NA     TRUE          FALSE #> 42:  sim_nvoc_cases[8] 2021-05-08 non-Delta     NA     TRUE          FALSE #> 43:  sim_nvoc_cases[9] 2021-05-15 non-Delta     NA     TRUE          FALSE #> 44: sim_nvoc_cases[10] 2021-05-22 non-Delta     NA     TRUE          FALSE #> 45: sim_nvoc_cases[11] 2021-05-29 non-Delta     NA     TRUE          FALSE #> 46: sim_nvoc_cases[12] 2021-06-05 non-Delta     NA     TRUE          FALSE #> 47: sim_nvoc_cases[13] 2021-06-12 non-Delta     NA     TRUE           TRUE #> 48: sim_nvoc_cases[14] 2021-06-19 non-Delta     NA    FALSE          FALSE #> 49: sim_nvoc_cases[15] 2021-06-26 non-Delta     NA    FALSE          FALSE #> 50: sim_nvoc_cases[16] 2021-07-03 non-Delta     NA    FALSE          FALSE #> 51: sim_nvoc_cases[17] 2021-07-10 non-Delta     NA    FALSE          FALSE #> 52: sim_nvoc_cases[18] 2021-07-17 non-Delta     NA    FALSE          FALSE #> 53: sim_nvoc_cases[19] 2021-07-24 non-Delta     NA    FALSE          FALSE #>               variable       date      type    obs observed forecast_start #>       mean median      sd     mad     q5    q20    q80    q95 rhat ess_bulk #>  1:  90100  89500 13400.0 12100.0  69200  79700 100000 112000    1     2060 #>  2: 102000 102000 14700.0 13100.0  78800  91000 113000 126000    1     2130 #>  3: 114000 113000 17600.0 15200.0  86500 100000 126000 143000    1     1980 #>  4: 123000 122000 19100.0 16700.0  93100 109000 137000 154000    1     1820 #>  5: 133000 133000 19900.0 17400.0 104000 118000 148000 164000    1     1920 #>  6: 138000 137000 20400.0 18200.0 106000 122000 153000 172000    1     1910 #>  7: 128000 127000 19100.0 16700.0  98800 113000 142000 160000    1     1860 #>  8: 106000 105000 16300.0 13700.0  82400  94800 117000 132000    1     2090 #>  9:  79600  78800 11800.0 10600.0  62700  70300  88100  99600    1     1880 #> 10:  55700  55200  8510.0  6970.0  43400  49400  61500  69900    1     1890 #> 11:  35800  35500  5540.0  4500.0  27800  31900  39600  45200    1     1870 #> 12:  22900  22700  3230.0  2800.0  17900  20400  25200  28100    1     2200 #> 13:  14200  14000  1910.0  1690.0  11400  12600  15600  17300    1     2160 #> 14:   8310   8240  1130.0   936.0   6700   7440   9080  10200    1     2340 #> 15:   5140   5060   822.0   692.0   4050   4520   5680   6470    1     2140 #> 16:   3400   3300   900.0   789.0   2170   2690   4020   5010    1     2050 #> 17:   2510   2300  1160.0   905.0   1120   1630   3210   4580    1     1780 #> 18:   2130   1710  2140.0  1030.0    551    999   2880   4920    1     1810 #> 19:   2160   1340  6260.0  1110.0    256    611   2850   5870    1     1710 #> 20:    221    218    40.0    37.1    162    189    252    288    1     2010 #> 21:    410    408    71.1    68.2    301    351    469    528    1     1800 #> 22:    684    673   124.0   108.0    507    588    772    900    1     1970 #> 23:   1030   1010   194.0   175.0    742    869   1170   1360    1     2290 #> 24:   1380   1350   269.0   234.0    991   1170   1580   1830    1     2270 #> 25:   1720   1680   330.0   307.0   1230   1450   1960   2290    1     2280 #> 26:   1960   1920   413.0   354.0   1390   1650   2250   2670    1     2300 #> 27:   2170   2140   459.0   411.0   1500   1810   2500   2980    1     2250 #> 28:   2230   2200   490.0   442.0   1510   1830   2580   3060    1     2130 #> 29:   2110   2080   490.0   451.0   1420   1710   2460   2950    1     2270 #> 30:   1950   1910   464.0   422.0   1300   1570   2290   2770    1     2250 #> 31:   1780   1700   575.0   497.0   1040   1320   2170   2810    1     2210 #> 32:   1670   1520   844.0   630.0    703   1050   2160   3090    1     2010 #> 33:   1660   1320  1760.0   824.0    417    744   2250   3840    1     1850 #> 34:   1860   1150  5590.0   959.0    222    522   2450   5170    1     1760 #> 35:  90100  89500 13400.0 12100.0  69200  79700 100000 112000    1     2060 #> 36: 102000 102000 14700.0 13100.0  78800  91000 113000 126000    1     2130 #> 37: 114000 113000 17600.0 15200.0  86500 100000 126000 143000    1     1980 #> 38: 123000 122000 19100.0 16700.0  93100 109000 137000 154000    1     1820 #> 39: 133000 133000 19900.0 17400.0 103000 118000 147000 164000    1     1920 #> 40: 138000 137000 20400.0 18100.0 105000 122000 153000 172000    1     1910 #> 41: 127000 127000 19100.0 16600.0  98200 113000 141000 159000    1     1860 #> 42: 105000 105000 16200.0 13600.0  81500  93700 116000 131000    1     2090 #> 43:  78300  77400 11700.0 10500.0  61300  69000  86700  97800    1     1880 #> 44:  54000  53500  8450.0  6980.0  41700  47700  59700  67900    1     1890 #> 45:  33900  33500  5430.0  4340.0  26000  30100  37600  43100    1     1870 #> 46:  20700  20600  3130.0  2630.0  15900  18300  23000  25800    1     2180 #> 47:  11900  11800  1830.0  1630.0   9290  10500  13300  15100    1     2200 #> 48:   6200   6130  1040.0   901.0   4680   5400   6940   7860    1     2220 #> 49:   3190   3130   664.0   544.0   2290   2700   3620   4290    1     1950 #> 50:   1620   1550   498.0   423.0    958   1240   1960   2490    1     1950 #> 51:    837    753   415.0   322.0    351    517   1090   1580    1     1850 #> 52:    467    368   432.0   232.0    113    212    641   1080    1     1720 #> 53:    296    177   709.0   151.0     32     79    381    827    1     1510 #>       mean median      sd     mad     q5    q20    q80    q95 rhat ess_bulk #>     ess_tail #>  1:     1860 #>  2:     1850 #>  3:     1700 #>  4:     1760 #>  5:     1350 #>  6:     1860 #>  7:     1780 #>  8:     1820 #>  9:     1750 #> 10:     1650 #> 11:     1700 #> 12:     1850 #> 13:     1780 #> 14:     1850 #> 15:     1750 #> 16:     1580 #> 17:     1620 #> 18:     1460 #> 19:     1720 #> 20:     1850 #> 21:     1750 #> 22:     1770 #> 23:     1850 #> 24:     1820 #> 25:     1550 #> 26:     1650 #> 27:     1720 #> 28:     1660 #> 29:     1660 #> 30:     1630 #> 31:     1450 #> 32:     1640 #> 33:     1610 #> 34:     1720 #> 35:     1860 #> 36:     1850 #> 37:     1700 #> 38:     1760 #> 39:     1350 #> 40:     1790 #> 41:     1780 #> 42:     1820 #> 43:     1780 #> 44:     1670 #> 45:     1670 #> 46:     1880 #> 47:     1850 #> 48:     1700 #> 49:     1420 #> 50:     1420 #> 51:     1720 #> 52:     1500 #> 53:     1490 #>     ess_tail summary(p, type = \"model\") #>             variable                  clean_name exponentiated         mean #> 1: avg_voc_advantage        Average Delta effect          TRUE     1.805793 #> 2:              beta                        Beta         FALSE     0.359000 #> 3:     init_cases[1]               Initial cases          TRUE 89321.723361 #> 4:     init_cases[2]         Initial Delta cases          TRUE   219.203386 #> 5:            phi[1] Notification overdispersion         FALSE    92.000000 #> 6:            phi[2]   Sequencing overdispersion         FALSE   189.000000 #> 7:            r_init              Initial growth         FALSE     0.131000 #> 8:           r_noise                 Growth (sd)         FALSE     0.105000 #> 9:           voc_mod        Initial Delta effect          TRUE     1.805793 #>          median       sd     mad           q5          q20          q80 #> 1:     1.805793   0.0283  0.0265     1.724608     1.764734     1.847808 #> 2:     0.457000   0.4700  0.4870    -0.523000    -0.086800     0.798000 #> 3: 89321.723361   0.0713  0.0721 80821.637540 80821.637540 98715.771011 #> 4:   219.203386   0.0975  0.0971   186.792804   202.350228   237.460193 #> 5:    77.000000  62.0000 47.8000    23.600000    43.500000   130.000000 #> 6:   164.000000 119.0000 99.5000    50.400000    92.800000   266.000000 #> 7:     0.130000   0.0740  0.0652     0.015100     0.074400     0.187000 #> 8:     0.092800   0.0597  0.0576     0.031900     0.052500     0.154000 #> 9:     1.805793   0.0283  0.0265     1.724608     1.764734     1.847808 #>           q95 rhat ess_bulk ess_tail #> 1:     1.8908    1     1880     1410 #> 2:     0.9490    1      616     1090 #> 3: 98715.7710    1     1720     1260 #> 4:   257.2376    1     2220     1480 #> 5:   212.0000    1      809     1100 #> 6:   424.0000    1     2140     1190 #> 7:     0.2510    1     1240      859 #> 8:     0.2200    1      578     1160 #> 9:     1.8908    1     1880     1410"},{"path":[]},{"path":"epiforecasts.io/forecast.vocs/news/index.html","id":"features-0-0-9","dir":"Changelog","previous_headings":"","what":"Features","title":"forecast.vocs 0.0.9","text":"Adds optional integration scoringutils package streamline evaluating forecasts using proper scoring rules. Adds example using fv_score_forecast() README.","code":""},{"path":"epiforecasts.io/forecast.vocs/news/index.html","id":"bug-fixes-0-0-9","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"forecast.vocs 0.0.9","text":"Fixed bug output forecast() function prior specifications initial growth variant scaling partially included.","code":""},{"path":[]},{"path":"epiforecasts.io/forecast.vocs/news/index.html","id":"features-0-0-8","dir":"Changelog","previous_headings":"","what":"Features","title":"forecast.vocs 0.0.8","text":"Adds summary plot methods forecast() fv_tidy_posterior() interfaces lower level functions. Adds new summary variable transmission advantage VOC output fv_tidy_posterior(). Adds new plotting function plot_voc_advantage() extract plot . Adds plot_voc_advantage() plot_posterior additional output. Added new timespan argument allows custom date processing. allows use data non-weekly spaces (though spacing must constant across sequences case counts). Updates example data include new output. Adds tests new functionality.","code":""},{"path":"epiforecasts.io/forecast.vocs/news/index.html","id":"breaking-changes-0-0-8","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"forecast.vocs 0.0.8","text":"variant fraction label renamed voc_frac voc due new variant advantage label. plot_voc() renamed plot_voc_frac() due new plot_voc_advantage() function.","code":""},{"path":"epiforecasts.io/forecast.vocs/news/index.html","id":"bug-fixes-0-0-8","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"forecast.vocs 0.0.8","text":"Spell checks documentation. Refactors model description improve clarity. Fixed issue voc_label passed forecast() lower level methods hence new labels specifying VOC assigned.","code":""},{"path":"epiforecasts.io/forecast.vocs/news/index.html","id":"forecastvocs-007","dir":"Changelog","previous_headings":"","what":"forecast.vocs 0.0.7","title":"forecast.vocs 0.0.7","text":"generalised forecast family accept custom data forecast extraction functions. Split generic posterior summary function specific posterior summary function. Catch data passing bugs forecast new tests Add argument passing fv_posterior allow used forecast. Added runtime diagnostic fit output. Fixes generate_obs() work strain models adds unit tests function functionality. Fixed package building r-universe.","code":""},{"path":"epiforecasts.io/forecast.vocs/news/index.html","id":"forecastvocs-006","dir":"Changelog","previous_headings":"","what":"forecast.vocs 0.0.6","title":"forecast.vocs 0.0.6","text":"Add vignette defining package models. Updated documentation use preferably. Add basic tests modelling functions. Add tests postprocessing functions. Add tests plotting functions. Add tests forecasting functions. Add new utility, fv_example() can used load built example output scripts. used postprocessing plotting examples well testing plotting static input. Model specific functions (.e load_model, summarise_posterior, functions prefixed stan_ renamed fv_ prefix). Added ability pass model specific functions forecast function wrappers enabling users supply custom models make use remaining package functionality.","code":""},{"path":"epiforecasts.io/forecast.vocs/news/index.html","id":"forecastvocs-005","dir":"Changelog","previous_headings":"","what":"forecast.vocs 0.0.5","title":"forecast.vocs 0.0.5","text":"Overhaul package documentation examples. Enforce proper printing data.table output. Add structure documentation website.","code":""},{"path":"epiforecasts.io/forecast.vocs/news/index.html","id":"forecastvocs-004","dir":"Changelog","previous_headings":"","what":"forecast.vocs 0.0.4","title":"forecast.vocs 0.0.4","text":"Improve robustness plotting observations forecast dates can faceted using variables used plotting estimates/forecasts. Added option scale growth rates reproduction numbers. allows crude scaling generation time etc increasing interpretability estimates. Surfaced options plotting allow increased generalisability.","code":""},{"path":"epiforecasts.io/forecast.vocs/news/index.html","id":"forecastvocs-003","dir":"Changelog","previous_headings":"","what":"forecast.vocs 0.0.3","title":"forecast.vocs 0.0.3","text":"fv_tidy_posterior now returns single data.table downstream processing plotting functions updated use forma forecast updated use framework forecast_dt forecast_dt removed. combine_posteriors_dt removed favour unnest_posterior. allows output forecast (wrappers produce data.table) easily untested used without additional changes downstream plotting processing functions. add update_voc_label part workflow forecast exposed user facing argument control label. Fixes bug specifying number initial weeks without sequence data. resulting weeks without sequence data assumed start likely causing model fitting issues. Added check functions make sure input observation arguments correct format. Added unit tests preprocessing functions. Custom VOC labelling now feature fv_tidy_posterior() (hence forecast()) well standalone option via update_voc_label().","code":""},{"path":"epiforecasts.io/forecast.vocs/news/index.html","id":"infrastructure-0-0-3","dir":"Changelog","previous_headings":"","what":"Infrastructure","title":"forecast.vocs 0.0.3","text":"Switched installing cmdstanr GitHub.","code":""},{"path":"epiforecasts.io/forecast.vocs/news/index.html","id":"forecastvocs-002","dir":"Changelog","previous_headings":"","what":"forecast.vocs 0.0.2","title":"forecast.vocs 0.0.2","text":"Package generalised variants concern beyond Delta. Tooling added forecast across dates scenarios. Tooling added prior posterior predictive checks. Tooling added simulating data model (useful simulation-based calibration amongst things). Example data updated use snapshots COVID-19 notifications Delta sequences sourced RKI (Germany).","code":""},{"path":"epiforecasts.io/forecast.vocs/news/index.html","id":"forecastvocs-001","dir":"Changelog","previous_headings":"","what":"forecast.vocs 0.0.1","title":"forecast.vocs 0.0.1","text":"Extracted package code analysis code started work generalising use case. Added initial version forecasting model 1 2 strains optional independence, partial pooling, scaled relationships.","code":""}]
